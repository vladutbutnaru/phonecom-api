/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.ApplicationSummary;
import io.swagger.client.model.ExtensionSummary;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


/**
 * SMS Forwarding Object, or NULL
 **/
@ApiModel(description = "SMS Forwarding Object, or NULL")
public class SmsForwarding  {
  
  @SerializedName("type")
  private String type = null;
  @SerializedName("extension")
  private ExtensionSummary extension = null;
  @SerializedName("application")
  private ApplicationSummary application = null;

  /**
   * Can be \"extension\" or \"application\"
   **/
  @ApiModelProperty(value = "Can be \"extension\" or \"application\"")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   * Required if type = \"extension\". Extension that messages should be directed to. Output is an Extension Summary Object. Input must be an Extension Lookup Object.
   **/
  @ApiModelProperty(value = "Required if type = \"extension\". Extension that messages should be directed to. Output is an Extension Summary Object. Input must be an Extension Lookup Object.")
  public ExtensionSummary getExtension() {
    return extension;
  }
  public void setExtension(ExtensionSummary extension) {
    this.extension = extension;
  }

  /**
   * Required if type = \"application\". Application that messages should be directed to. Output is an Application Summary Object. Input must be an Application Lookup Object.
   **/
  @ApiModelProperty(value = "Required if type = \"application\". Application that messages should be directed to. Output is an Application Summary Object. Input must be an Application Lookup Object.")
  public ApplicationSummary getApplication() {
    return application;
  }
  public void setApplication(ApplicationSummary application) {
    this.application = application;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SmsForwarding smsForwarding = (SmsForwarding) o;
    return (type == null ? smsForwarding.type == null : type.equals(smsForwarding.type)) &&
        (extension == null ? smsForwarding.extension == null : extension.equals(smsForwarding.extension)) &&
        (application == null ? smsForwarding.application == null : application.equals(smsForwarding.application));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (type == null ? 0: type.hashCode());
    result = 31 * result + (extension == null ? 0: extension.hashCode());
    result = 31 * result + (application == null ? 0: application.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class SmsForwarding {\n");
    
    sb.append("  type: ").append(type).append("\n");
    sb.append("  extension: ").append(extension).append("\n");
    sb.append("  application: ").append(application).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
