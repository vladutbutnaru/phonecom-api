/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.HoldMusic;
import io.swagger.client.model.MediaSummary;
import io.swagger.client.model.Members;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


/**
 * The Full QueueObject has the same properties as the Queue Summary Object, along with the following:
 **/
@ApiModel(description = "The Full QueueObject has the same properties as the Queue Summary Object, along with the following:")
public class QueueFull  {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("greeting")
  private MediaSummary greeting = null;
  @SerializedName("hold_music")
  private HoldMusic holdMusic = null;
  @SerializedName("max_hold_time")
  private Integer maxHoldTime = null;
  @SerializedName("caller_id_type")
  private String callerIdType = null;
  @SerializedName("ring_time")
  private Integer ringTime = null;
  @SerializedName("members")
  private Members members = null;

  /**
   * Integer ID. Read-only.
   **/
  @ApiModelProperty(required = true, value = "Integer ID. Read-only.")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   * Name. Required.
   **/
  @ApiModelProperty(required = true, value = "Name. Required.")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Greeting to be played when caller first connects. Output is a Media Summary Object. Input must be a Media Lookup Object. Must refer to a media recording that has is_hold_music set to FALSE. Can be set to NULL to disable the greeting.
   **/
  @ApiModelProperty(value = "Greeting to be played when caller first connects. Output is a Media Summary Object. Input must be a Media Lookup Object. Must refer to a media recording that has is_hold_music set to FALSE. Can be set to NULL to disable the greeting.")
  public MediaSummary getGreeting() {
    return greeting;
  }
  public void setGreeting(MediaSummary greeting) {
    this.greeting = greeting;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public HoldMusic getHoldMusic() {
    return holdMusic;
  }
  public void setHoldMusic(HoldMusic holdMusic) {
    this.holdMusic = holdMusic;
  }

  /**
   * Maximum hold time in seconds. If provided, must equal one of: 60, 120, 180, 240, 300, 600, 900, 1200, 1800, 2700, 3600. Default is 300.
   **/
  @ApiModelProperty(value = "Maximum hold time in seconds. If provided, must equal one of: 60, 120, 180, 240, 300, 600, 900, 1200, 1800, 2700, 3600. Default is 300.")
  public Integer getMaxHoldTime() {
    return maxHoldTime;
  }
  public void setMaxHoldTime(Integer maxHoldTime) {
    this.maxHoldTime = maxHoldTime;
  }

  /**
   * Caller id type to show members. If provided, must equal one of: 'called_number', 'calling_number'. Default is 'calling_number'.
   **/
  @ApiModelProperty(value = "Caller id type to show members. If provided, must equal one of: 'called_number', 'calling_number'. Default is 'calling_number'.")
  public String getCallerIdType() {
    return callerIdType;
  }
  public void setCallerIdType(String callerIdType) {
    this.callerIdType = callerIdType;
  }

  /**
   * Number of seconds to ring a member before cycling to the next member. If provided, must equal one of: 5, 10, 15, 20, 25, 30. Default is 5.
   **/
  @ApiModelProperty(value = "Number of seconds to ring a member before cycling to the next member. If provided, must equal one of: 5, 10, 15, 20, 25, 30. Default is 5.")
  public Integer getRingTime() {
    return ringTime;
  }
  public void setRingTime(Integer ringTime) {
    this.ringTime = ringTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Members getMembers() {
    return members;
  }
  public void setMembers(Members members) {
    this.members = members;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueueFull queueFull = (QueueFull) o;
    return (id == null ? queueFull.id == null : id.equals(queueFull.id)) &&
        (name == null ? queueFull.name == null : name.equals(queueFull.name)) &&
        (greeting == null ? queueFull.greeting == null : greeting.equals(queueFull.greeting)) &&
        (holdMusic == null ? queueFull.holdMusic == null : holdMusic.equals(queueFull.holdMusic)) &&
        (maxHoldTime == null ? queueFull.maxHoldTime == null : maxHoldTime.equals(queueFull.maxHoldTime)) &&
        (callerIdType == null ? queueFull.callerIdType == null : callerIdType.equals(queueFull.callerIdType)) &&
        (ringTime == null ? queueFull.ringTime == null : ringTime.equals(queueFull.ringTime)) &&
        (members == null ? queueFull.members == null : members.equals(queueFull.members));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (id == null ? 0: id.hashCode());
    result = 31 * result + (name == null ? 0: name.hashCode());
    result = 31 * result + (greeting == null ? 0: greeting.hashCode());
    result = 31 * result + (holdMusic == null ? 0: holdMusic.hashCode());
    result = 31 * result + (maxHoldTime == null ? 0: maxHoldTime.hashCode());
    result = 31 * result + (callerIdType == null ? 0: callerIdType.hashCode());
    result = 31 * result + (ringTime == null ? 0: ringTime.hashCode());
    result = 31 * result + (members == null ? 0: members.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueueFull {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  greeting: ").append(greeting).append("\n");
    sb.append("  holdMusic: ").append(holdMusic).append("\n");
    sb.append("  maxHoldTime: ").append(maxHoldTime).append("\n");
    sb.append("  callerIdType: ").append(callerIdType).append("\n");
    sb.append("  ringTime: ").append(ringTime).append("\n");
    sb.append("  members: ").append(members).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
