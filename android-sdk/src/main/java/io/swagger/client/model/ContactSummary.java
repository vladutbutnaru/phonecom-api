/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;


import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


/**
 * The Contact Summary Object is used to briefly represent a contact from your address book. It can be seen in several places throughout this API. Here are the properties:
 **/
@ApiModel(description = "The Contact Summary Object is used to briefly represent a contact from your address book. It can be seen in several places throughout this API. Here are the properties:")
public class ContactSummary  {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("prefix")
  private String prefix = null;
  @SerializedName("first_name")
  private String firstName = null;
  @SerializedName("middle_name")
  private String middleName = null;
  @SerializedName("last_name")
  private String lastName = null;
  @SerializedName("suffix")
  private String suffix = null;
  @SerializedName("nickname")
  private String nickname = null;
  @SerializedName("company")
  private String company = null;

  /**
   * Integer ID. Read-only.
   **/
  @ApiModelProperty(value = "Integer ID. Read-only.")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   * Salutation, such as Mr, Mrs, or Dr
   **/
  @ApiModelProperty(value = "Salutation, such as Mr, Mrs, or Dr")
  public String getPrefix() {
    return prefix;
  }
  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }

  /**
   * First name or given name
   **/
  @ApiModelProperty(value = "First name or given name")
  public String getFirstName() {
    return firstName;
  }
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  /**
   * Middle or second name
   **/
  @ApiModelProperty(value = "Middle or second name")
  public String getMiddleName() {
    return middleName;
  }
  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  /**
   * Last name or surname
   **/
  @ApiModelProperty(value = "Last name or surname")
  public String getLastName() {
    return lastName;
  }
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  /**
   * Suffix, such as 'Jr.', 'Sr.', 'II', or 'III'
   **/
  @ApiModelProperty(value = "Suffix, such as 'Jr.', 'Sr.', 'II', or 'III'")
  public String getSuffix() {
    return suffix;
  }
  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }

  /**
   * Nickname, or a shortened informal version of the contact's name
   **/
  @ApiModelProperty(value = "Nickname, or a shortened informal version of the contact's name")
  public String getNickname() {
    return nickname;
  }
  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

  /**
   * Name of the contact's company
   **/
  @ApiModelProperty(value = "Name of the contact's company")
  public String getCompany() {
    return company;
  }
  public void setCompany(String company) {
    this.company = company;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactSummary contactSummary = (ContactSummary) o;
    return (id == null ? contactSummary.id == null : id.equals(contactSummary.id)) &&
        (prefix == null ? contactSummary.prefix == null : prefix.equals(contactSummary.prefix)) &&
        (firstName == null ? contactSummary.firstName == null : firstName.equals(contactSummary.firstName)) &&
        (middleName == null ? contactSummary.middleName == null : middleName.equals(contactSummary.middleName)) &&
        (lastName == null ? contactSummary.lastName == null : lastName.equals(contactSummary.lastName)) &&
        (suffix == null ? contactSummary.suffix == null : suffix.equals(contactSummary.suffix)) &&
        (nickname == null ? contactSummary.nickname == null : nickname.equals(contactSummary.nickname)) &&
        (company == null ? contactSummary.company == null : company.equals(contactSummary.company));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (id == null ? 0: id.hashCode());
    result = 31 * result + (prefix == null ? 0: prefix.hashCode());
    result = 31 * result + (firstName == null ? 0: firstName.hashCode());
    result = 31 * result + (middleName == null ? 0: middleName.hashCode());
    result = 31 * result + (lastName == null ? 0: lastName.hashCode());
    result = 31 * result + (suffix == null ? 0: suffix.hashCode());
    result = 31 * result + (nickname == null ? 0: nickname.hashCode());
    result = 31 * result + (company == null ? 0: company.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactSummary {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  prefix: ").append(prefix).append("\n");
    sb.append("  firstName: ").append(firstName).append("\n");
    sb.append("  middleName: ").append(middleName).append("\n");
    sb.append("  lastName: ").append(lastName).append("\n");
    sb.append("  suffix: ").append(suffix).append("\n");
    sb.append("  nickname: ").append(nickname).append("\n");
    sb.append("  company: ").append(company).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
