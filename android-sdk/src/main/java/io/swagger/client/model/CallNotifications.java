/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import java.util.*;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


/**
 * Call Notifications Object or NULL
 **/
@ApiModel(description = "Call Notifications Object or NULL")
public class CallNotifications  {
  
  @SerializedName("emails")
  private List<String> emails = null;
  @SerializedName("sms")
  private String sms = null;

  /**
   * Array of email addresses
   **/
  @ApiModelProperty(value = "Array of email addresses")
  public List<String> getEmails() {
    return emails;
  }
  public void setEmails(List<String> emails) {
    this.emails = emails;
  }

  /**
   * A phone number capable of receiving SMS messages
   **/
  @ApiModelProperty(value = "A phone number capable of receiving SMS messages")
  public String getSms() {
    return sms;
  }
  public void setSms(String sms) {
    this.sms = sms;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallNotifications callNotifications = (CallNotifications) o;
    return (emails == null ? callNotifications.emails == null : emails.equals(callNotifications.emails)) &&
        (sms == null ? callNotifications.sms == null : sms.equals(callNotifications.sms));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (emails == null ? 0: emails.hashCode());
    result = 31 * result + (sms == null ? 0: sms.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallNotifications {\n");
    
    sb.append("  emails: ").append(emails).append("\n");
    sb.append("  sms: ").append(sms).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
