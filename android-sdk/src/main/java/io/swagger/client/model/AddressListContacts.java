/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;


import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class AddressListContacts  {
  
  @SerializedName("type")
  private String type = null;
  @SerializedName("street")
  private String street = null;
  @SerializedName("city")
  private String city = null;
  @SerializedName("state")
  private String state = null;
  @SerializedName("zip")
  private String zip = null;
  @SerializedName("country")
  private String country = null;

  /**
   * Address type, one of: home or business. Default is home.
   **/
  @ApiModelProperty(value = "Address type, one of: home or business. Default is home.")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }

  /**
   * House number and street name, including apartment, suite, etc.
   **/
  @ApiModelProperty(value = "House number and street name, including apartment, suite, etc.")
  public String getStreet() {
    return street;
  }
  public void setStreet(String street) {
    this.street = street;
  }

  /**
   * City
   **/
  @ApiModelProperty(value = "City")
  public String getCity() {
    return city;
  }
  public void setCity(String city) {
    this.city = city;
  }

  /**
   * State or province
   **/
  @ApiModelProperty(value = "State or province")
  public String getState() {
    return state;
  }
  public void setState(String state) {
    this.state = state;
  }

  /**
   * Zip code or postal code
   **/
  @ApiModelProperty(value = "Zip code or postal code")
  public String getZip() {
    return zip;
  }
  public void setZip(String zip) {
    this.zip = zip;
  }

  /**
   * Country name
   **/
  @ApiModelProperty(value = "Country name")
  public String getCountry() {
    return country;
  }
  public void setCountry(String country) {
    this.country = country;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddressListContacts addressListContacts = (AddressListContacts) o;
    return (type == null ? addressListContacts.type == null : type.equals(addressListContacts.type)) &&
        (street == null ? addressListContacts.street == null : street.equals(addressListContacts.street)) &&
        (city == null ? addressListContacts.city == null : city.equals(addressListContacts.city)) &&
        (state == null ? addressListContacts.state == null : state.equals(addressListContacts.state)) &&
        (zip == null ? addressListContacts.zip == null : zip.equals(addressListContacts.zip)) &&
        (country == null ? addressListContacts.country == null : country.equals(addressListContacts.country));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (type == null ? 0: type.hashCode());
    result = 31 * result + (street == null ? 0: street.hashCode());
    result = 31 * result + (city == null ? 0: city.hashCode());
    result = 31 * result + (state == null ? 0: state.hashCode());
    result = 31 * result + (zip == null ? 0: zip.hashCode());
    result = 31 * result + (country == null ? 0: country.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddressListContacts {\n");
    
    sb.append("  type: ").append(type).append("\n");
    sb.append("  street: ").append(street).append("\n");
    sb.append("  city: ").append(city).append("\n");
    sb.append("  state: ").append(state).append("\n");
    sb.append("  zip: ").append(zip).append("\n");
    sb.append("  country: ").append(country).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
