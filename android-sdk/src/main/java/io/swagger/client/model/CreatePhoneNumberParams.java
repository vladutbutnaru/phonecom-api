/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import java.util.*;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class CreatePhoneNumberParams  {
  
  @SerializedName("phone_number")
  private Object phoneNumber = null;
  @SerializedName("route")
  private Object route = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("block_incoming")
  private Boolean blockIncoming = null;
  @SerializedName("block_anonymous")
  private Boolean blockAnonymous = null;
  @SerializedName("caller_id[name]")
  private String callerIdName = null;
  @SerializedName("caller_id[type]")
  private String callerIdType = null;
  @SerializedName("sms_forwarding[type]")
  private String smsForwardingType = null;
  @SerializedName("sms_forwarding[application]")
  private Object smsForwardingApplication = null;
  @SerializedName("sms_forwarding[extension]")
  private Object smsForwardingExtension = null;
  @SerializedName("call_notifications[emails]")
  private List<String> callNotificationsEmails = null;
  @SerializedName("call_notifications[sms]")
  private String callNotificationsSms = null;

  /**
   * Phone number
   **/
  @ApiModelProperty(value = "Phone number")
  public Object getPhoneNumber() {
    return phoneNumber;
  }
  public void setPhoneNumber(Object phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  /**
   * Route lookup object
   **/
  @ApiModelProperty(value = "Route lookup object")
  public Object getRoute() {
    return route;
  }
  public void setRoute(Object route) {
    this.route = route;
  }

  /**
   * Phone Name
   **/
  @ApiModelProperty(value = "Phone Name")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Block incoming calls
   **/
  @ApiModelProperty(value = "Block incoming calls")
  public Boolean getBlockIncoming() {
    return blockIncoming;
  }
  public void setBlockIncoming(Boolean blockIncoming) {
    this.blockIncoming = blockIncoming;
  }

  /**
   * Block anonymous calls
   **/
  @ApiModelProperty(value = "Block anonymous calls")
  public Boolean getBlockAnonymous() {
    return blockAnonymous;
  }
  public void setBlockAnonymous(Boolean blockAnonymous) {
    this.blockAnonymous = blockAnonymous;
  }

  /**
   * Caller ID name
   **/
  @ApiModelProperty(value = "Caller ID name")
  public String getCallerIdName() {
    return callerIdName;
  }
  public void setCallerIdName(String callerIdName) {
    this.callerIdName = callerIdName;
  }

  /**
   * Caller ID type
   **/
  @ApiModelProperty(value = "Caller ID type")
  public String getCallerIdType() {
    return callerIdType;
  }
  public void setCallerIdType(String callerIdType) {
    this.callerIdType = callerIdType;
  }

  /**
   * 'application' or 'extension'
   **/
  @ApiModelProperty(value = "'application' or 'extension'")
  public String getSmsForwardingType() {
    return smsForwardingType;
  }
  public void setSmsForwardingType(String smsForwardingType) {
    this.smsForwardingType = smsForwardingType;
  }

  /**
   * Application lookup object
   **/
  @ApiModelProperty(value = "Application lookup object")
  public Object getSmsForwardingApplication() {
    return smsForwardingApplication;
  }
  public void setSmsForwardingApplication(Object smsForwardingApplication) {
    this.smsForwardingApplication = smsForwardingApplication;
  }

  /**
   * Extension lookup object
   **/
  @ApiModelProperty(value = "Extension lookup object")
  public Object getSmsForwardingExtension() {
    return smsForwardingExtension;
  }
  public void setSmsForwardingExtension(Object smsForwardingExtension) {
    this.smsForwardingExtension = smsForwardingExtension;
  }

  /**
   * Call notifications for emails. Can be a single email or an array of emails
   **/
  @ApiModelProperty(value = "Call notifications for emails. Can be a single email or an array of emails")
  public List<String> getCallNotificationsEmails() {
    return callNotificationsEmails;
  }
  public void setCallNotificationsEmails(List<String> callNotificationsEmails) {
    this.callNotificationsEmails = callNotificationsEmails;
  }

  /**
   * Call notification for SMS
   **/
  @ApiModelProperty(value = "Call notification for SMS")
  public String getCallNotificationsSms() {
    return callNotificationsSms;
  }
  public void setCallNotificationsSms(String callNotificationsSms) {
    this.callNotificationsSms = callNotificationsSms;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreatePhoneNumberParams createPhoneNumberParams = (CreatePhoneNumberParams) o;
    return (phoneNumber == null ? createPhoneNumberParams.phoneNumber == null : phoneNumber.equals(createPhoneNumberParams.phoneNumber)) &&
        (route == null ? createPhoneNumberParams.route == null : route.equals(createPhoneNumberParams.route)) &&
        (name == null ? createPhoneNumberParams.name == null : name.equals(createPhoneNumberParams.name)) &&
        (blockIncoming == null ? createPhoneNumberParams.blockIncoming == null : blockIncoming.equals(createPhoneNumberParams.blockIncoming)) &&
        (blockAnonymous == null ? createPhoneNumberParams.blockAnonymous == null : blockAnonymous.equals(createPhoneNumberParams.blockAnonymous)) &&
        (callerIdName == null ? createPhoneNumberParams.callerIdName == null : callerIdName.equals(createPhoneNumberParams.callerIdName)) &&
        (callerIdType == null ? createPhoneNumberParams.callerIdType == null : callerIdType.equals(createPhoneNumberParams.callerIdType)) &&
        (smsForwardingType == null ? createPhoneNumberParams.smsForwardingType == null : smsForwardingType.equals(createPhoneNumberParams.smsForwardingType)) &&
        (smsForwardingApplication == null ? createPhoneNumberParams.smsForwardingApplication == null : smsForwardingApplication.equals(createPhoneNumberParams.smsForwardingApplication)) &&
        (smsForwardingExtension == null ? createPhoneNumberParams.smsForwardingExtension == null : smsForwardingExtension.equals(createPhoneNumberParams.smsForwardingExtension)) &&
        (callNotificationsEmails == null ? createPhoneNumberParams.callNotificationsEmails == null : callNotificationsEmails.equals(createPhoneNumberParams.callNotificationsEmails)) &&
        (callNotificationsSms == null ? createPhoneNumberParams.callNotificationsSms == null : callNotificationsSms.equals(createPhoneNumberParams.callNotificationsSms));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (phoneNumber == null ? 0: phoneNumber.hashCode());
    result = 31 * result + (route == null ? 0: route.hashCode());
    result = 31 * result + (name == null ? 0: name.hashCode());
    result = 31 * result + (blockIncoming == null ? 0: blockIncoming.hashCode());
    result = 31 * result + (blockAnonymous == null ? 0: blockAnonymous.hashCode());
    result = 31 * result + (callerIdName == null ? 0: callerIdName.hashCode());
    result = 31 * result + (callerIdType == null ? 0: callerIdType.hashCode());
    result = 31 * result + (smsForwardingType == null ? 0: smsForwardingType.hashCode());
    result = 31 * result + (smsForwardingApplication == null ? 0: smsForwardingApplication.hashCode());
    result = 31 * result + (smsForwardingExtension == null ? 0: smsForwardingExtension.hashCode());
    result = 31 * result + (callNotificationsEmails == null ? 0: callNotificationsEmails.hashCode());
    result = 31 * result + (callNotificationsSms == null ? 0: callNotificationsSms.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreatePhoneNumberParams {\n");
    
    sb.append("  phoneNumber: ").append(phoneNumber).append("\n");
    sb.append("  route: ").append(route).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  blockIncoming: ").append(blockIncoming).append("\n");
    sb.append("  blockAnonymous: ").append(blockAnonymous).append("\n");
    sb.append("  callerIdName: ").append(callerIdName).append("\n");
    sb.append("  callerIdType: ").append(callerIdType).append("\n");
    sb.append("  smsForwardingType: ").append(smsForwardingType).append("\n");
    sb.append("  smsForwardingApplication: ").append(smsForwardingApplication).append("\n");
    sb.append("  smsForwardingExtension: ").append(smsForwardingExtension).append("\n");
    sb.append("  callNotificationsEmails: ").append(callNotificationsEmails).append("\n");
    sb.append("  callNotificationsSms: ").append(callNotificationsSms).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
