/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.Addresses;
import io.swagger.client.model.Emails;
import io.swagger.client.model.GroupListContacts;
import io.swagger.client.model.PhoneNumberContact;
import java.util.*;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


/**
 * The Full Contact Object includes all of the properties in the Contact Summary Object, along with several more:
 **/
@ApiModel(description = "The Full Contact Object includes all of the properties in the Contact Summary Object, along with several more:")
public class ContactFull  {
  
  @SerializedName("id")
  private Integer id = null;
  @SerializedName("prefix")
  private String prefix = null;
  @SerializedName("first_name")
  private String firstName = null;
  @SerializedName("middle_name")
  private String middleName = null;
  @SerializedName("last_name")
  private String lastName = null;
  @SerializedName("suffix")
  private String suffix = null;
  @SerializedName("nickname")
  private String nickname = null;
  @SerializedName("company")
  private String company = null;
  @SerializedName("phonetic_first_name")
  private String phoneticFirstName = null;
  @SerializedName("phonetic_middle_name")
  private String phoneticMiddleName = null;
  @SerializedName("phonetic_last_name")
  private String phoneticLastName = null;
  @SerializedName("department")
  private String department = null;
  @SerializedName("job_title")
  private String jobTitle = null;
  @SerializedName("emails")
  private Emails emails = null;
  @SerializedName("phone_numbers")
  private List<PhoneNumberContact> phoneNumbers = null;
  @SerializedName("addresses")
  private Addresses addresses = null;
  @SerializedName("group")
  private GroupListContacts group = null;
  @SerializedName("created_at")
  private Integer createdAt = null;
  @SerializedName("updated_at")
  private Integer updatedAt = null;

  /**
   * Integer ID. Read-only.
   **/
  @ApiModelProperty(value = "Integer ID. Read-only.")
  public Integer getId() {
    return id;
  }
  public void setId(Integer id) {
    this.id = id;
  }

  /**
   * Salutation, such as Mr, Mrs, or Dr
   **/
  @ApiModelProperty(value = "Salutation, such as Mr, Mrs, or Dr")
  public String getPrefix() {
    return prefix;
  }
  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }

  /**
   * First name or given name
   **/
  @ApiModelProperty(value = "First name or given name")
  public String getFirstName() {
    return firstName;
  }
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  /**
   * Middle or second name
   **/
  @ApiModelProperty(value = "Middle or second name")
  public String getMiddleName() {
    return middleName;
  }
  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  /**
   * Last name or surname
   **/
  @ApiModelProperty(value = "Last name or surname")
  public String getLastName() {
    return lastName;
  }
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  /**
   * Suffix, such as \"Jr.\", \"Sr.\", \"II\", or \"III\"
   **/
  @ApiModelProperty(value = "Suffix, such as \"Jr.\", \"Sr.\", \"II\", or \"III\"")
  public String getSuffix() {
    return suffix;
  }
  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }

  /**
   * Nickname, or a shortened informal version of the contact's name
   **/
  @ApiModelProperty(value = "Nickname, or a shortened informal version of the contact's name")
  public String getNickname() {
    return nickname;
  }
  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

  /**
   * Name of the contact's company
   **/
  @ApiModelProperty(value = "Name of the contact's company")
  public String getCompany() {
    return company;
  }
  public void setCompany(String company) {
    this.company = company;
  }

  /**
   * Phonetic first name. Useful for remembering how to pronounce the contact's name.
   **/
  @ApiModelProperty(value = "Phonetic first name. Useful for remembering how to pronounce the contact's name.")
  public String getPhoneticFirstName() {
    return phoneticFirstName;
  }
  public void setPhoneticFirstName(String phoneticFirstName) {
    this.phoneticFirstName = phoneticFirstName;
  }

  /**
   * Phonetic middle name. Useful for remembering how to pronounce the contact's name.
   **/
  @ApiModelProperty(value = "Phonetic middle name. Useful for remembering how to pronounce the contact's name.")
  public String getPhoneticMiddleName() {
    return phoneticMiddleName;
  }
  public void setPhoneticMiddleName(String phoneticMiddleName) {
    this.phoneticMiddleName = phoneticMiddleName;
  }

  /**
   * Phonetic last name. Useful for remembering how to pronounce the contact's name.
   **/
  @ApiModelProperty(value = "Phonetic last name. Useful for remembering how to pronounce the contact's name.")
  public String getPhoneticLastName() {
    return phoneticLastName;
  }
  public void setPhoneticLastName(String phoneticLastName) {
    this.phoneticLastName = phoneticLastName;
  }

  /**
   * Name of the contact's department
   **/
  @ApiModelProperty(value = "Name of the contact's department")
  public String getDepartment() {
    return department;
  }
  public void setDepartment(String department) {
    this.department = department;
  }

  /**
   * Contact's job title
   **/
  @ApiModelProperty(value = "Contact's job title")
  public String getJobTitle() {
    return jobTitle;
  }
  public void setJobTitle(String jobTitle) {
    this.jobTitle = jobTitle;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Emails getEmails() {
    return emails;
  }
  public void setEmails(Emails emails) {
    this.emails = emails;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<PhoneNumberContact> getPhoneNumbers() {
    return phoneNumbers;
  }
  public void setPhoneNumbers(List<PhoneNumberContact> phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Addresses getAddresses() {
    return addresses;
  }
  public void setAddresses(Addresses addresses) {
    this.addresses = addresses;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public GroupListContacts getGroup() {
    return group;
  }
  public void setGroup(GroupListContacts group) {
    this.group = group;
  }

  /**
   * Integer UNIX timestamp when the contact was created. Read-only.
   **/
  @ApiModelProperty(value = "Integer UNIX timestamp when the contact was created. Read-only.")
  public Integer getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(Integer createdAt) {
    this.createdAt = createdAt;
  }

  /**
   * Integer UNIX timestamp when the contact was created. Read-only.
   **/
  @ApiModelProperty(value = "Integer UNIX timestamp when the contact was created. Read-only.")
  public Integer getUpdatedAt() {
    return updatedAt;
  }
  public void setUpdatedAt(Integer updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactFull contactFull = (ContactFull) o;
    return (id == null ? contactFull.id == null : id.equals(contactFull.id)) &&
        (prefix == null ? contactFull.prefix == null : prefix.equals(contactFull.prefix)) &&
        (firstName == null ? contactFull.firstName == null : firstName.equals(contactFull.firstName)) &&
        (middleName == null ? contactFull.middleName == null : middleName.equals(contactFull.middleName)) &&
        (lastName == null ? contactFull.lastName == null : lastName.equals(contactFull.lastName)) &&
        (suffix == null ? contactFull.suffix == null : suffix.equals(contactFull.suffix)) &&
        (nickname == null ? contactFull.nickname == null : nickname.equals(contactFull.nickname)) &&
        (company == null ? contactFull.company == null : company.equals(contactFull.company)) &&
        (phoneticFirstName == null ? contactFull.phoneticFirstName == null : phoneticFirstName.equals(contactFull.phoneticFirstName)) &&
        (phoneticMiddleName == null ? contactFull.phoneticMiddleName == null : phoneticMiddleName.equals(contactFull.phoneticMiddleName)) &&
        (phoneticLastName == null ? contactFull.phoneticLastName == null : phoneticLastName.equals(contactFull.phoneticLastName)) &&
        (department == null ? contactFull.department == null : department.equals(contactFull.department)) &&
        (jobTitle == null ? contactFull.jobTitle == null : jobTitle.equals(contactFull.jobTitle)) &&
        (emails == null ? contactFull.emails == null : emails.equals(contactFull.emails)) &&
        (phoneNumbers == null ? contactFull.phoneNumbers == null : phoneNumbers.equals(contactFull.phoneNumbers)) &&
        (addresses == null ? contactFull.addresses == null : addresses.equals(contactFull.addresses)) &&
        (group == null ? contactFull.group == null : group.equals(contactFull.group)) &&
        (createdAt == null ? contactFull.createdAt == null : createdAt.equals(contactFull.createdAt)) &&
        (updatedAt == null ? contactFull.updatedAt == null : updatedAt.equals(contactFull.updatedAt));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (id == null ? 0: id.hashCode());
    result = 31 * result + (prefix == null ? 0: prefix.hashCode());
    result = 31 * result + (firstName == null ? 0: firstName.hashCode());
    result = 31 * result + (middleName == null ? 0: middleName.hashCode());
    result = 31 * result + (lastName == null ? 0: lastName.hashCode());
    result = 31 * result + (suffix == null ? 0: suffix.hashCode());
    result = 31 * result + (nickname == null ? 0: nickname.hashCode());
    result = 31 * result + (company == null ? 0: company.hashCode());
    result = 31 * result + (phoneticFirstName == null ? 0: phoneticFirstName.hashCode());
    result = 31 * result + (phoneticMiddleName == null ? 0: phoneticMiddleName.hashCode());
    result = 31 * result + (phoneticLastName == null ? 0: phoneticLastName.hashCode());
    result = 31 * result + (department == null ? 0: department.hashCode());
    result = 31 * result + (jobTitle == null ? 0: jobTitle.hashCode());
    result = 31 * result + (emails == null ? 0: emails.hashCode());
    result = 31 * result + (phoneNumbers == null ? 0: phoneNumbers.hashCode());
    result = 31 * result + (addresses == null ? 0: addresses.hashCode());
    result = 31 * result + (group == null ? 0: group.hashCode());
    result = 31 * result + (createdAt == null ? 0: createdAt.hashCode());
    result = 31 * result + (updatedAt == null ? 0: updatedAt.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactFull {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  prefix: ").append(prefix).append("\n");
    sb.append("  firstName: ").append(firstName).append("\n");
    sb.append("  middleName: ").append(middleName).append("\n");
    sb.append("  lastName: ").append(lastName).append("\n");
    sb.append("  suffix: ").append(suffix).append("\n");
    sb.append("  nickname: ").append(nickname).append("\n");
    sb.append("  company: ").append(company).append("\n");
    sb.append("  phoneticFirstName: ").append(phoneticFirstName).append("\n");
    sb.append("  phoneticMiddleName: ").append(phoneticMiddleName).append("\n");
    sb.append("  phoneticLastName: ").append(phoneticLastName).append("\n");
    sb.append("  department: ").append(department).append("\n");
    sb.append("  jobTitle: ").append(jobTitle).append("\n");
    sb.append("  emails: ").append(emails).append("\n");
    sb.append("  phoneNumbers: ").append(phoneNumbers).append("\n");
    sb.append("  addresses: ").append(addresses).append("\n");
    sb.append("  group: ").append(group).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  updatedAt: ").append(updatedAt).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
