/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;


import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class FilterCallLogs  {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("start_time")
  private String startTime = null;
  @SerializedName("created_at")
  private String createdAt = null;
  @SerializedName("direction")
  private String direction = null;
  @SerializedName("called_number")
  private String calledNumber = null;
  @SerializedName("type")
  private String type = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getStartTime() {
    return startTime;
  }
  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDirection() {
    return direction;
  }
  public void setDirection(String direction) {
    this.direction = direction;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getCalledNumber() {
    return calledNumber;
  }
  public void setCalledNumber(String calledNumber) {
    this.calledNumber = calledNumber;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterCallLogs filterCallLogs = (FilterCallLogs) o;
    return (id == null ? filterCallLogs.id == null : id.equals(filterCallLogs.id)) &&
        (startTime == null ? filterCallLogs.startTime == null : startTime.equals(filterCallLogs.startTime)) &&
        (createdAt == null ? filterCallLogs.createdAt == null : createdAt.equals(filterCallLogs.createdAt)) &&
        (direction == null ? filterCallLogs.direction == null : direction.equals(filterCallLogs.direction)) &&
        (calledNumber == null ? filterCallLogs.calledNumber == null : calledNumber.equals(filterCallLogs.calledNumber)) &&
        (type == null ? filterCallLogs.type == null : type.equals(filterCallLogs.type));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (id == null ? 0: id.hashCode());
    result = 31 * result + (startTime == null ? 0: startTime.hashCode());
    result = 31 * result + (createdAt == null ? 0: createdAt.hashCode());
    result = 31 * result + (direction == null ? 0: direction.hashCode());
    result = 31 * result + (calledNumber == null ? 0: calledNumber.hashCode());
    result = 31 * result + (type == null ? 0: type.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterCallLogs {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  startTime: ").append(startTime).append("\n");
    sb.append("  createdAt: ").append(createdAt).append("\n");
    sb.append("  direction: ").append(direction).append("\n");
    sb.append("  calledNumber: ").append(calledNumber).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
