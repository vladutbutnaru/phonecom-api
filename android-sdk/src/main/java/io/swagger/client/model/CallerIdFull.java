/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;


import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


/**
 * Here are all of the properties you can expect for Caller ID objects:
 **/
@ApiModel(description = "Here are all of the properties you can expect for Caller ID objects:")
public class CallerIdFull  {
  
  @SerializedName("number")
  private String number = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("type")
  private String type = null;

  /**
   * Phone number, in E.164 format
   **/
  @ApiModelProperty(value = "Phone number, in E.164 format")
  public String getNumber() {
    return number;
  }
  public void setNumber(String number) {
    this.number = number;
  }

  /**
   * Name you have supplied for this number
   **/
  @ApiModelProperty(value = "Name you have supplied for this number")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Type of Caller ID. account means this number is registered to your account, and extra refers to extra numbers which you have authorized, which are not managed under Phone.com.
   **/
  @ApiModelProperty(value = "Type of Caller ID. account means this number is registered to your account, and extra refers to extra numbers which you have authorized, which are not managed under Phone.com.")
  public String getType() {
    return type;
  }
  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallerIdFull callerIdFull = (CallerIdFull) o;
    return (number == null ? callerIdFull.number == null : number.equals(callerIdFull.number)) &&
        (name == null ? callerIdFull.name == null : name.equals(callerIdFull.name)) &&
        (type == null ? callerIdFull.type == null : type.equals(callerIdFull.type));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (number == null ? 0: number.hashCode());
    result = 31 * result + (name == null ? 0: name.hashCode());
    result = 31 * result + (type == null ? 0: type.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallerIdFull {\n");
    
    sb.append("  number: ").append(number).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
