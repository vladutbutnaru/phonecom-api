/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import java.util.*;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class CreateTrunkParams  {
  
  @SerializedName("name")
  private String name = null;
  @SerializedName("url")
  private String url = null;
  @SerializedName("max_concurrent_calls")
  private Integer maxConcurrentCalls = null;
  @SerializedName("max_minutes_per_month")
  private Integer maxMinutesPerMonth = null;
  @SerializedName("greeting")
  private Object greeting = null;
  @SerializedName("error_message")
  private Object errorMessage = null;
  @SerializedName("codecs")
  private List<Object> codecs = null;

  /**
   * Name of Trunk
   **/
  @ApiModelProperty(required = true, value = "Name of Trunk")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * URI of Trunk (in the form of SIP/user@host.com:port)
   **/
  @ApiModelProperty(required = true, value = "URI of Trunk (in the form of SIP/user@host.com:port)")
  public String getUrl() {
    return url;
  }
  public void setUrl(String url) {
    this.url = url;
  }

  /**
   * Max concurrent calls
   **/
  @ApiModelProperty(value = "Max concurrent calls")
  public Integer getMaxConcurrentCalls() {
    return maxConcurrentCalls;
  }
  public void setMaxConcurrentCalls(Integer maxConcurrentCalls) {
    this.maxConcurrentCalls = maxConcurrentCalls;
  }

  /**
   * Max minutes per month
   **/
  @ApiModelProperty(value = "Max minutes per month")
  public Integer getMaxMinutesPerMonth() {
    return maxMinutesPerMonth;
  }
  public void setMaxMinutesPerMonth(Integer maxMinutesPerMonth) {
    this.maxMinutesPerMonth = maxMinutesPerMonth;
  }

  /**
   * Recording lookup object
   **/
  @ApiModelProperty(value = "Recording lookup object")
  public Object getGreeting() {
    return greeting;
  }
  public void setGreeting(Object greeting) {
    this.greeting = greeting;
  }

  /**
   * Recording lookup object
   **/
  @ApiModelProperty(value = "Recording lookup object")
  public Object getErrorMessage() {
    return errorMessage;
  }
  public void setErrorMessage(Object errorMessage) {
    this.errorMessage = errorMessage;
  }

  /**
   * Custom audio codec configuration
   **/
  @ApiModelProperty(value = "Custom audio codec configuration")
  public List<Object> getCodecs() {
    return codecs;
  }
  public void setCodecs(List<Object> codecs) {
    this.codecs = codecs;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTrunkParams createTrunkParams = (CreateTrunkParams) o;
    return (name == null ? createTrunkParams.name == null : name.equals(createTrunkParams.name)) &&
        (url == null ? createTrunkParams.url == null : url.equals(createTrunkParams.url)) &&
        (maxConcurrentCalls == null ? createTrunkParams.maxConcurrentCalls == null : maxConcurrentCalls.equals(createTrunkParams.maxConcurrentCalls)) &&
        (maxMinutesPerMonth == null ? createTrunkParams.maxMinutesPerMonth == null : maxMinutesPerMonth.equals(createTrunkParams.maxMinutesPerMonth)) &&
        (greeting == null ? createTrunkParams.greeting == null : greeting.equals(createTrunkParams.greeting)) &&
        (errorMessage == null ? createTrunkParams.errorMessage == null : errorMessage.equals(createTrunkParams.errorMessage)) &&
        (codecs == null ? createTrunkParams.codecs == null : codecs.equals(createTrunkParams.codecs));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (name == null ? 0: name.hashCode());
    result = 31 * result + (url == null ? 0: url.hashCode());
    result = 31 * result + (maxConcurrentCalls == null ? 0: maxConcurrentCalls.hashCode());
    result = 31 * result + (maxMinutesPerMonth == null ? 0: maxMinutesPerMonth.hashCode());
    result = 31 * result + (greeting == null ? 0: greeting.hashCode());
    result = 31 * result + (errorMessage == null ? 0: errorMessage.hashCode());
    result = 31 * result + (codecs == null ? 0: codecs.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTrunkParams {\n");
    
    sb.append("  name: ").append(name).append("\n");
    sb.append("  url: ").append(url).append("\n");
    sb.append("  maxConcurrentCalls: ").append(maxConcurrentCalls).append("\n");
    sb.append("  maxMinutesPerMonth: ").append(maxMinutesPerMonth).append("\n");
    sb.append("  greeting: ").append(greeting).append("\n");
    sb.append("  errorMessage: ").append(errorMessage).append("\n");
    sb.append("  codecs: ").append(codecs).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
