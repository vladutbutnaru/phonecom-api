/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import java.util.*;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class CreateExtensionParams  {
  
  @SerializedName("caller_id")
  private String callerId = null;
  @SerializedName("usage_type")
  private String usageType = null;
  @SerializedName("allows_call_waiting")
  private Boolean allowsCallWaiting = null;
  @SerializedName("extension")
  private Integer extension = null;
  @SerializedName("include_in_directory")
  private Boolean includeInDirectory = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("full_name")
  private String fullName = null;
  @SerializedName("timezone")
  private String timezone = null;
  @SerializedName("name_greeting")
  private Object nameGreeting = null;
  @SerializedName("voicemail[greeting][alternate]")
  private Object voicemailGreetingAlternate = null;
  @SerializedName("local_area_code")
  private Integer localAreaCode = null;
  @SerializedName("voicemail[greeting][enable_leave_message_prompt]")
  private Boolean voicemailGreetingEnableLeaveMessagePrompt = null;
  @SerializedName("voicemail[enabled]")
  private Boolean voicemailEnabled = null;
  @SerializedName("enable_outbound_calls")
  private Boolean enableOutboundCalls = null;
  @SerializedName("enable_call_waiting")
  private Boolean enableCallWaiting = null;
  @SerializedName("voicemail[password]")
  private Integer voicemailPassword = null;
  @SerializedName("voicemail[greeting][type]")
  private String voicemailGreetingType = null;
  @SerializedName("voicemail[greeting][standard]")
  private Object voicemailGreetingStandard = null;
  @SerializedName("voicemail[transcription]")
  private String voicemailTranscription = null;
  @SerializedName("voicemail[notifications][emails]")
  private List<String> voicemailNotificationsEmails = null;
  @SerializedName("voicemail[notifications][sms]")
  private String voicemailNotificationsSms = null;
  @SerializedName("call_notifications[emails]")
  private List<String> callNotificationsEmails = null;
  @SerializedName("call_notifications[sms]")
  private String callNotificationsSms = null;

  /**
   * Caller ID
   **/
  @ApiModelProperty(value = "Caller ID")
  public String getCallerId() {
    return callerId;
  }
  public void setCallerId(String callerId) {
    this.callerId = callerId;
  }

  /**
   * Extension type
   **/
  @ApiModelProperty(value = "Extension type")
  public String getUsageType() {
    return usageType;
  }
  public void setUsageType(String usageType) {
    this.usageType = usageType;
  }

  /**
   * Allows call waiting
   **/
  @ApiModelProperty(value = "Allows call waiting")
  public Boolean getAllowsCallWaiting() {
    return allowsCallWaiting;
  }
  public void setAllowsCallWaiting(Boolean allowsCallWaiting) {
    this.allowsCallWaiting = allowsCallWaiting;
  }

  /**
   * Extension number (auto-generated if empty)
   **/
  @ApiModelProperty(value = "Extension number (auto-generated if empty)")
  public Integer getExtension() {
    return extension;
  }
  public void setExtension(Integer extension) {
    this.extension = extension;
  }

  /**
   * Include in dial-by-name directory
   **/
  @ApiModelProperty(value = "Include in dial-by-name directory")
  public Boolean getIncludeInDirectory() {
    return includeInDirectory;
  }
  public void setIncludeInDirectory(Boolean includeInDirectory) {
    this.includeInDirectory = includeInDirectory;
  }

  /**
   * Name (auto-generated if empty)
   **/
  @ApiModelProperty(value = "Name (auto-generated if empty)")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * Contact name
   **/
  @ApiModelProperty(value = "Contact name")
  public String getFullName() {
    return fullName;
  }
  public void setFullName(String fullName) {
    this.fullName = fullName;
  }

  /**
   * Timezone
   **/
  @ApiModelProperty(value = "Timezone")
  public String getTimezone() {
    return timezone;
  }
  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  /**
   * Recording lookup object
   **/
  @ApiModelProperty(value = "Recording lookup object")
  public Object getNameGreeting() {
    return nameGreeting;
  }
  public void setNameGreeting(Object nameGreeting) {
    this.nameGreeting = nameGreeting;
  }

  /**
   * Recording lookup object
   **/
  @ApiModelProperty(value = "Recording lookup object")
  public Object getVoicemailGreetingAlternate() {
    return voicemailGreetingAlternate;
  }
  public void setVoicemailGreetingAlternate(Object voicemailGreetingAlternate) {
    this.voicemailGreetingAlternate = voicemailGreetingAlternate;
  }

  /**
   * Local area code
   **/
  @ApiModelProperty(value = "Local area code")
  public Integer getLocalAreaCode() {
    return localAreaCode;
  }
  public void setLocalAreaCode(Integer localAreaCode) {
    this.localAreaCode = localAreaCode;
  }

  /**
   * Enable the \"leave a message\" prompt for voicemail
   **/
  @ApiModelProperty(value = "Enable the \"leave a message\" prompt for voicemail")
  public Boolean getVoicemailGreetingEnableLeaveMessagePrompt() {
    return voicemailGreetingEnableLeaveMessagePrompt;
  }
  public void setVoicemailGreetingEnableLeaveMessagePrompt(Boolean voicemailGreetingEnableLeaveMessagePrompt) {
    this.voicemailGreetingEnableLeaveMessagePrompt = voicemailGreetingEnableLeaveMessagePrompt;
  }

  /**
   * Voicemail enabled
   **/
  @ApiModelProperty(value = "Voicemail enabled")
  public Boolean getVoicemailEnabled() {
    return voicemailEnabled;
  }
  public void setVoicemailEnabled(Boolean voicemailEnabled) {
    this.voicemailEnabled = voicemailEnabled;
  }

  /**
   * Enable outgoing calls
   **/
  @ApiModelProperty(value = "Enable outgoing calls")
  public Boolean getEnableOutboundCalls() {
    return enableOutboundCalls;
  }
  public void setEnableOutboundCalls(Boolean enableOutboundCalls) {
    this.enableOutboundCalls = enableOutboundCalls;
  }

  /**
   * Enable Call Waiting
   **/
  @ApiModelProperty(value = "Enable Call Waiting")
  public Boolean getEnableCallWaiting() {
    return enableCallWaiting;
  }
  public void setEnableCallWaiting(Boolean enableCallWaiting) {
    this.enableCallWaiting = enableCallWaiting;
  }

  /**
   * Voicemail password
   **/
  @ApiModelProperty(value = "Voicemail password")
  public Integer getVoicemailPassword() {
    return voicemailPassword;
  }
  public void setVoicemailPassword(Integer voicemailPassword) {
    this.voicemailPassword = voicemailPassword;
  }

  /**
   * Voicemail greeting type
   **/
  @ApiModelProperty(value = "Voicemail greeting type")
  public String getVoicemailGreetingType() {
    return voicemailGreetingType;
  }
  public void setVoicemailGreetingType(String voicemailGreetingType) {
    this.voicemailGreetingType = voicemailGreetingType;
  }

  /**
   * Recording lookup object
   **/
  @ApiModelProperty(value = "Recording lookup object")
  public Object getVoicemailGreetingStandard() {
    return voicemailGreetingStandard;
  }
  public void setVoicemailGreetingStandard(Object voicemailGreetingStandard) {
    this.voicemailGreetingStandard = voicemailGreetingStandard;
  }

  /**
   * Voicemail transcription type
   **/
  @ApiModelProperty(value = "Voicemail transcription type")
  public String getVoicemailTranscription() {
    return voicemailTranscription;
  }
  public void setVoicemailTranscription(String voicemailTranscription) {
    this.voicemailTranscription = voicemailTranscription;
  }

  /**
   * Email notifications for voicemails. Can be a single email or an array of emails
   **/
  @ApiModelProperty(value = "Email notifications for voicemails. Can be a single email or an array of emails")
  public List<String> getVoicemailNotificationsEmails() {
    return voicemailNotificationsEmails;
  }
  public void setVoicemailNotificationsEmails(List<String> voicemailNotificationsEmails) {
    this.voicemailNotificationsEmails = voicemailNotificationsEmails;
  }

  /**
   * SMS notifications for voicemails
   **/
  @ApiModelProperty(value = "SMS notifications for voicemails")
  public String getVoicemailNotificationsSms() {
    return voicemailNotificationsSms;
  }
  public void setVoicemailNotificationsSms(String voicemailNotificationsSms) {
    this.voicemailNotificationsSms = voicemailNotificationsSms;
  }

  /**
   * Email notifications for calls. Can be a single email or an array of emails
   **/
  @ApiModelProperty(value = "Email notifications for calls. Can be a single email or an array of emails")
  public List<String> getCallNotificationsEmails() {
    return callNotificationsEmails;
  }
  public void setCallNotificationsEmails(List<String> callNotificationsEmails) {
    this.callNotificationsEmails = callNotificationsEmails;
  }

  /**
   * SMS notifications for calls
   **/
  @ApiModelProperty(value = "SMS notifications for calls")
  public String getCallNotificationsSms() {
    return callNotificationsSms;
  }
  public void setCallNotificationsSms(String callNotificationsSms) {
    this.callNotificationsSms = callNotificationsSms;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateExtensionParams createExtensionParams = (CreateExtensionParams) o;
    return (callerId == null ? createExtensionParams.callerId == null : callerId.equals(createExtensionParams.callerId)) &&
        (usageType == null ? createExtensionParams.usageType == null : usageType.equals(createExtensionParams.usageType)) &&
        (allowsCallWaiting == null ? createExtensionParams.allowsCallWaiting == null : allowsCallWaiting.equals(createExtensionParams.allowsCallWaiting)) &&
        (extension == null ? createExtensionParams.extension == null : extension.equals(createExtensionParams.extension)) &&
        (includeInDirectory == null ? createExtensionParams.includeInDirectory == null : includeInDirectory.equals(createExtensionParams.includeInDirectory)) &&
        (name == null ? createExtensionParams.name == null : name.equals(createExtensionParams.name)) &&
        (fullName == null ? createExtensionParams.fullName == null : fullName.equals(createExtensionParams.fullName)) &&
        (timezone == null ? createExtensionParams.timezone == null : timezone.equals(createExtensionParams.timezone)) &&
        (nameGreeting == null ? createExtensionParams.nameGreeting == null : nameGreeting.equals(createExtensionParams.nameGreeting)) &&
        (voicemailGreetingAlternate == null ? createExtensionParams.voicemailGreetingAlternate == null : voicemailGreetingAlternate.equals(createExtensionParams.voicemailGreetingAlternate)) &&
        (localAreaCode == null ? createExtensionParams.localAreaCode == null : localAreaCode.equals(createExtensionParams.localAreaCode)) &&
        (voicemailGreetingEnableLeaveMessagePrompt == null ? createExtensionParams.voicemailGreetingEnableLeaveMessagePrompt == null : voicemailGreetingEnableLeaveMessagePrompt.equals(createExtensionParams.voicemailGreetingEnableLeaveMessagePrompt)) &&
        (voicemailEnabled == null ? createExtensionParams.voicemailEnabled == null : voicemailEnabled.equals(createExtensionParams.voicemailEnabled)) &&
        (enableOutboundCalls == null ? createExtensionParams.enableOutboundCalls == null : enableOutboundCalls.equals(createExtensionParams.enableOutboundCalls)) &&
        (enableCallWaiting == null ? createExtensionParams.enableCallWaiting == null : enableCallWaiting.equals(createExtensionParams.enableCallWaiting)) &&
        (voicemailPassword == null ? createExtensionParams.voicemailPassword == null : voicemailPassword.equals(createExtensionParams.voicemailPassword)) &&
        (voicemailGreetingType == null ? createExtensionParams.voicemailGreetingType == null : voicemailGreetingType.equals(createExtensionParams.voicemailGreetingType)) &&
        (voicemailGreetingStandard == null ? createExtensionParams.voicemailGreetingStandard == null : voicemailGreetingStandard.equals(createExtensionParams.voicemailGreetingStandard)) &&
        (voicemailTranscription == null ? createExtensionParams.voicemailTranscription == null : voicemailTranscription.equals(createExtensionParams.voicemailTranscription)) &&
        (voicemailNotificationsEmails == null ? createExtensionParams.voicemailNotificationsEmails == null : voicemailNotificationsEmails.equals(createExtensionParams.voicemailNotificationsEmails)) &&
        (voicemailNotificationsSms == null ? createExtensionParams.voicemailNotificationsSms == null : voicemailNotificationsSms.equals(createExtensionParams.voicemailNotificationsSms)) &&
        (callNotificationsEmails == null ? createExtensionParams.callNotificationsEmails == null : callNotificationsEmails.equals(createExtensionParams.callNotificationsEmails)) &&
        (callNotificationsSms == null ? createExtensionParams.callNotificationsSms == null : callNotificationsSms.equals(createExtensionParams.callNotificationsSms));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (callerId == null ? 0: callerId.hashCode());
    result = 31 * result + (usageType == null ? 0: usageType.hashCode());
    result = 31 * result + (allowsCallWaiting == null ? 0: allowsCallWaiting.hashCode());
    result = 31 * result + (extension == null ? 0: extension.hashCode());
    result = 31 * result + (includeInDirectory == null ? 0: includeInDirectory.hashCode());
    result = 31 * result + (name == null ? 0: name.hashCode());
    result = 31 * result + (fullName == null ? 0: fullName.hashCode());
    result = 31 * result + (timezone == null ? 0: timezone.hashCode());
    result = 31 * result + (nameGreeting == null ? 0: nameGreeting.hashCode());
    result = 31 * result + (voicemailGreetingAlternate == null ? 0: voicemailGreetingAlternate.hashCode());
    result = 31 * result + (localAreaCode == null ? 0: localAreaCode.hashCode());
    result = 31 * result + (voicemailGreetingEnableLeaveMessagePrompt == null ? 0: voicemailGreetingEnableLeaveMessagePrompt.hashCode());
    result = 31 * result + (voicemailEnabled == null ? 0: voicemailEnabled.hashCode());
    result = 31 * result + (enableOutboundCalls == null ? 0: enableOutboundCalls.hashCode());
    result = 31 * result + (enableCallWaiting == null ? 0: enableCallWaiting.hashCode());
    result = 31 * result + (voicemailPassword == null ? 0: voicemailPassword.hashCode());
    result = 31 * result + (voicemailGreetingType == null ? 0: voicemailGreetingType.hashCode());
    result = 31 * result + (voicemailGreetingStandard == null ? 0: voicemailGreetingStandard.hashCode());
    result = 31 * result + (voicemailTranscription == null ? 0: voicemailTranscription.hashCode());
    result = 31 * result + (voicemailNotificationsEmails == null ? 0: voicemailNotificationsEmails.hashCode());
    result = 31 * result + (voicemailNotificationsSms == null ? 0: voicemailNotificationsSms.hashCode());
    result = 31 * result + (callNotificationsEmails == null ? 0: callNotificationsEmails.hashCode());
    result = 31 * result + (callNotificationsSms == null ? 0: callNotificationsSms.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateExtensionParams {\n");
    
    sb.append("  callerId: ").append(callerId).append("\n");
    sb.append("  usageType: ").append(usageType).append("\n");
    sb.append("  allowsCallWaiting: ").append(allowsCallWaiting).append("\n");
    sb.append("  extension: ").append(extension).append("\n");
    sb.append("  includeInDirectory: ").append(includeInDirectory).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  fullName: ").append(fullName).append("\n");
    sb.append("  timezone: ").append(timezone).append("\n");
    sb.append("  nameGreeting: ").append(nameGreeting).append("\n");
    sb.append("  voicemailGreetingAlternate: ").append(voicemailGreetingAlternate).append("\n");
    sb.append("  localAreaCode: ").append(localAreaCode).append("\n");
    sb.append("  voicemailGreetingEnableLeaveMessagePrompt: ").append(voicemailGreetingEnableLeaveMessagePrompt).append("\n");
    sb.append("  voicemailEnabled: ").append(voicemailEnabled).append("\n");
    sb.append("  enableOutboundCalls: ").append(enableOutboundCalls).append("\n");
    sb.append("  enableCallWaiting: ").append(enableCallWaiting).append("\n");
    sb.append("  voicemailPassword: ").append(voicemailPassword).append("\n");
    sb.append("  voicemailGreetingType: ").append(voicemailGreetingType).append("\n");
    sb.append("  voicemailGreetingStandard: ").append(voicemailGreetingStandard).append("\n");
    sb.append("  voicemailTranscription: ").append(voicemailTranscription).append("\n");
    sb.append("  voicemailNotificationsEmails: ").append(voicemailNotificationsEmails).append("\n");
    sb.append("  voicemailNotificationsSms: ").append(voicemailNotificationsSms).append("\n");
    sb.append("  callNotificationsEmails: ").append(callNotificationsEmails).append("\n");
    sb.append("  callNotificationsSms: ").append(callNotificationsSms).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
