/**
 * Phone.com API
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.List;
import io.swagger.client.model.*;

public class JsonUtil {
  public static GsonBuilder gsonBuilder;

  static {
    gsonBuilder = new GsonBuilder();
    gsonBuilder.serializeNulls();
    gsonBuilder.setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
  }

  public static Gson getGson() {
    return gsonBuilder.create();
  }

  public static String serialize(Object obj){
    return getGson().toJson(obj);
  }

  public static <T> T deserializeToList(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getListTypeForDeserialization(cls));
  }

  public static <T> T deserializeToObject(String jsonString, Class cls){
    return getGson().fromJson(jsonString, getTypeForDeserialization(cls));
  }

  public static Type getListTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("AccountFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountFull>>(){}.getType();
    }
    
    if ("AccountSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<AccountSummary>>(){}.getType();
    }
    
    if ("Address".equalsIgnoreCase(className)) {
      return new TypeToken<List<Address>>(){}.getType();
    }
    
    if ("AddressListContacts".equalsIgnoreCase(className)) {
      return new TypeToken<List<AddressListContacts>>(){}.getType();
    }
    
    if ("Addresses".equalsIgnoreCase(className)) {
      return new TypeToken<List<Addresses>>(){}.getType();
    }
    
    if ("ApplicationFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApplicationFull>>(){}.getType();
    }
    
    if ("ApplicationSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ApplicationSummary>>(){}.getType();
    }
    
    if ("AvailableNumberFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<AvailableNumberFull>>(){}.getType();
    }
    
    if ("AvailableNumberSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<AvailableNumberSummary>>(){}.getType();
    }
    
    if ("AvailableNumbersFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<AvailableNumbersFull>>(){}.getType();
    }
    
    if ("AvailableNumbersSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<AvailableNumbersSummary>>(){}.getType();
    }
    
    if ("CallDetails".equalsIgnoreCase(className)) {
      return new TypeToken<List<CallDetails>>(){}.getType();
    }
    
    if ("CallLogFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<CallLogFull>>(){}.getType();
    }
    
    if ("CallLogSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<CallLogSummary>>(){}.getType();
    }
    
    if ("CallNotifications".equalsIgnoreCase(className)) {
      return new TypeToken<List<CallNotifications>>(){}.getType();
    }
    
    if ("CallerIdFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<CallerIdFull>>(){}.getType();
    }
    
    if ("CallerIdPhoneNumber".equalsIgnoreCase(className)) {
      return new TypeToken<List<CallerIdPhoneNumber>>(){}.getType();
    }
    
    if ("ContactAccount".equalsIgnoreCase(className)) {
      return new TypeToken<List<ContactAccount>>(){}.getType();
    }
    
    if ("ContactFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ContactFull>>(){}.getType();
    }
    
    if ("ContactSubaccount".equalsIgnoreCase(className)) {
      return new TypeToken<List<ContactSubaccount>>(){}.getType();
    }
    
    if ("ContactSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ContactSummary>>(){}.getType();
    }
    
    if ("CreateContactParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateContactParams>>(){}.getType();
    }
    
    if ("CreateDeviceParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateDeviceParams>>(){}.getType();
    }
    
    if ("CreateExtensionParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateExtensionParams>>(){}.getType();
    }
    
    if ("CreateGroupParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateGroupParams>>(){}.getType();
    }
    
    if ("CreateMenuParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateMenuParams>>(){}.getType();
    }
    
    if ("CreatePhoneNumberParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreatePhoneNumberParams>>(){}.getType();
    }
    
    if ("CreateQueueParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateQueueParams>>(){}.getType();
    }
    
    if ("CreateRouteParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateRouteParams>>(){}.getType();
    }
    
    if ("CreateSmsParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateSmsParams>>(){}.getType();
    }
    
    if ("CreateSubaccountParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateSubaccountParams>>(){}.getType();
    }
    
    if ("CreateTrunkParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<CreateTrunkParams>>(){}.getType();
    }
    
    if ("DeleteContact".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteContact>>(){}.getType();
    }
    
    if ("DeleteGroup".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteGroup>>(){}.getType();
    }
    
    if ("DeleteMenu".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteMenu>>(){}.getType();
    }
    
    if ("DeleteQueue".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteQueue>>(){}.getType();
    }
    
    if ("DeleteRoute".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteRoute>>(){}.getType();
    }
    
    if ("DeleteTrunk".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeleteTrunk>>(){}.getType();
    }
    
    if ("DeviceFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeviceFull>>(){}.getType();
    }
    
    if ("DeviceMembership".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeviceMembership>>(){}.getType();
    }
    
    if ("DeviceSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<DeviceSummary>>(){}.getType();
    }
    
    if ("DevicesFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<DevicesFull>>(){}.getType();
    }
    
    if ("DevicesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<DevicesSummary>>(){}.getType();
    }
    
    if ("Email".equalsIgnoreCase(className)) {
      return new TypeToken<List<Email>>(){}.getType();
    }
    
    if ("Emails".equalsIgnoreCase(className)) {
      return new TypeToken<List<Emails>>(){}.getType();
    }
    
    if ("ExpressServiceCodeFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExpressServiceCodeFull>>(){}.getType();
    }
    
    if ("ExpressServiceCodeSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExpressServiceCodeSummary>>(){}.getType();
    }
    
    if ("ExpressServiceCodesFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExpressServiceCodesFull>>(){}.getType();
    }
    
    if ("ExpressServiceCodesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExpressServiceCodesSummary>>(){}.getType();
    }
    
    if ("ExtensionFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExtensionFull>>(){}.getType();
    }
    
    if ("ExtensionSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ExtensionSummary>>(){}.getType();
    }
    
    if ("FilterCallLogs".equalsIgnoreCase(className)) {
      return new TypeToken<List<FilterCallLogs>>(){}.getType();
    }
    
    if ("FilterIdArray".equalsIgnoreCase(className)) {
      return new TypeToken<List<FilterIdArray>>(){}.getType();
    }
    
    if ("FilterIdDirectionFrom".equalsIgnoreCase(className)) {
      return new TypeToken<List<FilterIdDirectionFrom>>(){}.getType();
    }
    
    if ("FilterIdExtensionNameArray".equalsIgnoreCase(className)) {
      return new TypeToken<List<FilterIdExtensionNameArray>>(){}.getType();
    }
    
    if ("FilterIdGroupIdUpdatedAtArray".equalsIgnoreCase(className)) {
      return new TypeToken<List<FilterIdGroupIdUpdatedAtArray>>(){}.getType();
    }
    
    if ("FilterIdNameArray".equalsIgnoreCase(className)) {
      return new TypeToken<List<FilterIdNameArray>>(){}.getType();
    }
    
    if ("FilterIdNamePhoneNumberArray".equalsIgnoreCase(className)) {
      return new TypeToken<List<FilterIdNamePhoneNumberArray>>(){}.getType();
    }
    
    if ("FilterListAvailableNumbers".equalsIgnoreCase(className)) {
      return new TypeToken<List<FilterListAvailableNumbers>>(){}.getType();
    }
    
    if ("FilterListPhoneNumbersRegions".equalsIgnoreCase(className)) {
      return new TypeToken<List<FilterListPhoneNumbersRegions>>(){}.getType();
    }
    
    if ("FilterNameNumberArray".equalsIgnoreCase(className)) {
      return new TypeToken<List<FilterNameNumberArray>>(){}.getType();
    }
    
    if ("Greeting".equalsIgnoreCase(className)) {
      return new TypeToken<List<Greeting>>(){}.getType();
    }
    
    if ("GroupByListPhoneNumbersRegions".equalsIgnoreCase(className)) {
      return new TypeToken<List<GroupByListPhoneNumbersRegions>>(){}.getType();
    }
    
    if ("GroupFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<GroupFull>>(){}.getType();
    }
    
    if ("GroupListContacts".equalsIgnoreCase(className)) {
      return new TypeToken<List<GroupListContacts>>(){}.getType();
    }
    
    if ("GroupSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<GroupSummary>>(){}.getType();
    }
    
    if ("GroupsFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<GroupsFull>>(){}.getType();
    }
    
    if ("GroupsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<GroupsSummary>>(){}.getType();
    }
    
    if ("HoldMusic".equalsIgnoreCase(className)) {
      return new TypeToken<List<HoldMusic>>(){}.getType();
    }
    
    if ("Line".equalsIgnoreCase(className)) {
      return new TypeToken<List<Line>>(){}.getType();
    }
    
    if ("ListAccountsFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListAccountsFull>>(){}.getType();
    }
    
    if ("ListAccountsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListAccountsSummary>>(){}.getType();
    }
    
    if ("ListApplicationsFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListApplicationsFull>>(){}.getType();
    }
    
    if ("ListApplicationsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListApplicationsSummary>>(){}.getType();
    }
    
    if ("ListAvailableNumbersFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListAvailableNumbersFull>>(){}.getType();
    }
    
    if ("ListAvailableNumbersSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListAvailableNumbersSummary>>(){}.getType();
    }
    
    if ("ListCallLogsFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListCallLogsFull>>(){}.getType();
    }
    
    if ("ListCallLogsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListCallLogsSummary>>(){}.getType();
    }
    
    if ("ListCallerIdsFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListCallerIdsFull>>(){}.getType();
    }
    
    if ("ListCallerIdsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListCallerIdsSummary>>(){}.getType();
    }
    
    if ("ListContactsFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListContactsFull>>(){}.getType();
    }
    
    if ("ListContactsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListContactsSummary>>(){}.getType();
    }
    
    if ("ListDevicesFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListDevicesFull>>(){}.getType();
    }
    
    if ("ListDevicesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListDevicesSummary>>(){}.getType();
    }
    
    if ("ListExpressServiceCodesFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListExpressServiceCodesFull>>(){}.getType();
    }
    
    if ("ListExpressServiceCodesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListExpressServiceCodesSummary>>(){}.getType();
    }
    
    if ("ListExtensionsFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListExtensionsFull>>(){}.getType();
    }
    
    if ("ListExtensionsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListExtensionsSummary>>(){}.getType();
    }
    
    if ("ListGroupsFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListGroupsFull>>(){}.getType();
    }
    
    if ("ListGroupsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListGroupsSummary>>(){}.getType();
    }
    
    if ("ListMediaFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListMediaFull>>(){}.getType();
    }
    
    if ("ListMediaSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListMediaSummary>>(){}.getType();
    }
    
    if ("ListMenusFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListMenusFull>>(){}.getType();
    }
    
    if ("ListMenusSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListMenusSummary>>(){}.getType();
    }
    
    if ("ListPhoneNumbersFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListPhoneNumbersFull>>(){}.getType();
    }
    
    if ("ListPhoneNumbersRegionsFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListPhoneNumbersRegionsFull>>(){}.getType();
    }
    
    if ("ListPhoneNumbersRegionsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListPhoneNumbersRegionsSummary>>(){}.getType();
    }
    
    if ("ListPhoneNumbersSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListPhoneNumbersSummary>>(){}.getType();
    }
    
    if ("ListQueuesFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListQueuesFull>>(){}.getType();
    }
    
    if ("ListQueuesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListQueuesSummary>>(){}.getType();
    }
    
    if ("ListRoutesFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListRoutesFull>>(){}.getType();
    }
    
    if ("ListRoutesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListRoutesSummary>>(){}.getType();
    }
    
    if ("ListSchedulesFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListSchedulesFull>>(){}.getType();
    }
    
    if ("ListSchedulesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListSchedulesSummary>>(){}.getType();
    }
    
    if ("ListSmsFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListSmsFull>>(){}.getType();
    }
    
    if ("ListSmsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListSmsSummary>>(){}.getType();
    }
    
    if ("ListTrunksFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListTrunksFull>>(){}.getType();
    }
    
    if ("ListTrunksSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ListTrunksSummary>>(){}.getType();
    }
    
    if ("MediaFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<MediaFull>>(){}.getType();
    }
    
    if ("MediaSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<MediaSummary>>(){}.getType();
    }
    
    if ("Member".equalsIgnoreCase(className)) {
      return new TypeToken<List<Member>>(){}.getType();
    }
    
    if ("Members".equalsIgnoreCase(className)) {
      return new TypeToken<List<Members>>(){}.getType();
    }
    
    if ("MenuFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<MenuFull>>(){}.getType();
    }
    
    if ("MenuSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<MenuSummary>>(){}.getType();
    }
    
    if ("MenusFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<MenusFull>>(){}.getType();
    }
    
    if ("MenusSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<MenusSummary>>(){}.getType();
    }
    
    if ("Notification".equalsIgnoreCase(className)) {
      return new TypeToken<List<Notification>>(){}.getType();
    }
    
    if ("Option".equalsIgnoreCase(className)) {
      return new TypeToken<List<Option>>(){}.getType();
    }
    
    if ("OptionsListMenus".equalsIgnoreCase(className)) {
      return new TypeToken<List<OptionsListMenus>>(){}.getType();
    }
    
    if ("PhoneNumberContact".equalsIgnoreCase(className)) {
      return new TypeToken<List<PhoneNumberContact>>(){}.getType();
    }
    
    if ("PhoneNumberFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<PhoneNumberFull>>(){}.getType();
    }
    
    if ("PhoneNumberSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<PhoneNumberSummary>>(){}.getType();
    }
    
    if ("PhoneNumbersFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<PhoneNumbersFull>>(){}.getType();
    }
    
    if ("PhoneNumbersRegionFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<PhoneNumbersRegionFull>>(){}.getType();
    }
    
    if ("PhoneNumbersRegionsFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<PhoneNumbersRegionsFull>>(){}.getType();
    }
    
    if ("PhoneNumbersSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<PhoneNumbersSummary>>(){}.getType();
    }
    
    if ("QueueFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<QueueFull>>(){}.getType();
    }
    
    if ("QueueSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<QueueSummary>>(){}.getType();
    }
    
    if ("Queues".equalsIgnoreCase(className)) {
      return new TypeToken<List<Queues>>(){}.getType();
    }
    
    if ("QueuesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<QueuesSummary>>(){}.getType();
    }
    
    if ("Recipient".equalsIgnoreCase(className)) {
      return new TypeToken<List<Recipient>>(){}.getType();
    }
    
    if ("ReplaceExtensionParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReplaceExtensionParams>>(){}.getType();
    }
    
    if ("ReplaceMenuParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReplaceMenuParams>>(){}.getType();
    }
    
    if ("ReplacePhoneNumberParams".equalsIgnoreCase(className)) {
      return new TypeToken<List<ReplacePhoneNumberParams>>(){}.getType();
    }
    
    if ("RouteFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<RouteFull>>(){}.getType();
    }
    
    if ("RouteSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<RouteSummary>>(){}.getType();
    }
    
    if ("RoutesFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<RoutesFull>>(){}.getType();
    }
    
    if ("RoutesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<RoutesSummary>>(){}.getType();
    }
    
    if ("RuleSet".equalsIgnoreCase(className)) {
      return new TypeToken<List<RuleSet>>(){}.getType();
    }
    
    if ("RuleSetAction".equalsIgnoreCase(className)) {
      return new TypeToken<List<RuleSetAction>>(){}.getType();
    }
    
    if ("RuleSetFilter".equalsIgnoreCase(className)) {
      return new TypeToken<List<RuleSetFilter>>(){}.getType();
    }
    
    if ("RuleSetForwardItem".equalsIgnoreCase(className)) {
      return new TypeToken<List<RuleSetForwardItem>>(){}.getType();
    }
    
    if ("ScheduleFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<ScheduleFull>>(){}.getType();
    }
    
    if ("ScheduleSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<ScheduleSummary>>(){}.getType();
    }
    
    if ("SipAuthentication".equalsIgnoreCase(className)) {
      return new TypeToken<List<SipAuthentication>>(){}.getType();
    }
    
    if ("SmsForwarding".equalsIgnoreCase(className)) {
      return new TypeToken<List<SmsForwarding>>(){}.getType();
    }
    
    if ("SmsFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<SmsFull>>(){}.getType();
    }
    
    if ("SmsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<SmsSummary>>(){}.getType();
    }
    
    if ("SortCallLogs".equalsIgnoreCase(className)) {
      return new TypeToken<List<SortCallLogs>>(){}.getType();
    }
    
    if ("SortId".equalsIgnoreCase(className)) {
      return new TypeToken<List<SortId>>(){}.getType();
    }
    
    if ("SortIdArray".equalsIgnoreCase(className)) {
      return new TypeToken<List<SortIdArray>>(){}.getType();
    }
    
    if ("SortIdCreatedAt".equalsIgnoreCase(className)) {
      return new TypeToken<List<SortIdCreatedAt>>(){}.getType();
    }
    
    if ("SortIdExtensionName".equalsIgnoreCase(className)) {
      return new TypeToken<List<SortIdExtensionName>>(){}.getType();
    }
    
    if ("SortIdName".equalsIgnoreCase(className)) {
      return new TypeToken<List<SortIdName>>(){}.getType();
    }
    
    if ("SortIdNamePhoneNumber".equalsIgnoreCase(className)) {
      return new TypeToken<List<SortIdNamePhoneNumber>>(){}.getType();
    }
    
    if ("SortIdUpdatedAt".equalsIgnoreCase(className)) {
      return new TypeToken<List<SortIdUpdatedAt>>(){}.getType();
    }
    
    if ("SortListAvailableNumbers".equalsIgnoreCase(className)) {
      return new TypeToken<List<SortListAvailableNumbers>>(){}.getType();
    }
    
    if ("SortListPhoneNumbersRegions".equalsIgnoreCase(className)) {
      return new TypeToken<List<SortListPhoneNumbersRegions>>(){}.getType();
    }
    
    if ("SortNameNumber".equalsIgnoreCase(className)) {
      return new TypeToken<List<SortNameNumber>>(){}.getType();
    }
    
    if ("TrunkFull".equalsIgnoreCase(className)) {
      return new TypeToken<List<TrunkFull>>(){}.getType();
    }
    
    if ("TrunkSummary".equalsIgnoreCase(className)) {
      return new TypeToken<List<TrunkSummary>>(){}.getType();
    }
    
    if ("Voicemail".equalsIgnoreCase(className)) {
      return new TypeToken<List<Voicemail>>(){}.getType();
    }
    
    return new TypeToken<List<Object>>(){}.getType();
  }

  public static Type getTypeForDeserialization(Class cls) {
    String className = cls.getSimpleName();
    
    if ("AccountFull".equalsIgnoreCase(className)) {
      return new TypeToken<AccountFull>(){}.getType();
    }
    
    if ("AccountSummary".equalsIgnoreCase(className)) {
      return new TypeToken<AccountSummary>(){}.getType();
    }
    
    if ("Address".equalsIgnoreCase(className)) {
      return new TypeToken<Address>(){}.getType();
    }
    
    if ("AddressListContacts".equalsIgnoreCase(className)) {
      return new TypeToken<AddressListContacts>(){}.getType();
    }
    
    if ("Addresses".equalsIgnoreCase(className)) {
      return new TypeToken<Addresses>(){}.getType();
    }
    
    if ("ApplicationFull".equalsIgnoreCase(className)) {
      return new TypeToken<ApplicationFull>(){}.getType();
    }
    
    if ("ApplicationSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ApplicationSummary>(){}.getType();
    }
    
    if ("AvailableNumberFull".equalsIgnoreCase(className)) {
      return new TypeToken<AvailableNumberFull>(){}.getType();
    }
    
    if ("AvailableNumberSummary".equalsIgnoreCase(className)) {
      return new TypeToken<AvailableNumberSummary>(){}.getType();
    }
    
    if ("AvailableNumbersFull".equalsIgnoreCase(className)) {
      return new TypeToken<AvailableNumbersFull>(){}.getType();
    }
    
    if ("AvailableNumbersSummary".equalsIgnoreCase(className)) {
      return new TypeToken<AvailableNumbersSummary>(){}.getType();
    }
    
    if ("CallDetails".equalsIgnoreCase(className)) {
      return new TypeToken<CallDetails>(){}.getType();
    }
    
    if ("CallLogFull".equalsIgnoreCase(className)) {
      return new TypeToken<CallLogFull>(){}.getType();
    }
    
    if ("CallLogSummary".equalsIgnoreCase(className)) {
      return new TypeToken<CallLogSummary>(){}.getType();
    }
    
    if ("CallNotifications".equalsIgnoreCase(className)) {
      return new TypeToken<CallNotifications>(){}.getType();
    }
    
    if ("CallerIdFull".equalsIgnoreCase(className)) {
      return new TypeToken<CallerIdFull>(){}.getType();
    }
    
    if ("CallerIdPhoneNumber".equalsIgnoreCase(className)) {
      return new TypeToken<CallerIdPhoneNumber>(){}.getType();
    }
    
    if ("ContactAccount".equalsIgnoreCase(className)) {
      return new TypeToken<ContactAccount>(){}.getType();
    }
    
    if ("ContactFull".equalsIgnoreCase(className)) {
      return new TypeToken<ContactFull>(){}.getType();
    }
    
    if ("ContactSubaccount".equalsIgnoreCase(className)) {
      return new TypeToken<ContactSubaccount>(){}.getType();
    }
    
    if ("ContactSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ContactSummary>(){}.getType();
    }
    
    if ("CreateContactParams".equalsIgnoreCase(className)) {
      return new TypeToken<CreateContactParams>(){}.getType();
    }
    
    if ("CreateDeviceParams".equalsIgnoreCase(className)) {
      return new TypeToken<CreateDeviceParams>(){}.getType();
    }
    
    if ("CreateExtensionParams".equalsIgnoreCase(className)) {
      return new TypeToken<CreateExtensionParams>(){}.getType();
    }
    
    if ("CreateGroupParams".equalsIgnoreCase(className)) {
      return new TypeToken<CreateGroupParams>(){}.getType();
    }
    
    if ("CreateMenuParams".equalsIgnoreCase(className)) {
      return new TypeToken<CreateMenuParams>(){}.getType();
    }
    
    if ("CreatePhoneNumberParams".equalsIgnoreCase(className)) {
      return new TypeToken<CreatePhoneNumberParams>(){}.getType();
    }
    
    if ("CreateQueueParams".equalsIgnoreCase(className)) {
      return new TypeToken<CreateQueueParams>(){}.getType();
    }
    
    if ("CreateRouteParams".equalsIgnoreCase(className)) {
      return new TypeToken<CreateRouteParams>(){}.getType();
    }
    
    if ("CreateSmsParams".equalsIgnoreCase(className)) {
      return new TypeToken<CreateSmsParams>(){}.getType();
    }
    
    if ("CreateSubaccountParams".equalsIgnoreCase(className)) {
      return new TypeToken<CreateSubaccountParams>(){}.getType();
    }
    
    if ("CreateTrunkParams".equalsIgnoreCase(className)) {
      return new TypeToken<CreateTrunkParams>(){}.getType();
    }
    
    if ("DeleteContact".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteContact>(){}.getType();
    }
    
    if ("DeleteGroup".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteGroup>(){}.getType();
    }
    
    if ("DeleteMenu".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteMenu>(){}.getType();
    }
    
    if ("DeleteQueue".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteQueue>(){}.getType();
    }
    
    if ("DeleteRoute".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteRoute>(){}.getType();
    }
    
    if ("DeleteTrunk".equalsIgnoreCase(className)) {
      return new TypeToken<DeleteTrunk>(){}.getType();
    }
    
    if ("DeviceFull".equalsIgnoreCase(className)) {
      return new TypeToken<DeviceFull>(){}.getType();
    }
    
    if ("DeviceMembership".equalsIgnoreCase(className)) {
      return new TypeToken<DeviceMembership>(){}.getType();
    }
    
    if ("DeviceSummary".equalsIgnoreCase(className)) {
      return new TypeToken<DeviceSummary>(){}.getType();
    }
    
    if ("DevicesFull".equalsIgnoreCase(className)) {
      return new TypeToken<DevicesFull>(){}.getType();
    }
    
    if ("DevicesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<DevicesSummary>(){}.getType();
    }
    
    if ("Email".equalsIgnoreCase(className)) {
      return new TypeToken<Email>(){}.getType();
    }
    
    if ("Emails".equalsIgnoreCase(className)) {
      return new TypeToken<Emails>(){}.getType();
    }
    
    if ("ExpressServiceCodeFull".equalsIgnoreCase(className)) {
      return new TypeToken<ExpressServiceCodeFull>(){}.getType();
    }
    
    if ("ExpressServiceCodeSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ExpressServiceCodeSummary>(){}.getType();
    }
    
    if ("ExpressServiceCodesFull".equalsIgnoreCase(className)) {
      return new TypeToken<ExpressServiceCodesFull>(){}.getType();
    }
    
    if ("ExpressServiceCodesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ExpressServiceCodesSummary>(){}.getType();
    }
    
    if ("ExtensionFull".equalsIgnoreCase(className)) {
      return new TypeToken<ExtensionFull>(){}.getType();
    }
    
    if ("ExtensionSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ExtensionSummary>(){}.getType();
    }
    
    if ("FilterCallLogs".equalsIgnoreCase(className)) {
      return new TypeToken<FilterCallLogs>(){}.getType();
    }
    
    if ("FilterIdArray".equalsIgnoreCase(className)) {
      return new TypeToken<FilterIdArray>(){}.getType();
    }
    
    if ("FilterIdDirectionFrom".equalsIgnoreCase(className)) {
      return new TypeToken<FilterIdDirectionFrom>(){}.getType();
    }
    
    if ("FilterIdExtensionNameArray".equalsIgnoreCase(className)) {
      return new TypeToken<FilterIdExtensionNameArray>(){}.getType();
    }
    
    if ("FilterIdGroupIdUpdatedAtArray".equalsIgnoreCase(className)) {
      return new TypeToken<FilterIdGroupIdUpdatedAtArray>(){}.getType();
    }
    
    if ("FilterIdNameArray".equalsIgnoreCase(className)) {
      return new TypeToken<FilterIdNameArray>(){}.getType();
    }
    
    if ("FilterIdNamePhoneNumberArray".equalsIgnoreCase(className)) {
      return new TypeToken<FilterIdNamePhoneNumberArray>(){}.getType();
    }
    
    if ("FilterListAvailableNumbers".equalsIgnoreCase(className)) {
      return new TypeToken<FilterListAvailableNumbers>(){}.getType();
    }
    
    if ("FilterListPhoneNumbersRegions".equalsIgnoreCase(className)) {
      return new TypeToken<FilterListPhoneNumbersRegions>(){}.getType();
    }
    
    if ("FilterNameNumberArray".equalsIgnoreCase(className)) {
      return new TypeToken<FilterNameNumberArray>(){}.getType();
    }
    
    if ("Greeting".equalsIgnoreCase(className)) {
      return new TypeToken<Greeting>(){}.getType();
    }
    
    if ("GroupByListPhoneNumbersRegions".equalsIgnoreCase(className)) {
      return new TypeToken<GroupByListPhoneNumbersRegions>(){}.getType();
    }
    
    if ("GroupFull".equalsIgnoreCase(className)) {
      return new TypeToken<GroupFull>(){}.getType();
    }
    
    if ("GroupListContacts".equalsIgnoreCase(className)) {
      return new TypeToken<GroupListContacts>(){}.getType();
    }
    
    if ("GroupSummary".equalsIgnoreCase(className)) {
      return new TypeToken<GroupSummary>(){}.getType();
    }
    
    if ("GroupsFull".equalsIgnoreCase(className)) {
      return new TypeToken<GroupsFull>(){}.getType();
    }
    
    if ("GroupsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<GroupsSummary>(){}.getType();
    }
    
    if ("HoldMusic".equalsIgnoreCase(className)) {
      return new TypeToken<HoldMusic>(){}.getType();
    }
    
    if ("Line".equalsIgnoreCase(className)) {
      return new TypeToken<Line>(){}.getType();
    }
    
    if ("ListAccountsFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListAccountsFull>(){}.getType();
    }
    
    if ("ListAccountsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListAccountsSummary>(){}.getType();
    }
    
    if ("ListApplicationsFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListApplicationsFull>(){}.getType();
    }
    
    if ("ListApplicationsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListApplicationsSummary>(){}.getType();
    }
    
    if ("ListAvailableNumbersFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListAvailableNumbersFull>(){}.getType();
    }
    
    if ("ListAvailableNumbersSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListAvailableNumbersSummary>(){}.getType();
    }
    
    if ("ListCallLogsFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListCallLogsFull>(){}.getType();
    }
    
    if ("ListCallLogsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListCallLogsSummary>(){}.getType();
    }
    
    if ("ListCallerIdsFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListCallerIdsFull>(){}.getType();
    }
    
    if ("ListCallerIdsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListCallerIdsSummary>(){}.getType();
    }
    
    if ("ListContactsFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListContactsFull>(){}.getType();
    }
    
    if ("ListContactsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListContactsSummary>(){}.getType();
    }
    
    if ("ListDevicesFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListDevicesFull>(){}.getType();
    }
    
    if ("ListDevicesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListDevicesSummary>(){}.getType();
    }
    
    if ("ListExpressServiceCodesFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListExpressServiceCodesFull>(){}.getType();
    }
    
    if ("ListExpressServiceCodesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListExpressServiceCodesSummary>(){}.getType();
    }
    
    if ("ListExtensionsFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListExtensionsFull>(){}.getType();
    }
    
    if ("ListExtensionsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListExtensionsSummary>(){}.getType();
    }
    
    if ("ListGroupsFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListGroupsFull>(){}.getType();
    }
    
    if ("ListGroupsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListGroupsSummary>(){}.getType();
    }
    
    if ("ListMediaFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListMediaFull>(){}.getType();
    }
    
    if ("ListMediaSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListMediaSummary>(){}.getType();
    }
    
    if ("ListMenusFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListMenusFull>(){}.getType();
    }
    
    if ("ListMenusSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListMenusSummary>(){}.getType();
    }
    
    if ("ListPhoneNumbersFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListPhoneNumbersFull>(){}.getType();
    }
    
    if ("ListPhoneNumbersRegionsFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListPhoneNumbersRegionsFull>(){}.getType();
    }
    
    if ("ListPhoneNumbersRegionsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListPhoneNumbersRegionsSummary>(){}.getType();
    }
    
    if ("ListPhoneNumbersSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListPhoneNumbersSummary>(){}.getType();
    }
    
    if ("ListQueuesFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListQueuesFull>(){}.getType();
    }
    
    if ("ListQueuesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListQueuesSummary>(){}.getType();
    }
    
    if ("ListRoutesFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListRoutesFull>(){}.getType();
    }
    
    if ("ListRoutesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListRoutesSummary>(){}.getType();
    }
    
    if ("ListSchedulesFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListSchedulesFull>(){}.getType();
    }
    
    if ("ListSchedulesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListSchedulesSummary>(){}.getType();
    }
    
    if ("ListSmsFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListSmsFull>(){}.getType();
    }
    
    if ("ListSmsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListSmsSummary>(){}.getType();
    }
    
    if ("ListTrunksFull".equalsIgnoreCase(className)) {
      return new TypeToken<ListTrunksFull>(){}.getType();
    }
    
    if ("ListTrunksSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ListTrunksSummary>(){}.getType();
    }
    
    if ("MediaFull".equalsIgnoreCase(className)) {
      return new TypeToken<MediaFull>(){}.getType();
    }
    
    if ("MediaSummary".equalsIgnoreCase(className)) {
      return new TypeToken<MediaSummary>(){}.getType();
    }
    
    if ("Member".equalsIgnoreCase(className)) {
      return new TypeToken<Member>(){}.getType();
    }
    
    if ("Members".equalsIgnoreCase(className)) {
      return new TypeToken<Members>(){}.getType();
    }
    
    if ("MenuFull".equalsIgnoreCase(className)) {
      return new TypeToken<MenuFull>(){}.getType();
    }
    
    if ("MenuSummary".equalsIgnoreCase(className)) {
      return new TypeToken<MenuSummary>(){}.getType();
    }
    
    if ("MenusFull".equalsIgnoreCase(className)) {
      return new TypeToken<MenusFull>(){}.getType();
    }
    
    if ("MenusSummary".equalsIgnoreCase(className)) {
      return new TypeToken<MenusSummary>(){}.getType();
    }
    
    if ("Notification".equalsIgnoreCase(className)) {
      return new TypeToken<Notification>(){}.getType();
    }
    
    if ("Option".equalsIgnoreCase(className)) {
      return new TypeToken<Option>(){}.getType();
    }
    
    if ("OptionsListMenus".equalsIgnoreCase(className)) {
      return new TypeToken<OptionsListMenus>(){}.getType();
    }
    
    if ("PhoneNumberContact".equalsIgnoreCase(className)) {
      return new TypeToken<PhoneNumberContact>(){}.getType();
    }
    
    if ("PhoneNumberFull".equalsIgnoreCase(className)) {
      return new TypeToken<PhoneNumberFull>(){}.getType();
    }
    
    if ("PhoneNumberSummary".equalsIgnoreCase(className)) {
      return new TypeToken<PhoneNumberSummary>(){}.getType();
    }
    
    if ("PhoneNumbersFull".equalsIgnoreCase(className)) {
      return new TypeToken<PhoneNumbersFull>(){}.getType();
    }
    
    if ("PhoneNumbersRegionFull".equalsIgnoreCase(className)) {
      return new TypeToken<PhoneNumbersRegionFull>(){}.getType();
    }
    
    if ("PhoneNumbersRegionsFull".equalsIgnoreCase(className)) {
      return new TypeToken<PhoneNumbersRegionsFull>(){}.getType();
    }
    
    if ("PhoneNumbersSummary".equalsIgnoreCase(className)) {
      return new TypeToken<PhoneNumbersSummary>(){}.getType();
    }
    
    if ("QueueFull".equalsIgnoreCase(className)) {
      return new TypeToken<QueueFull>(){}.getType();
    }
    
    if ("QueueSummary".equalsIgnoreCase(className)) {
      return new TypeToken<QueueSummary>(){}.getType();
    }
    
    if ("Queues".equalsIgnoreCase(className)) {
      return new TypeToken<Queues>(){}.getType();
    }
    
    if ("QueuesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<QueuesSummary>(){}.getType();
    }
    
    if ("Recipient".equalsIgnoreCase(className)) {
      return new TypeToken<Recipient>(){}.getType();
    }
    
    if ("ReplaceExtensionParams".equalsIgnoreCase(className)) {
      return new TypeToken<ReplaceExtensionParams>(){}.getType();
    }
    
    if ("ReplaceMenuParams".equalsIgnoreCase(className)) {
      return new TypeToken<ReplaceMenuParams>(){}.getType();
    }
    
    if ("ReplacePhoneNumberParams".equalsIgnoreCase(className)) {
      return new TypeToken<ReplacePhoneNumberParams>(){}.getType();
    }
    
    if ("RouteFull".equalsIgnoreCase(className)) {
      return new TypeToken<RouteFull>(){}.getType();
    }
    
    if ("RouteSummary".equalsIgnoreCase(className)) {
      return new TypeToken<RouteSummary>(){}.getType();
    }
    
    if ("RoutesFull".equalsIgnoreCase(className)) {
      return new TypeToken<RoutesFull>(){}.getType();
    }
    
    if ("RoutesSummary".equalsIgnoreCase(className)) {
      return new TypeToken<RoutesSummary>(){}.getType();
    }
    
    if ("RuleSet".equalsIgnoreCase(className)) {
      return new TypeToken<RuleSet>(){}.getType();
    }
    
    if ("RuleSetAction".equalsIgnoreCase(className)) {
      return new TypeToken<RuleSetAction>(){}.getType();
    }
    
    if ("RuleSetFilter".equalsIgnoreCase(className)) {
      return new TypeToken<RuleSetFilter>(){}.getType();
    }
    
    if ("RuleSetForwardItem".equalsIgnoreCase(className)) {
      return new TypeToken<RuleSetForwardItem>(){}.getType();
    }
    
    if ("ScheduleFull".equalsIgnoreCase(className)) {
      return new TypeToken<ScheduleFull>(){}.getType();
    }
    
    if ("ScheduleSummary".equalsIgnoreCase(className)) {
      return new TypeToken<ScheduleSummary>(){}.getType();
    }
    
    if ("SipAuthentication".equalsIgnoreCase(className)) {
      return new TypeToken<SipAuthentication>(){}.getType();
    }
    
    if ("SmsForwarding".equalsIgnoreCase(className)) {
      return new TypeToken<SmsForwarding>(){}.getType();
    }
    
    if ("SmsFull".equalsIgnoreCase(className)) {
      return new TypeToken<SmsFull>(){}.getType();
    }
    
    if ("SmsSummary".equalsIgnoreCase(className)) {
      return new TypeToken<SmsSummary>(){}.getType();
    }
    
    if ("SortCallLogs".equalsIgnoreCase(className)) {
      return new TypeToken<SortCallLogs>(){}.getType();
    }
    
    if ("SortId".equalsIgnoreCase(className)) {
      return new TypeToken<SortId>(){}.getType();
    }
    
    if ("SortIdArray".equalsIgnoreCase(className)) {
      return new TypeToken<SortIdArray>(){}.getType();
    }
    
    if ("SortIdCreatedAt".equalsIgnoreCase(className)) {
      return new TypeToken<SortIdCreatedAt>(){}.getType();
    }
    
    if ("SortIdExtensionName".equalsIgnoreCase(className)) {
      return new TypeToken<SortIdExtensionName>(){}.getType();
    }
    
    if ("SortIdName".equalsIgnoreCase(className)) {
      return new TypeToken<SortIdName>(){}.getType();
    }
    
    if ("SortIdNamePhoneNumber".equalsIgnoreCase(className)) {
      return new TypeToken<SortIdNamePhoneNumber>(){}.getType();
    }
    
    if ("SortIdUpdatedAt".equalsIgnoreCase(className)) {
      return new TypeToken<SortIdUpdatedAt>(){}.getType();
    }
    
    if ("SortListAvailableNumbers".equalsIgnoreCase(className)) {
      return new TypeToken<SortListAvailableNumbers>(){}.getType();
    }
    
    if ("SortListPhoneNumbersRegions".equalsIgnoreCase(className)) {
      return new TypeToken<SortListPhoneNumbersRegions>(){}.getType();
    }
    
    if ("SortNameNumber".equalsIgnoreCase(className)) {
      return new TypeToken<SortNameNumber>(){}.getType();
    }
    
    if ("TrunkFull".equalsIgnoreCase(className)) {
      return new TypeToken<TrunkFull>(){}.getType();
    }
    
    if ("TrunkSummary".equalsIgnoreCase(className)) {
      return new TypeToken<TrunkSummary>(){}.getType();
    }
    
    if ("Voicemail".equalsIgnoreCase(className)) {
      return new TypeToken<Voicemail>(){}.getType();
    }
    
    return new TypeToken<Object>(){}.getType();
  }

};
