//
// ContactsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ContactsAPI: APIBase {
    /**
     Add a new address book contact for an extension
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter data: (body) Contact data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createAccountExtensionContact(accountId accountId: Int32, extensionId: Int32, data: CreateContactParams? = nil, completion: ((data: ContactFull?, error: ErrorType?) -> Void)) {
        createAccountExtensionContactWithRequestBuilder(accountId: accountId, extensionId: extensionId, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Add a new address book contact for an extension
     - POST /accounts/{accountId}/extensions/{extensionId}/contacts
     - For more on the input fields, see Account Contacts.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "addresses" : "",
  "prefix" : "aeiou",
  "last_name" : "aeiou",
  "created_at" : "",
  "middle_name" : "aeiou",
  "suffix" : "aeiou",
  "emails" : "",
  "phone_numbers" : [ {
    "number" : "aeiou",
    "normalized" : "aeiou",
    "type" : "aeiou"
  } ],
  "phonetic_first_name" : "aeiou",
  "phonetic_middle_name" : "aeiou",
  "updated_at" : "",
  "nickname" : "aeiou",
  "company" : "aeiou",
  "id" : "",
  "department" : "aeiou",
  "first_name" : "aeiou",
  "phonetic_last_name" : "aeiou",
  "job_title" : "aeiou",
  "group" : {
    "name" : "aeiou",
    "id" : ""
  }
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter data: (body) Contact data (optional)

     - returns: RequestBuilder<ContactFull> 
     */
    public class func createAccountExtensionContactWithRequestBuilder(accountId accountId: Int32, extensionId: Int32, data: CreateContactParams? = nil) -> RequestBuilder<ContactFull> {
        var path = "/accounts/{accountId}/extensions/{extensionId}/contacts"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{extensionId}", withString: "\(extensionId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ContactFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter contactId: (path) Contact ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteAccountExtensionContact(accountId accountId: Int32, extensionId: Int32, contactId: Int32, completion: ((data: DeleteContact?, error: ErrorType?) -> Void)) {
        deleteAccountExtensionContactWithRequestBuilder(accountId: accountId, extensionId: extensionId, contactId: contactId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     - DELETE /accounts/{accountId}/extensions/{extensionId}/contacts/{contactId}
     - 
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "success" : true
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter contactId: (path) Contact ID 

     - returns: RequestBuilder<DeleteContact> 
     */
    public class func deleteAccountExtensionContactWithRequestBuilder(accountId accountId: Int32, extensionId: Int32, contactId: Int32) -> RequestBuilder<DeleteContact> {
        var path = "/accounts/{accountId}/extensions/{extensionId}/contacts/{contactId}"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{extensionId}", withString: "\(extensionId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{contactId}", withString: "\(contactId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<DeleteContact>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Retrieve the details of an address book contact
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter contactId: (path) Contact ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAccountExtensionContact(accountId accountId: Int32, extensionId: Int32, contactId: Int32, completion: ((data: ContactFull?, error: ErrorType?) -> Void)) {
        getAccountExtensionContactWithRequestBuilder(accountId: accountId, extensionId: extensionId, contactId: contactId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Retrieve the details of an address book contact
     - GET /accounts/{accountId}/extensions/{extensionId}/contacts/{contactId}
     - For more info on the fields shown, see Account Contacts.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "addresses" : "",
  "prefix" : "aeiou",
  "last_name" : "aeiou",
  "created_at" : "",
  "middle_name" : "aeiou",
  "suffix" : "aeiou",
  "emails" : "",
  "phone_numbers" : [ {
    "number" : "aeiou",
    "normalized" : "aeiou",
    "type" : "aeiou"
  } ],
  "phonetic_first_name" : "aeiou",
  "phonetic_middle_name" : "aeiou",
  "updated_at" : "",
  "nickname" : "aeiou",
  "company" : "aeiou",
  "id" : "",
  "department" : "aeiou",
  "first_name" : "aeiou",
  "phonetic_last_name" : "aeiou",
  "job_title" : "aeiou",
  "group" : {
    "name" : "aeiou",
    "id" : ""
  }
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter contactId: (path) Contact ID 

     - returns: RequestBuilder<ContactFull> 
     */
    public class func getAccountExtensionContactWithRequestBuilder(accountId accountId: Int32, extensionId: Int32, contactId: Int32) -> RequestBuilder<ContactFull> {
        var path = "/accounts/{accountId}/extensions/{extensionId}/contacts/{contactId}"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{extensionId}", withString: "\(extensionId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{contactId}", withString: "\(contactId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ContactFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Show a list of address book contacts
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter filtersId: (query) ID filter (optional)
     - parameter filtersGroupId: (query) Group filter (optional)
     - parameter filtersUpdatedAt: (query) Updated At filter (optional)
     - parameter sortId: (query) ID sorting (optional)
     - parameter sortUpdatedAt: (query) Updated At sorting (optional)
     - parameter limit: (query) Max results (optional)
     - parameter offset: (query) Results to skip (optional)
     - parameter fields: (query) Field set (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listAccountExtensionContacts(accountId accountId: Int32, extensionId: Int32, filtersId: [String]? = nil, filtersGroupId: [String]? = nil, filtersUpdatedAt: [String]? = nil, sortId: String? = nil, sortUpdatedAt: String? = nil, limit: Int32? = nil, offset: Int32? = nil, fields: String? = nil, completion: ((data: ListContactsFull?, error: ErrorType?) -> Void)) {
        listAccountExtensionContactsWithRequestBuilder(accountId: accountId, extensionId: extensionId, filtersId: filtersId, filtersGroupId: filtersGroupId, filtersUpdatedAt: filtersUpdatedAt, sortId: sortId, sortUpdatedAt: sortUpdatedAt, limit: limit, offset: offset, fields: fields).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Show a list of address book contacts
     - GET /accounts/{accountId}/extensions/{extensionId}/contacts
     - See Account Contacts for more info on the fields in each item.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "total" : "",
  "offset" : "",
  "limit" : "",
  "filters" : {
    "updated_at" : "aeiou",
    "group_id" : "aeiou",
    "id" : "aeiou"
  },
  "sort" : {
    "updated_at" : "aeiou",
    "id" : "aeiou"
  },
  "items" : [ {
    "addresses" : "",
    "prefix" : "aeiou",
    "last_name" : "aeiou",
    "created_at" : "",
    "middle_name" : "aeiou",
    "suffix" : "aeiou",
    "emails" : "",
    "phone_numbers" : [ {
      "number" : "aeiou",
      "normalized" : "aeiou",
      "type" : "aeiou"
    } ],
    "phonetic_first_name" : "aeiou",
    "phonetic_middle_name" : "aeiou",
    "updated_at" : "",
    "nickname" : "aeiou",
    "company" : "aeiou",
    "id" : "",
    "department" : "aeiou",
    "first_name" : "aeiou",
    "phonetic_last_name" : "aeiou",
    "job_title" : "aeiou",
    "group" : {
      "name" : "aeiou",
      "id" : ""
    }
  } ]
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter filtersId: (query) ID filter (optional)
     - parameter filtersGroupId: (query) Group filter (optional)
     - parameter filtersUpdatedAt: (query) Updated At filter (optional)
     - parameter sortId: (query) ID sorting (optional)
     - parameter sortUpdatedAt: (query) Updated At sorting (optional)
     - parameter limit: (query) Max results (optional)
     - parameter offset: (query) Results to skip (optional)
     - parameter fields: (query) Field set (optional)

     - returns: RequestBuilder<ListContactsFull> 
     */
    public class func listAccountExtensionContactsWithRequestBuilder(accountId accountId: Int32, extensionId: Int32, filtersId: [String]? = nil, filtersGroupId: [String]? = nil, filtersUpdatedAt: [String]? = nil, sortId: String? = nil, sortUpdatedAt: String? = nil, limit: Int32? = nil, offset: Int32? = nil, fields: String? = nil) -> RequestBuilder<ListContactsFull> {
        var path = "/accounts/{accountId}/extensions/{extensionId}/contacts"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{extensionId}", withString: "\(extensionId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filters[id]": filtersId,
            "filters[group_id]": filtersGroupId,
            "filters[updated_at]": filtersUpdatedAt,
            "sort[id]": sortId,
            "sort[updated_at]": sortUpdatedAt,
            "limit": limit?.encodeToJSON(),
            "offset": offset?.encodeToJSON(),
            "fields": fields
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ListContactsFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter data: (body) Contact data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceAccountExtensionContact(accountId accountId: Int32, extensionId: Int32, data: CreateContactParams? = nil, completion: ((data: ContactFull?, error: ErrorType?) -> Void)) {
        replaceAccountExtensionContactWithRequestBuilder(accountId: accountId, extensionId: extensionId, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     - PUT /accounts/{accountId}/extensions/{extensionId}/contacts
     - For more on the input fields, see Account Contacts.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "addresses" : "",
  "prefix" : "aeiou",
  "last_name" : "aeiou",
  "created_at" : "",
  "middle_name" : "aeiou",
  "suffix" : "aeiou",
  "emails" : "",
  "phone_numbers" : [ {
    "number" : "aeiou",
    "normalized" : "aeiou",
    "type" : "aeiou"
  } ],
  "phonetic_first_name" : "aeiou",
  "phonetic_middle_name" : "aeiou",
  "updated_at" : "",
  "nickname" : "aeiou",
  "company" : "aeiou",
  "id" : "",
  "department" : "aeiou",
  "first_name" : "aeiou",
  "phonetic_last_name" : "aeiou",
  "job_title" : "aeiou",
  "group" : {
    "name" : "aeiou",
    "id" : ""
  }
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter data: (body) Contact data (optional)

     - returns: RequestBuilder<ContactFull> 
     */
    public class func replaceAccountExtensionContactWithRequestBuilder(accountId accountId: Int32, extensionId: Int32, data: CreateContactParams? = nil) -> RequestBuilder<ContactFull> {
        var path = "/accounts/{accountId}/extensions/{extensionId}/contacts"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{extensionId}", withString: "\(extensionId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ContactFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
