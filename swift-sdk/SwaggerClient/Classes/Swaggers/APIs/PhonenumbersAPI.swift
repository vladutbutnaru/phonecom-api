//
// PhonenumbersAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class PhonenumbersAPI: APIBase {
    /**
     Add a phone number to an account
     
     - parameter accountId: (path) Account ID 
     - parameter data: (body) Phone Number data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createAccountPhoneNumber(accountId accountId: Int32, data: CreatePhoneNumberParams? = nil, completion: ((data: PhoneNumberFull?, error: ErrorType?) -> Void)) {
        createAccountPhoneNumberWithRequestBuilder(accountId: accountId, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Add a phone number to an account
     - POST /accounts/{accountId}/phone-numbers
     - See Intro to Account Phone Numbers for more info on the properties to use.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "call_notifications" : {
    "emails" : [ "aeiou" ],
    "sms" : "aeiou"
  },
  "route" : {
    "name" : "aeiou",
    "id" : ""
  },
  "block_anonymous" : true,
  "caller_id" : {
    "name" : "aeiou",
    "type" : "aeiou"
  },
  "name" : "aeiou",
  "phone_number" : "aeiou",
  "id" : "",
  "block_incoming" : true,
  "sms_forwarding" : {
    "extension" : {
      "extension" : "",
      "name" : "aeiou",
      "id" : ""
    },
    "application" : {
      "name" : "aeiou",
      "id" : ""
    },
    "type" : "aeiou"
  }
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter data: (body) Phone Number data (optional)

     - returns: RequestBuilder<PhoneNumberFull> 
     */
    public class func createAccountPhoneNumberWithRequestBuilder(accountId accountId: Int32, data: CreatePhoneNumberParams? = nil) -> RequestBuilder<PhoneNumberFull> {
        var path = "/accounts/{accountId}/phone-numbers"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PhoneNumberFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Show details of an individual phone number
     
     - parameter accountId: (path) Account ID 
     - parameter numberId: (path) Number ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAccountPhoneNumber(accountId accountId: Int32, numberId: Int32, completion: ((data: PhoneNumberFull?, error: ErrorType?) -> Void)) {
        getAccountPhoneNumberWithRequestBuilder(accountId: accountId, numberId: numberId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Show details of an individual phone number
     - GET /accounts/{accountId}/phone-numbers/{numberId}
     - See Intro to Account Phone Numbers for more info on the properties.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "call_notifications" : {
    "emails" : [ "aeiou" ],
    "sms" : "aeiou"
  },
  "route" : {
    "name" : "aeiou",
    "id" : ""
  },
  "block_anonymous" : true,
  "caller_id" : {
    "name" : "aeiou",
    "type" : "aeiou"
  },
  "name" : "aeiou",
  "phone_number" : "aeiou",
  "id" : "",
  "block_incoming" : true,
  "sms_forwarding" : {
    "extension" : {
      "extension" : "",
      "name" : "aeiou",
      "id" : ""
    },
    "application" : {
      "name" : "aeiou",
      "id" : ""
    },
    "type" : "aeiou"
  }
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter numberId: (path) Number ID 

     - returns: RequestBuilder<PhoneNumberFull> 
     */
    public class func getAccountPhoneNumberWithRequestBuilder(accountId accountId: Int32, numberId: Int32) -> RequestBuilder<PhoneNumberFull> {
        var path = "/accounts/{accountId}/phone-numbers/{numberId}"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{numberId}", withString: "\(numberId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PhoneNumberFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a list of phone numbers registered to an account
     
     - parameter accountId: (path) Account ID 
     - parameter filtersId: (query) ID filter (optional)
     - parameter filtersName: (query) Name filter (optional)
     - parameter filtersPhoneNumber: (query) Phone number filter (optional)
     - parameter sortId: (query) ID sorting (optional)
     - parameter sortName: (query) Name sorting (optional)
     - parameter sortPhoneNumber: (query) Phone number sorting (optional)
     - parameter limit: (query) Max results (optional)
     - parameter offset: (query) Results to skip (optional)
     - parameter fields: (query) Field set (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listAccountPhoneNumbers(accountId accountId: Int32, filtersId: [String]? = nil, filtersName: [String]? = nil, filtersPhoneNumber: [String]? = nil, sortId: String? = nil, sortName: String? = nil, sortPhoneNumber: String? = nil, limit: Int32? = nil, offset: Int32? = nil, fields: String? = nil, completion: ((data: ListPhoneNumbersFull?, error: ErrorType?) -> Void)) {
        listAccountPhoneNumbersWithRequestBuilder(accountId: accountId, filtersId: filtersId, filtersName: filtersName, filtersPhoneNumber: filtersPhoneNumber, sortId: sortId, sortName: sortName, sortPhoneNumber: sortPhoneNumber, limit: limit, offset: offset, fields: fields).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of phone numbers registered to an account
     - GET /accounts/{accountId}/phone-numbers
     - See Intro to Account Phone Numbers for more info on the properties.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "total" : "",
  "offset" : "",
  "limit" : "",
  "filters" : {
    "name" : "aeiou",
    "phone_number" : "aeiou",
    "id" : "aeiou"
  },
  "sort" : {
    "name" : "aeiou",
    "phone_number" : "aeiou",
    "id" : "aeiou"
  },
  "items" : ""
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter filtersId: (query) ID filter (optional)
     - parameter filtersName: (query) Name filter (optional)
     - parameter filtersPhoneNumber: (query) Phone number filter (optional)
     - parameter sortId: (query) ID sorting (optional)
     - parameter sortName: (query) Name sorting (optional)
     - parameter sortPhoneNumber: (query) Phone number sorting (optional)
     - parameter limit: (query) Max results (optional)
     - parameter offset: (query) Results to skip (optional)
     - parameter fields: (query) Field set (optional)

     - returns: RequestBuilder<ListPhoneNumbersFull> 
     */
    public class func listAccountPhoneNumbersWithRequestBuilder(accountId accountId: Int32, filtersId: [String]? = nil, filtersName: [String]? = nil, filtersPhoneNumber: [String]? = nil, sortId: String? = nil, sortName: String? = nil, sortPhoneNumber: String? = nil, limit: Int32? = nil, offset: Int32? = nil, fields: String? = nil) -> RequestBuilder<ListPhoneNumbersFull> {
        var path = "/accounts/{accountId}/phone-numbers"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filters[id]": filtersId,
            "filters[name]": filtersName,
            "filters[phone_number]": filtersPhoneNumber,
            "sort[id]": sortId,
            "sort[name]": sortName,
            "sort[phone_number]": sortPhoneNumber,
            "limit": limit?.encodeToJSON(),
            "offset": offset?.encodeToJSON(),
            "fields": fields
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ListPhoneNumbersFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Update the settings for an existing phone number on your account
     
     - parameter accountId: (path) Account ID 
     - parameter numberId: (path) Number ID 
     - parameter data: (body) Phone Number data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceAccountPhoneNumber(accountId accountId: Int32, numberId: Int32, data: ReplacePhoneNumberParams? = nil, completion: ((data: PhoneNumberFull?, error: ErrorType?) -> Void)) {
        replaceAccountPhoneNumberWithRequestBuilder(accountId: accountId, numberId: numberId, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update the settings for an existing phone number on your account
     - PUT /accounts/{accountId}/phone-numbers/{numberId}
     - See Intro to Account Phone Numbers for more info on the properties.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "call_notifications" : {
    "emails" : [ "aeiou" ],
    "sms" : "aeiou"
  },
  "route" : {
    "name" : "aeiou",
    "id" : ""
  },
  "block_anonymous" : true,
  "caller_id" : {
    "name" : "aeiou",
    "type" : "aeiou"
  },
  "name" : "aeiou",
  "phone_number" : "aeiou",
  "id" : "",
  "block_incoming" : true,
  "sms_forwarding" : {
    "extension" : {
      "extension" : "",
      "name" : "aeiou",
      "id" : ""
    },
    "application" : {
      "name" : "aeiou",
      "id" : ""
    },
    "type" : "aeiou"
  }
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter numberId: (path) Number ID 
     - parameter data: (body) Phone Number data (optional)

     - returns: RequestBuilder<PhoneNumberFull> 
     */
    public class func replaceAccountPhoneNumberWithRequestBuilder(accountId accountId: Int32, numberId: Int32, data: ReplacePhoneNumberParams? = nil) -> RequestBuilder<PhoneNumberFull> {
        var path = "/accounts/{accountId}/phone-numbers/{numberId}"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{numberId}", withString: "\(numberId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<PhoneNumberFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
