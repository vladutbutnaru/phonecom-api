//
// RoutesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class RoutesAPI: APIBase {
    /**
     Add a new address book contact for an extension
     
     - parameter accountId: (path) Account ID 
     - parameter data: (body) Route data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createRoute(accountId accountId: Int32, data: CreateRouteParams? = nil, completion: ((data: RouteFull?, error: ErrorType?) -> Void)) {
        createRouteWithRequestBuilder(accountId: accountId, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Add a new address book contact for an extension
     - POST /accounts/{accountId}/routes
     - For more on the input fields, see Intro to Routes.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "extension" : {
    "extension" : "",
    "name" : "aeiou",
    "id" : ""
  },
  "name" : "aeiou",
  "rules" : [ {
    "filter" : {
      "schedule" : {
        "name" : "aeiou",
        "id" : ""
      },
      "contact" : {
        "prefix" : "aeiou",
        "nickname" : "aeiou",
        "last_name" : "aeiou",
        "company" : "aeiou",
        "id" : "",
        "middle_name" : "aeiou",
        "suffix" : "aeiou",
        "first_name" : "aeiou"
      },
      "type" : "aeiou",
      "group" : {
        "name" : "aeiou",
        "id" : ""
      }
    },
    "actions" : [ {
      "duration" : "",
      "extension" : "",
      "hold_music" : {
        "name" : "aeiou",
        "id" : ""
      },
      "greeting" : "",
      "action" : "aeiou",
      "menu" : {
        "name" : "aeiou",
        "id" : ""
      },
      "trunk" : {
        "name" : "aeiou",
        "id" : ""
      },
      "items" : [ {
        "number" : "aeiou",
        "extension" : "",
        "screening" : true,
        "caller_id" : "aeiou",
        "voice_tag" : "aeiou",
        "distinctive_ring" : "aeiou",
        "type" : "aeiou"
      } ],
      "timeout" : "",
      "queue" : {
        "name" : "aeiou",
        "id" : ""
      }
    } ]
  } ],
  "id" : ""
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter data: (body) Route data (optional)

     - returns: RequestBuilder<RouteFull> 
     */
    public class func createRouteWithRequestBuilder(accountId accountId: Int32, data: CreateRouteParams? = nil) -> RequestBuilder<RouteFull> {
        var path = "/accounts/{accountId}/routes"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<RouteFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     
     
     - parameter accountId: (path) Account ID 
     - parameter routeId: (path) Route ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteAccountRoute(accountId accountId: Int32, routeId: Int32, completion: ((data: DeleteRoute?, error: ErrorType?) -> Void)) {
        deleteAccountRouteWithRequestBuilder(accountId: accountId, routeId: routeId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     - DELETE /accounts/{accountId}/routes/{routeId}
     - 
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "success" : true
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter routeId: (path) Route ID 

     - returns: RequestBuilder<DeleteRoute> 
     */
    public class func deleteAccountRouteWithRequestBuilder(accountId accountId: Int32, routeId: Int32) -> RequestBuilder<DeleteRoute> {
        var path = "/accounts/{accountId}/routes/{routeId}"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{routeId}", withString: "\(routeId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<DeleteRoute>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Show details of an individual route
     
     - parameter accountId: (path) Account ID 
     - parameter routeId: (path) Route ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAccountRoute(accountId accountId: Int32, routeId: Int32, completion: ((data: RouteFull?, error: ErrorType?) -> Void)) {
        getAccountRouteWithRequestBuilder(accountId: accountId, routeId: routeId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Show details of an individual route
     - GET /accounts/{accountId}/routes/{routeId}
     - This service shows the details of an individual route.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "extension" : {
    "extension" : "",
    "name" : "aeiou",
    "id" : ""
  },
  "name" : "aeiou",
  "rules" : [ {
    "filter" : {
      "schedule" : {
        "name" : "aeiou",
        "id" : ""
      },
      "contact" : {
        "prefix" : "aeiou",
        "nickname" : "aeiou",
        "last_name" : "aeiou",
        "company" : "aeiou",
        "id" : "",
        "middle_name" : "aeiou",
        "suffix" : "aeiou",
        "first_name" : "aeiou"
      },
      "type" : "aeiou",
      "group" : {
        "name" : "aeiou",
        "id" : ""
      }
    },
    "actions" : [ {
      "duration" : "",
      "extension" : "",
      "hold_music" : {
        "name" : "aeiou",
        "id" : ""
      },
      "greeting" : "",
      "action" : "aeiou",
      "menu" : {
        "name" : "aeiou",
        "id" : ""
      },
      "trunk" : {
        "name" : "aeiou",
        "id" : ""
      },
      "items" : [ {
        "number" : "aeiou",
        "extension" : "",
        "screening" : true,
        "caller_id" : "aeiou",
        "voice_tag" : "aeiou",
        "distinctive_ring" : "aeiou",
        "type" : "aeiou"
      } ],
      "timeout" : "",
      "queue" : {
        "name" : "aeiou",
        "id" : ""
      }
    } ]
  } ],
  "id" : ""
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter routeId: (path) Route ID 

     - returns: RequestBuilder<RouteFull> 
     */
    public class func getAccountRouteWithRequestBuilder(accountId accountId: Int32, routeId: Int32) -> RequestBuilder<RouteFull> {
        var path = "/accounts/{accountId}/routes/{routeId}"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{routeId}", withString: "\(routeId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<RouteFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get a list of routes for an account
     
     - parameter accountId: (path) Account ID 
     - parameter filtersId: (query) ID filter (optional)
     - parameter filtersName: (query) Name filter (optional)
     - parameter sortId: (query) ID sorting (optional)
     - parameter sortName: (query) Name sorting (optional)
     - parameter limit: (query) Max results (optional)
     - parameter offset: (query) Results to skip (optional)
     - parameter fields: (query) Field set (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listAccountRoutes(accountId accountId: Int32, filtersId: [String]? = nil, filtersName: [String]? = nil, sortId: String? = nil, sortName: String? = nil, limit: Int32? = nil, offset: Int32? = nil, fields: String? = nil, completion: ((data: ListRoutesFull?, error: ErrorType?) -> Void)) {
        listAccountRoutesWithRequestBuilder(accountId: accountId, filtersId: filtersId, filtersName: filtersName, sortId: sortId, sortName: sortName, limit: limit, offset: offset, fields: fields).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get a list of routes for an account
     - GET /accounts/{accountId}/routes
     - See Intro to Routes for more info on the properties.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "total" : "",
  "offset" : "",
  "limit" : "",
  "filters" : {
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "sort" : {
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "items" : ""
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter filtersId: (query) ID filter (optional)
     - parameter filtersName: (query) Name filter (optional)
     - parameter sortId: (query) ID sorting (optional)
     - parameter sortName: (query) Name sorting (optional)
     - parameter limit: (query) Max results (optional)
     - parameter offset: (query) Results to skip (optional)
     - parameter fields: (query) Field set (optional)

     - returns: RequestBuilder<ListRoutesFull> 
     */
    public class func listAccountRoutesWithRequestBuilder(accountId accountId: Int32, filtersId: [String]? = nil, filtersName: [String]? = nil, sortId: String? = nil, sortName: String? = nil, limit: Int32? = nil, offset: Int32? = nil, fields: String? = nil) -> RequestBuilder<ListRoutesFull> {
        var path = "/accounts/{accountId}/routes"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filters[id]": filtersId,
            "filters[name]": filtersName,
            "sort[id]": sortId,
            "sort[name]": sortName,
            "limit": limit?.encodeToJSON(),
            "offset": offset?.encodeToJSON(),
            "fields": fields
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ListRoutesFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     
     
     - parameter accountId: (path) Account ID 
     - parameter routeId: (path) Route ID 
     - parameter data: (body) Route data (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceAccountRoute(accountId accountId: Int32, routeId: Int32, data: CreateRouteParams? = nil, completion: ((data: RouteFull?, error: ErrorType?) -> Void)) {
        replaceAccountRouteWithRequestBuilder(accountId: accountId, routeId: routeId, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     - PUT /accounts/{accountId}/routes/{routeId}
     - For more on the input fields, see Intro to Routes.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "extension" : {
    "extension" : "",
    "name" : "aeiou",
    "id" : ""
  },
  "name" : "aeiou",
  "rules" : [ {
    "filter" : {
      "schedule" : {
        "name" : "aeiou",
        "id" : ""
      },
      "contact" : {
        "prefix" : "aeiou",
        "nickname" : "aeiou",
        "last_name" : "aeiou",
        "company" : "aeiou",
        "id" : "",
        "middle_name" : "aeiou",
        "suffix" : "aeiou",
        "first_name" : "aeiou"
      },
      "type" : "aeiou",
      "group" : {
        "name" : "aeiou",
        "id" : ""
      }
    },
    "actions" : [ {
      "duration" : "",
      "extension" : "",
      "hold_music" : {
        "name" : "aeiou",
        "id" : ""
      },
      "greeting" : "",
      "action" : "aeiou",
      "menu" : {
        "name" : "aeiou",
        "id" : ""
      },
      "trunk" : {
        "name" : "aeiou",
        "id" : ""
      },
      "items" : [ {
        "number" : "aeiou",
        "extension" : "",
        "screening" : true,
        "caller_id" : "aeiou",
        "voice_tag" : "aeiou",
        "distinctive_ring" : "aeiou",
        "type" : "aeiou"
      } ],
      "timeout" : "",
      "queue" : {
        "name" : "aeiou",
        "id" : ""
      }
    } ]
  } ],
  "id" : ""
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter routeId: (path) Route ID 
     - parameter data: (body) Route data (optional)

     - returns: RequestBuilder<RouteFull> 
     */
    public class func replaceAccountRouteWithRequestBuilder(accountId accountId: Int32, routeId: Int32, data: CreateRouteParams? = nil) -> RequestBuilder<RouteFull> {
        var path = "/accounts/{accountId}/routes/{routeId}"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{routeId}", withString: "\(routeId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = data?.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<RouteFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
