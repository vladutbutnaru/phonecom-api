//
// GroupsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class GroupsAPI: APIBase {
    /**
     
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter data: (body) Group name 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func createAccountExtensionContactGroup(accountId accountId: Int32, extensionId: Int32, data: CreateGroupParams, completion: ((data: GroupFull?, error: ErrorType?) -> Void)) {
        createAccountExtensionContactGroupWithRequestBuilder(accountId: accountId, extensionId: extensionId, data: data).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     - POST /accounts/{accountId}/extensions/{extensionId}/contact-groups
     - See Account Contact Groups for more info on the properties.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "id" : ""
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter data: (body) Group name 

     - returns: RequestBuilder<GroupFull> 
     */
    public class func createAccountExtensionContactGroupWithRequestBuilder(accountId accountId: Int32, extensionId: Int32, data: CreateGroupParams) -> RequestBuilder<GroupFull> {
        var path = "/accounts/{accountId}/extensions/{extensionId}/contact-groups"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{extensionId}", withString: "\(extensionId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = data.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GroupFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Delete an addressbook group
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter groupId: (path) Group ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func deleteAccountExtensionContactGroup(accountId accountId: Int32, extensionId: Int32, groupId: Int32, completion: ((data: DeleteGroup?, error: ErrorType?) -> Void)) {
        deleteAccountExtensionContactGroupWithRequestBuilder(accountId: accountId, extensionId: extensionId, groupId: groupId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Delete an addressbook group
     - DELETE /accounts/{accountId}/extensions/{extensionId}/contact-groups/{groupId}
     - 
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "success" : true
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter groupId: (path) Group ID 

     - returns: RequestBuilder<DeleteGroup> 
     */
    public class func deleteAccountExtensionContactGroupWithRequestBuilder(accountId accountId: Int32, extensionId: Int32, groupId: Int32) -> RequestBuilder<DeleteGroup> {
        var path = "/accounts/{accountId}/extensions/{extensionId}/contact-groups/{groupId}"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{extensionId}", withString: "\(extensionId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{groupId}", withString: "\(groupId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<DeleteGroup>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "DELETE", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter groupId: (path) Group ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAccountExtensionContactGroup(accountId accountId: Int32, extensionId: Int32, groupId: Int32, completion: ((data: GroupFull?, error: ErrorType?) -> Void)) {
        getAccountExtensionContactGroupWithRequestBuilder(accountId: accountId, extensionId: extensionId, groupId: groupId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     - GET /accounts/{accountId}/extensions/{extensionId}/contact-groups/{groupId}
     - See Account Contact Groups for more info on the properties.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "id" : ""
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter groupId: (path) Group ID 

     - returns: RequestBuilder<GroupFull> 
     */
    public class func getAccountExtensionContactGroupWithRequestBuilder(accountId accountId: Int32, extensionId: Int32, groupId: Int32) -> RequestBuilder<GroupFull> {
        var path = "/accounts/{accountId}/extensions/{extensionId}/contact-groups/{groupId}"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{extensionId}", withString: "\(extensionId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{groupId}", withString: "\(groupId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GroupFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Show a list of contact groups belonging to an extension
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter filtersId: (query) ID filter (optional)
     - parameter filtersName: (query) Name filter (optional)
     - parameter sortId: (query) ID sorting (optional)
     - parameter sortName: (query) Name sorting (optional)
     - parameter limit: (query) Max results (optional)
     - parameter offset: (query) Results to skip (optional)
     - parameter fields: (query) Field set (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func listAccountExtensionContactGroups(accountId accountId: Int32, extensionId: Int32, filtersId: [String]? = nil, filtersName: [String]? = nil, sortId: String? = nil, sortName: String? = nil, limit: Int32? = nil, offset: Int32? = nil, fields: String? = nil, completion: ((data: ListGroupsFull?, error: ErrorType?) -> Void)) {
        listAccountExtensionContactGroupsWithRequestBuilder(accountId: accountId, extensionId: extensionId, filtersId: filtersId, filtersName: filtersName, sortId: sortId, sortName: sortName, limit: limit, offset: offset, fields: fields).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Show a list of contact groups belonging to an extension
     - GET /accounts/{accountId}/extensions/{extensionId}/contact-groups
     - See Account Contact Groups for details on the properties.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "total" : "",
  "offset" : "",
  "limit" : "",
  "filters" : {
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "sort" : {
    "name" : "aeiou",
    "id" : "aeiou"
  },
  "items" : ""
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter filtersId: (query) ID filter (optional)
     - parameter filtersName: (query) Name filter (optional)
     - parameter sortId: (query) ID sorting (optional)
     - parameter sortName: (query) Name sorting (optional)
     - parameter limit: (query) Max results (optional)
     - parameter offset: (query) Results to skip (optional)
     - parameter fields: (query) Field set (optional)

     - returns: RequestBuilder<ListGroupsFull> 
     */
    public class func listAccountExtensionContactGroupsWithRequestBuilder(accountId accountId: Int32, extensionId: Int32, filtersId: [String]? = nil, filtersName: [String]? = nil, sortId: String? = nil, sortName: String? = nil, limit: Int32? = nil, offset: Int32? = nil, fields: String? = nil) -> RequestBuilder<ListGroupsFull> {
        var path = "/accounts/{accountId}/extensions/{extensionId}/contact-groups"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{extensionId}", withString: "\(extensionId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "filters[id]": filtersId,
            "filters[name]": filtersName,
            "sort[id]": sortId,
            "sort[name]": sortName,
            "limit": limit?.encodeToJSON(),
            "offset": offset?.encodeToJSON(),
            "fields": fields
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<ListGroupsFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter groupId: (path) Group ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func replaceAccountExtensionContactGroup(accountId accountId: Int32, extensionId: Int32, groupId: Int32, completion: ((data: GroupFull?, error: ErrorType?) -> Void)) {
        replaceAccountExtensionContactGroupWithRequestBuilder(accountId: accountId, extensionId: extensionId, groupId: groupId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     - PUT /accounts/{accountId}/extensions/{extensionId}/contact-groups/{groupId}
     - See Account Contact Groups for more info on the properties.
     - API Key:
       - type: apiKey Authorization 
       - name: apiKey
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "id" : ""
}}]
     
     - parameter accountId: (path) Account ID 
     - parameter extensionId: (path) Extension ID 
     - parameter groupId: (path) Group ID 

     - returns: RequestBuilder<GroupFull> 
     */
    public class func replaceAccountExtensionContactGroupWithRequestBuilder(accountId accountId: Int32, extensionId: Int32, groupId: Int32) -> RequestBuilder<GroupFull> {
        var path = "/accounts/{accountId}/extensions/{extensionId}/contact-groups/{groupId}"
        path = path.stringByReplacingOccurrencesOfString("{accountId}", withString: "\(accountId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{extensionId}", withString: "\(extensionId)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{groupId}", withString: "\(groupId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GroupFull>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}
