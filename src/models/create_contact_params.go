package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// CreateContactParams create contact params
// swagger:model CreateContactParams
type CreateContactParams struct {

	// Addresses
	Addresses []interface{} `json:"addresses"`

	// Company Name
	Company string `json:"company,omitempty"`

	// Department Name
	Department string `json:"department,omitempty"`

	// Email Addresses
	Emails []interface{} `json:"emails"`

	// First Name
	FirstName string `json:"first_name,omitempty"`

	// Contact Group
	Group interface{} `json:"group,omitempty"`

	// Job Title
	JobTitle string `json:"job_title,omitempty"`

	// Last Name
	LastName string `json:"last_name,omitempty"`

	// Middle Name
	MiddleName string `json:"middle_name,omitempty"`

	// Nickname
	Nickname string `json:"nickname,omitempty"`

	// Phone Numbers
	PhoneNumbers []interface{} `json:"phone_numbers"`

	// Phonetic First Name
	PhoneticFirstName string `json:"phonetic_first_name,omitempty"`

	// Phonetic Last Name
	PhoneticLastName string `json:"phonetic_last_name,omitempty"`

	// Phonetic Middle Name
	PhoneticMiddleName string `json:"phonetic_middle_name,omitempty"`

	// Prefix
	Prefix string `json:"prefix,omitempty"`

	// Suffix
	Suffix string `json:"suffix,omitempty"`
}

// Validate validates this create contact params
func (m *CreateContactParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAddresses(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateEmails(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePhoneNumbers(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateContactParams) validateAddresses(formats strfmt.Registry) error {

	if swag.IsZero(m.Addresses) { // not required
		return nil
	}

	for i := 0; i < len(m.Addresses); i++ {

	}

	return nil
}

func (m *CreateContactParams) validateEmails(formats strfmt.Registry) error {

	if swag.IsZero(m.Emails) { // not required
		return nil
	}

	for i := 0; i < len(m.Emails); i++ {

	}

	return nil
}

func (m *CreateContactParams) validatePhoneNumbers(formats strfmt.Registry) error {

	if swag.IsZero(m.PhoneNumbers) { // not required
		return nil
	}

	for i := 0; i < len(m.PhoneNumbers); i++ {

	}

	return nil
}
