package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ContactFull The Full Contact Object includes all of the properties in the Contact Summary Object, along with several more:
// swagger:model ContactFull
type ContactFull struct {

	// addresses
	Addresses Addresses `json:"addresses"`

	// Name of the contact's company
	Company string `json:"company,omitempty"`

	// Integer UNIX timestamp when the contact was created. Read-only.
	CreatedAt int64 `json:"created_at,omitempty"`

	// Name of the contact's department
	Department string `json:"department,omitempty"`

	// emails
	Emails Emails `json:"emails"`

	// First name or given name
	FirstName string `json:"first_name,omitempty"`

	// group
	Group *GroupListContacts `json:"group,omitempty"`

	// Integer ID. Read-only.
	ID int64 `json:"id,omitempty"`

	// Contact's job title
	JobTitle string `json:"job_title,omitempty"`

	// Last name or surname
	LastName string `json:"last_name,omitempty"`

	// Middle or second name
	MiddleName string `json:"middle_name,omitempty"`

	// Nickname, or a shortened informal version of the contact's name
	Nickname string `json:"nickname,omitempty"`

	// phone numbers
	PhoneNumbers *PhoneNumberContact `json:"phone_numbers,omitempty"`

	// Phonetic first name. Useful for remembering how to pronounce the contact's name.
	PhoneticFirstName string `json:"phonetic_first_name,omitempty"`

	// Phonetic last name. Useful for remembering how to pronounce the contact's name.
	PhoneticLastName string `json:"phonetic_last_name,omitempty"`

	// Phonetic middle name. Useful for remembering how to pronounce the contact's name.
	PhoneticMiddleName string `json:"phonetic_middle_name,omitempty"`

	// Salutation, such as Mr, Mrs, or Dr
	Prefix string `json:"prefix,omitempty"`

	// Suffix, such as "Jr.", "Sr.", "II", or "III"
	Suffix string `json:"suffix,omitempty"`

	// Integer UNIX timestamp when the contact was created. Read-only.
	UpdatedAt int64 `json:"updated_at,omitempty"`
}

// Validate validates this contact full
func (m *ContactFull) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGroup(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePhoneNumbers(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContactFull) validateGroup(formats strfmt.Registry) error {

	if swag.IsZero(m.Group) { // not required
		return nil
	}

	if m.Group != nil {

		if err := m.Group.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("group")
			}
			return err
		}
	}

	return nil
}

func (m *ContactFull) validatePhoneNumbers(formats strfmt.Registry) error {

	if swag.IsZero(m.PhoneNumbers) { // not required
		return nil
	}

	if m.PhoneNumbers != nil {

		if err := m.PhoneNumbers.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("phone_numbers")
			}
			return err
		}
	}

	return nil
}
