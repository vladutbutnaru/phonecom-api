package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// Address Contact Address Object. See below for details.
// swagger:model Address
type Address struct {

	// City. Required.
	// Required: true
	City *string `json:"city"`

	// 2-character country code. Required.
	// Required: true
	Country *string `json:"country"`

	// Street address line 1. Required.
	// Required: true
	Line1 *string `json:"line_1"`

	// Street address line 2
	Line2 string `json:"line_2,omitempty"`

	// Postal code
	PostalCode string `json:"postal_code,omitempty"`

	// Province. Required if country is US
	Province string `json:"province,omitempty"`
}

// Validate validates this address
func (m *Address) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCity(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCountry(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateLine1(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Address) validateCity(formats strfmt.Registry) error {

	if err := validate.Required("city", "body", m.City); err != nil {
		return err
	}

	return nil
}

func (m *Address) validateCountry(formats strfmt.Registry) error {

	if err := validate.Required("country", "body", m.Country); err != nil {
		return err
	}

	return nil
}

func (m *Address) validateLine1(formats strfmt.Registry) error {

	if err := validate.Required("line_1", "body", m.Line1); err != nil {
		return err
	}

	return nil
}
