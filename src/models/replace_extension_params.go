package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ReplaceExtensionParams replace extension params
// swagger:model ReplaceExtensionParams
type ReplaceExtensionParams struct {

	// Email notifications for calls. Can be a single email or an array of emails
	CallNotificationsEmails []string `json:"call_notifications[emails]"`

	// SMS notifications for calls
	CallNotificationsSms string `json:"call_notifications[sms],omitempty"`

	// Caller ID
	CallerID string `json:"caller_id,omitempty"`

	// Enable Call Waiting
	EnableCallWaiting bool `json:"enable_call_waiting,omitempty"`

	// Enable outgoing calls
	EnableOutboundCalls bool `json:"enable_outbound_calls,omitempty"`

	// Extension number (required)
	Extension int64 `json:"extension,omitempty"`

	// Contact name
	FullName string `json:"full_name,omitempty"`

	// Include in dial-by-name directory
	IncludeInDirectory bool `json:"include_in_directory,omitempty"`

	// Local area code
	LocalAreaCode int64 `json:"local_area_code,omitempty"`

	// Name (required)
	Name string `json:"name,omitempty"`

	// Recording lookup object
	NameGreeting interface{} `json:"name_greeting,omitempty"`

	// Route object lookup (must belong to this extension)
	Route []string `json:"route"`

	// Timezone
	Timezone string `json:"timezone,omitempty"`

	// Extension type
	UsageType string `json:"usage_type,omitempty"`

	// Voicemail enabled
	VoicemailEnabled bool `json:"voicemail[enabled],omitempty"`

	// Recording lookup object
	VoicemailGreetingAlternate interface{} `json:"voicemail[greeting][alternate],omitempty"`

	// Use leave message prompt after voicemail
	VoicemailGreetingEnableLeaveMessagePrompt bool `json:"voicemail[greeting][enable_leave_message_prompt],omitempty"`

	// Recording lookup object
	VoicemailGreetingStandard interface{} `json:"voicemail[greeting][standard],omitempty"`

	// Voicemail greeting type
	VoicemailGreetingType string `json:"voicemail[greeting][type],omitempty"`

	// Email notifications for voicemails. Can be a single email or an array of emails
	VoicemailNotificationsEmails []string `json:"voicemail[notifications][emails]"`

	// SMS notifications for voicemails
	VoicemailNotificationsSms string `json:"voicemail[notifications][sms],omitempty"`

	// Voicemail password
	VoicemailPassword int64 `json:"voicemail[password],omitempty"`

	// Voicemail transcription type
	VoicemailTranscription string `json:"voicemail[transcription],omitempty"`
}

// Validate validates this replace extension params
func (m *ReplaceExtensionParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCallNotificationsEmails(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRoute(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateVoicemailNotificationsEmails(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReplaceExtensionParams) validateCallNotificationsEmails(formats strfmt.Registry) error {

	if swag.IsZero(m.CallNotificationsEmails) { // not required
		return nil
	}

	return nil
}

func (m *ReplaceExtensionParams) validateRoute(formats strfmt.Registry) error {

	if swag.IsZero(m.Route) { // not required
		return nil
	}

	return nil
}

func (m *ReplaceExtensionParams) validateVoicemailNotificationsEmails(formats strfmt.Registry) error {

	if swag.IsZero(m.VoicemailNotificationsEmails) { // not required
		return nil
	}

	return nil
}
