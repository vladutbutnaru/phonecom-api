package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// FilterIDExtensionNameArray filter Id extension name array
// swagger:model FilterIdExtensionNameArray
type FilterIDExtensionNameArray struct {

	// extension
	Extension []string `json:"extension"`

	// id
	ID []string `json:"id"`

	// name
	Name []string `json:"name"`
}

// Validate validates this filter Id extension name array
func (m *FilterIDExtensionNameArray) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExtension(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *FilterIDExtensionNameArray) validateExtension(formats strfmt.Registry) error {

	if swag.IsZero(m.Extension) { // not required
		return nil
	}

	return nil
}

func (m *FilterIDExtensionNameArray) validateID(formats strfmt.Registry) error {

	if swag.IsZero(m.ID) { // not required
		return nil
	}

	return nil
}

func (m *FilterIDExtensionNameArray) validateName(formats strfmt.Registry) error {

	if swag.IsZero(m.Name) { // not required
		return nil
	}

	return nil
}
