package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateTrunkParams create trunk params
// swagger:model CreateTrunkParams
type CreateTrunkParams struct {

	// Custom audio codec configuration
	Codecs []interface{} `json:"codecs"`

	// Recording lookup object
	ErrorMessage interface{} `json:"error_message,omitempty"`

	// Recording lookup object
	Greeting interface{} `json:"greeting,omitempty"`

	// Max concurrent calls
	MaxConcurrentCalls int64 `json:"max_concurrent_calls,omitempty"`

	// Max minutes per month
	MaxMinutesPerMonth int64 `json:"max_minutes_per_month,omitempty"`

	// Name of Trunk
	// Required: true
	Name *string `json:"name"`

	// URI of Trunk (in the form of SIP/user@host.com:port)
	// Required: true
	URL *string `json:"url"`
}

// Validate validates this create trunk params
func (m *CreateTrunkParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCodecs(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateURL(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateTrunkParams) validateCodecs(formats strfmt.Registry) error {

	if swag.IsZero(m.Codecs) { // not required
		return nil
	}

	for i := 0; i < len(m.Codecs); i++ {

	}

	return nil
}

func (m *CreateTrunkParams) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *CreateTrunkParams) validateURL(formats strfmt.Registry) error {

	if err := validate.Required("url", "body", m.URL); err != nil {
		return err
	}

	return nil
}
