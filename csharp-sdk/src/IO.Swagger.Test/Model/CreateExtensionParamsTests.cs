/* 
 * Phone.com API
 *
 * This is a Phone.com api Swagger definition
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apisupport@phone.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CreateExtensionParams
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class CreateExtensionParamsTests
    {
        // TODO uncomment below to declare an instance variable for CreateExtensionParams
        //private CreateExtensionParams instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CreateExtensionParams
            //instance = new CreateExtensionParams();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CreateExtensionParams
        /// </summary>
        [Test]
        public void CreateExtensionParamsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" CreateExtensionParams
            //Assert.IsInstanceOfType<CreateExtensionParams> (instance, "variable 'instance' is a CreateExtensionParams");
        }

        /// <summary>
        /// Test the property 'CallerId'
        /// </summary>
        [Test]
        public void CallerIdTest()
        {
            // TODO unit test for the property 'CallerId'
        }
        /// <summary>
        /// Test the property 'UsageType'
        /// </summary>
        [Test]
        public void UsageTypeTest()
        {
            // TODO unit test for the property 'UsageType'
        }
        /// <summary>
        /// Test the property 'AllowsCallWaiting'
        /// </summary>
        [Test]
        public void AllowsCallWaitingTest()
        {
            // TODO unit test for the property 'AllowsCallWaiting'
        }
        /// <summary>
        /// Test the property 'Extension'
        /// </summary>
        [Test]
        public void ExtensionTest()
        {
            // TODO unit test for the property 'Extension'
        }
        /// <summary>
        /// Test the property 'IncludeInDirectory'
        /// </summary>
        [Test]
        public void IncludeInDirectoryTest()
        {
            // TODO unit test for the property 'IncludeInDirectory'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'FullName'
        /// </summary>
        [Test]
        public void FullNameTest()
        {
            // TODO unit test for the property 'FullName'
        }
        /// <summary>
        /// Test the property 'Timezone'
        /// </summary>
        [Test]
        public void TimezoneTest()
        {
            // TODO unit test for the property 'Timezone'
        }
        /// <summary>
        /// Test the property 'NameGreeting'
        /// </summary>
        [Test]
        public void NameGreetingTest()
        {
            // TODO unit test for the property 'NameGreeting'
        }
        /// <summary>
        /// Test the property 'VoicemailGreetingAlternate'
        /// </summary>
        [Test]
        public void VoicemailGreetingAlternateTest()
        {
            // TODO unit test for the property 'VoicemailGreetingAlternate'
        }
        /// <summary>
        /// Test the property 'LocalAreaCode'
        /// </summary>
        [Test]
        public void LocalAreaCodeTest()
        {
            // TODO unit test for the property 'LocalAreaCode'
        }
        /// <summary>
        /// Test the property 'VoicemailGreetingEnableLeaveMessagePrompt'
        /// </summary>
        [Test]
        public void VoicemailGreetingEnableLeaveMessagePromptTest()
        {
            // TODO unit test for the property 'VoicemailGreetingEnableLeaveMessagePrompt'
        }
        /// <summary>
        /// Test the property 'VoicemailEnabled'
        /// </summary>
        [Test]
        public void VoicemailEnabledTest()
        {
            // TODO unit test for the property 'VoicemailEnabled'
        }
        /// <summary>
        /// Test the property 'EnableOutboundCalls'
        /// </summary>
        [Test]
        public void EnableOutboundCallsTest()
        {
            // TODO unit test for the property 'EnableOutboundCalls'
        }
        /// <summary>
        /// Test the property 'EnableCallWaiting'
        /// </summary>
        [Test]
        public void EnableCallWaitingTest()
        {
            // TODO unit test for the property 'EnableCallWaiting'
        }
        /// <summary>
        /// Test the property 'VoicemailPassword'
        /// </summary>
        [Test]
        public void VoicemailPasswordTest()
        {
            // TODO unit test for the property 'VoicemailPassword'
        }
        /// <summary>
        /// Test the property 'VoicemailGreetingType'
        /// </summary>
        [Test]
        public void VoicemailGreetingTypeTest()
        {
            // TODO unit test for the property 'VoicemailGreetingType'
        }
        /// <summary>
        /// Test the property 'VoicemailGreetingStandard'
        /// </summary>
        [Test]
        public void VoicemailGreetingStandardTest()
        {
            // TODO unit test for the property 'VoicemailGreetingStandard'
        }
        /// <summary>
        /// Test the property 'VoicemailTranscription'
        /// </summary>
        [Test]
        public void VoicemailTranscriptionTest()
        {
            // TODO unit test for the property 'VoicemailTranscription'
        }
        /// <summary>
        /// Test the property 'VoicemailNotificationsEmails'
        /// </summary>
        [Test]
        public void VoicemailNotificationsEmailsTest()
        {
            // TODO unit test for the property 'VoicemailNotificationsEmails'
        }
        /// <summary>
        /// Test the property 'VoicemailNotificationsSms'
        /// </summary>
        [Test]
        public void VoicemailNotificationsSmsTest()
        {
            // TODO unit test for the property 'VoicemailNotificationsSms'
        }
        /// <summary>
        /// Test the property 'CallNotificationsEmails'
        /// </summary>
        [Test]
        public void CallNotificationsEmailsTest()
        {
            // TODO unit test for the property 'CallNotificationsEmails'
        }
        /// <summary>
        /// Test the property 'CallNotificationsSms'
        /// </summary>
        [Test]
        public void CallNotificationsSmsTest()
        {
            // TODO unit test for the property 'CallNotificationsSms'
        }

    }

}
