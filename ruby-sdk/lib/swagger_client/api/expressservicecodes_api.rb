=begin
#Phone.com API

#This is a Phone.com api Swagger definition

OpenAPI spec version: 1.0.0
Contact: apisupport@phone.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require "uri"

module SwaggerClient
  class ExpressservicecodesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Show details of an account Express Service Code
    # This service shows the details of an Account Express Service Code.
    # @param account_id Account ID
    # @param code_id Device ID
    # @param [Hash] opts the optional parameters
    # @return [ExpressServiceCodeFull]
    def get_account_express_srv_code(account_id, code_id, opts = {})
      data, _status_code, _headers = get_account_express_srv_code_with_http_info(account_id, code_id, opts)
      return data
    end

    # Show details of an account Express Service Code
    # This service shows the details of an Account Express Service Code.
    # @param account_id Account ID
    # @param code_id Device ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(ExpressServiceCodeFull, Fixnum, Hash)>] ExpressServiceCodeFull data, response status code and response headers
    def get_account_express_srv_code_with_http_info(account_id, code_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ExpressservicecodesApi.get_account_express_srv_code ..."
      end
      # verify the required parameter 'account_id' is set
      fail ArgumentError, "Missing the required parameter 'account_id' when calling ExpressservicecodesApi.get_account_express_srv_code" if account_id.nil?
      # verify the required parameter 'code_id' is set
      fail ArgumentError, "Missing the required parameter 'code_id' when calling ExpressservicecodesApi.get_account_express_srv_code" if code_id.nil?
      # resource path
      local_var_path = "/accounts/{account_id}/express-service-codes/{code_id}".sub('{format}','json').sub('{' + 'account_id' + '}', account_id.to_s).sub('{' + 'code_id' + '}', code_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKey']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ExpressServiceCodeFull')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ExpressservicecodesApi#get_account_express_srv_code\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get the Express Service Code associated with your account in list format
    # See Express Service Codes for more detail.
    # @param account_id Account ID
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :filters_id ID filter
    # @return [ListExpressServiceCodesFull]
    def list_account_express_srv_codes(account_id, opts = {})
      data, _status_code, _headers = list_account_express_srv_codes_with_http_info(account_id, opts)
      return data
    end

    # Get the Express Service Code associated with your account in list format
    # See Express Service Codes for more detail.
    # @param account_id Account ID
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :filters_id ID filter
    # @return [Array<(ListExpressServiceCodesFull, Fixnum, Hash)>] ListExpressServiceCodesFull data, response status code and response headers
    def list_account_express_srv_codes_with_http_info(account_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ExpressservicecodesApi.list_account_express_srv_codes ..."
      end
      # verify the required parameter 'account_id' is set
      fail ArgumentError, "Missing the required parameter 'account_id' when calling ExpressservicecodesApi.list_account_express_srv_codes" if account_id.nil?
      # resource path
      local_var_path = "/accounts/{account_id}/express-service-codes".sub('{format}','json').sub('{' + 'account_id' + '}', account_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'filters[id]'] = @api_client.build_collection_param(opts[:'filters_id'], :multi) if !opts[:'filters_id'].nil?

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKey']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ListExpressServiceCodesFull')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ExpressservicecodesApi#list_account_express_srv_codes\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
