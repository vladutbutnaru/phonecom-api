=begin
#Phone.com API

#This is a Phone.com api Swagger definition

OpenAPI spec version: 1.0.0
Contact: apisupport@phone.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

=end

require "uri"

module SwaggerClient
  class NumberregionsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # 
    # This service lists the quantities of available phone numbers by region.
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :filters_country_code Country Code filter
    # @option opts [Array<String>] :filters_npa Area Code filter (North America only)
    # @option opts [Array<String>] :filters_nxx 2nd set of 3 digits filter (North America only)
    # @option opts [Array<String>] :filters_is_toll_free Toll-free status filter
    # @option opts [Array<String>] :filters_city City filter
    # @option opts [Array<String>] :filters_province_postal_code State or Province filter
    # @option opts [Array<String>] :filters_country_postal_code Country filter
    # @option opts [String] :sort_country_code International calling code sorting
    # @option opts [String] :sort_npa Area Code sorting (North America only)
    # @option opts [String] :sort_nxx 2nd set of 3 digits sorting (North America)
    # @option opts [String] :sort_is_toll_free Toll Free status sorting
    # @option opts [String] :sort_city City sorting
    # @option opts [String] :sort_province_postal_code State or Province sorting
    # @option opts [String] :sort_country_postal_code Country sorting
    # @option opts [Integer] :limit Max results
    # @option opts [Integer] :offset Results to skip
    # @option opts [String] :fields Field set
    # @option opts [Array<String>] :group_by Fields to group by (supports the same set of fields as the filters and sorting)
    # @return [ListPhoneNumbersRegionsFull]
    def list_available_phone_number_regions(opts = {})
      data, _status_code, _headers = list_available_phone_number_regions_with_http_info(opts)
      return data
    end

    # 
    # This service lists the quantities of available phone numbers by region.
    # @param [Hash] opts the optional parameters
    # @option opts [Array<String>] :filters_country_code Country Code filter
    # @option opts [Array<String>] :filters_npa Area Code filter (North America only)
    # @option opts [Array<String>] :filters_nxx 2nd set of 3 digits filter (North America only)
    # @option opts [Array<String>] :filters_is_toll_free Toll-free status filter
    # @option opts [Array<String>] :filters_city City filter
    # @option opts [Array<String>] :filters_province_postal_code State or Province filter
    # @option opts [Array<String>] :filters_country_postal_code Country filter
    # @option opts [String] :sort_country_code International calling code sorting
    # @option opts [String] :sort_npa Area Code sorting (North America only)
    # @option opts [String] :sort_nxx 2nd set of 3 digits sorting (North America)
    # @option opts [String] :sort_is_toll_free Toll Free status sorting
    # @option opts [String] :sort_city City sorting
    # @option opts [String] :sort_province_postal_code State or Province sorting
    # @option opts [String] :sort_country_postal_code Country sorting
    # @option opts [Integer] :limit Max results
    # @option opts [Integer] :offset Results to skip
    # @option opts [String] :fields Field set
    # @option opts [Array<String>] :group_by Fields to group by (supports the same set of fields as the filters and sorting)
    # @return [Array<(ListPhoneNumbersRegionsFull, Fixnum, Hash)>] ListPhoneNumbersRegionsFull data, response status code and response headers
    def list_available_phone_number_regions_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: NumberregionsApi.list_available_phone_number_regions ..."
      end
      if !opts[:'sort_npa'].nil? && opts[:'sort_npa'] !~ Regexp.new(asc|desc)
        fail ArgumentError, 'invalid value for "opts[:"sort_npa"]" when calling NumberregionsApi.list_available_phone_number_regions, must conform to the pattern asc|desc.'
      end

      if !opts[:'sort_nxx'].nil? && opts[:'sort_nxx'] !~ Regexp.new(asc|desc)
        fail ArgumentError, 'invalid value for "opts[:"sort_nxx"]" when calling NumberregionsApi.list_available_phone_number_regions, must conform to the pattern asc|desc.'
      end

      if !opts[:'sort_is_toll_free'].nil? && opts[:'sort_is_toll_free'] !~ Regexp.new(asc|desc)
        fail ArgumentError, 'invalid value for "opts[:"sort_is_toll_free"]" when calling NumberregionsApi.list_available_phone_number_regions, must conform to the pattern asc|desc.'
      end

      if !opts[:'sort_city'].nil? && opts[:'sort_city'] !~ Regexp.new(asc|desc)
        fail ArgumentError, 'invalid value for "opts[:"sort_city"]" when calling NumberregionsApi.list_available_phone_number_regions, must conform to the pattern asc|desc.'
      end

      if !opts[:'sort_province_postal_code'].nil? && opts[:'sort_province_postal_code'] !~ Regexp.new(asc|desc)
        fail ArgumentError, 'invalid value for "opts[:"sort_province_postal_code"]" when calling NumberregionsApi.list_available_phone_number_regions, must conform to the pattern asc|desc.'
      end

      if !opts[:'sort_country_postal_code'].nil? && opts[:'sort_country_postal_code'] !~ Regexp.new(asc|desc)
        fail ArgumentError, 'invalid value for "opts[:"sort_country_postal_code"]" when calling NumberregionsApi.list_available_phone_number_regions, must conform to the pattern asc|desc.'
      end

      # resource path
      local_var_path = "/phone-numbers/available/regions".sub('{format}','json')

      # query parameters
      query_params = {}
      query_params[:'filters[country_code]'] = @api_client.build_collection_param(opts[:'filters_country_code'], :multi) if !opts[:'filters_country_code'].nil?
      query_params[:'filters[npa]'] = @api_client.build_collection_param(opts[:'filters_npa'], :multi) if !opts[:'filters_npa'].nil?
      query_params[:'filters[nxx]'] = @api_client.build_collection_param(opts[:'filters_nxx'], :multi) if !opts[:'filters_nxx'].nil?
      query_params[:'filters[is_toll_free]'] = @api_client.build_collection_param(opts[:'filters_is_toll_free'], :multi) if !opts[:'filters_is_toll_free'].nil?
      query_params[:'filters[city]'] = @api_client.build_collection_param(opts[:'filters_city'], :multi) if !opts[:'filters_city'].nil?
      query_params[:'filters[province_postal_code]'] = @api_client.build_collection_param(opts[:'filters_province_postal_code'], :multi) if !opts[:'filters_province_postal_code'].nil?
      query_params[:'filters[country_postal_code]'] = @api_client.build_collection_param(opts[:'filters_country_postal_code'], :multi) if !opts[:'filters_country_postal_code'].nil?
      query_params[:'sort[country_code]'] = opts[:'sort_country_code'] if !opts[:'sort_country_code'].nil?
      query_params[:'sort[npa]'] = opts[:'sort_npa'] if !opts[:'sort_npa'].nil?
      query_params[:'sort[nxx]'] = opts[:'sort_nxx'] if !opts[:'sort_nxx'].nil?
      query_params[:'sort[is_toll_free]'] = opts[:'sort_is_toll_free'] if !opts[:'sort_is_toll_free'].nil?
      query_params[:'sort[city]'] = opts[:'sort_city'] if !opts[:'sort_city'].nil?
      query_params[:'sort[province_postal_code]'] = opts[:'sort_province_postal_code'] if !opts[:'sort_province_postal_code'].nil?
      query_params[:'sort[country_postal_code]'] = opts[:'sort_country_postal_code'] if !opts[:'sort_country_postal_code'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'offset'] = opts[:'offset'] if !opts[:'offset'].nil?
      query_params[:'fields'] = opts[:'fields'] if !opts[:'fields'].nil?
      query_params[:'group_by'] = @api_client.build_collection_param(opts[:'group_by'], :csv) if !opts[:'group_by'].nil?

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['apiKey']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ListPhoneNumbersRegionsFull')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: NumberregionsApi#list_available_phone_number_regions\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
