{
  "swagger": "2.0",
  "info": {
    "description": "This is a Phone.com api Swagger definition",
    "version": "1.0.0",
    "title": "Phone.com API",
    "contact": {
      "email": "apisupport@phone.com"
    }
  },
  "host": "api.phone.com",
  "basePath": "/v4",
  "tags": [
    {
      "name": "calls",
      "description": "This API places a call to the caller phone number (or caller extension ID). If that number (or extension) answers within the timeout period, then the callee DID (or extension) will be connected to the call.      SUPPORTED SERVICES      Create Calls      We currently support three calling scenarios:    Place a call from a DID to my extension, required parameters are:    a. Caller Phone Number      b. Callee Extension ID      Place a call from a DID to another DID, required parameters are:    a. Caller Phone Number      b. Callee Phone Number      c. Caller Extension ID      Place a call from my Extension to a DID, required parameters are:    a. Caller Extension ID      b. Callee Phone Number      The Calls API supports caller ID, an user may specify the caller caller ID or the callee caller ID. The following rules are applied when a caller ID is provided.      The caller caller ID must be the same as the callee phone number, or a phone number owned by the user account      The callee caller ID must be the same as the caller phone number, or a phone number owned by the user account      User may also set the caller caller ID or callee caller ID to 'private' by setting flag caller_private and callee_private to true respectively.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-calls"
      }
    },
    {
      "name": "accounts",
      "description": "This page gives an overview of how to interact with your accounts.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/accounts"
      }
    },
    {
      "name": "applications",
      "description": "Applications are references to your own software integrations that are registered to interact with your Phone.com account.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-applications"
      }
    },
    {
      "name": "call-logs",
      "description": "The Call Logs API returns a list of call detail records for the account. The result includes the id, start time, creation time, caller ID, called number, direction of call, and duration in seconds. If applicable, the result may also include final action, final action duration, listen URL, and/or transcription. Since the call logs usually contains many calls, API users may use filters such as start_time, created_at and direction to limit the result set to calls interested. Users may also use the sorting parameters such as start_time and created_at to list result in ascending or descending order.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-call-logs"
      }
    },
    {
      "name": "devices",
      "description": "Your Phone.com account may have one or more physical handsets or other VoIP devices associated with it.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-devices"
      }
    },
    {
      "name": "express-service-codes",
      "description": "An Express Service Code is required when a customer calls Phone.com for support. With the following services, customer may retrieve the Express Service Code associated with his/her account.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-express-srv-codes"
      }
    },
    {
      "name": "extensions",
      "description": "Your Phone.com account will have one or more extensions.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-extensions"
      }
    },
    {
      "name": "caller-ids",
      "description": "Show the Caller ID options a given extension can use",
      "externalDocs": {
        "description": "Find out more",
        "url": "Outgoing calls can have a Caller ID setting. This page gives an overview."
      }
    },
    {
      "name": "contacts",
      "description": "Each extension at Phone.com can have its own address book with any number of contacts. This page gives an overview.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-extension-contacts"
      }
    },
    {
      "name": "groups",
      "description": "The entries in an extension's address book can be divided into any number of groups. This page gives an overview.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-extension-contact-groups"
      }
    },
    {
      "name": "media",
      "description": "Hold Music can be used in routes, queues, and anywhere the caller might be placed on hold. Your account has access to a set of standard hold music options, and optionally another set of premium hold music options. You can also upload your own hold music, subject to copyright limitations.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/list-account-media"
      }
    },
    {
      "name": "menus",
      "description": "We've all been on the consuming side of a phone menu before. You call a company and hear, \"Press '1' for Sales. Press '2' for Support. Press '0' for the operator.\" With Phone.com you can create your own menus!",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-menus"
      }
    },
    {
      "name": "phone-numbers",
      "description": "Your Phone.com account has one or more phone numbers registered to it.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-phone-numbers"
      }
    },
    {
      "name": "queues",
      "description": "Queues are used when you want to direct calls to a pool of phone numbers and/or extensions. A common utilization of queues is for Customer Service call centers. When a queue is configured on your phone number, Phone.com will route incoming calls to members of the queue. If a queue member is already on another call, our service rings the next phone number or extension in the queue. While your callers are waiting to be connected, you can choose to play Hold Music.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-queues"
      }
    },
    {
      "name": "routes",
      "description": "Routes, a.k.a. \"Call Handling Rules\" or \"Presets\", are used to tell Phone.com how to handle incoming phone calls. They can be used to connect your Phone.com phone number to an extension, a menu, a calling queue, or many other things. The fundamental element of a route is an action. We support many different actions such as forward, menu, and voicemail. See below for the full details. In general, actions are processed one at a time in the order you specify, until the call is answered or disconnected. Answering or disconnecting stops any additional actions from being performed. Note that several actions such as voicemail, menu, and fax completely take over processing the call and do not result in processing any subsequent actions. Actions are grouped into rule sets. Rule sets can be filtered based on the time of day or the caller's phone number. When processing an incoming call, Phone.com's routing engine will evaluate each rule set in the order that was specified when the route was created or updated. The first matching rule set will be used, and all other rule sets will be ignored. Each route must have at least one unfiltered rule set. Note that if your route contains multiple unfiltered rule sets, only the first one will be used.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-routes"
      }
    },
    {
      "name": "schedules",
      "description": "Schedules are used at various places in your Phone.com account. A schedule can specify a recurring weekly pattern such as \"Monday through Friday\" or a single time period such as \"Thanksgiving Weekend 2015\".",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-schedules"
      }
    },
    {
      "name": "sms",
      "description": "The Phone.com /sms service lets you send and show history of SMS messages. Phone.comâ€™s standard phone service lets you send and receive SMS messages using your Phone.com numbers. The Phone.com API extends this functionality, letting you send SMS messages from your application (through your phone number and our API server) to your users. You can also use the API to retrieve the history of sms sent from / delivered to your account.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-sms"
      }
    },
    {
      "name": "subaccounts",
      "description": "This page gives an overview of how to interact with your subaccounts. Subaccounts are the same as master accounts in terms of the functionality Phone.com supports. The main difference is that subaccounts are grouped with their master account for invoicing purposes.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/subaccounts"
      }
    },
    {
      "name": "trunks",
      "description": "SIP Trunks are used to connect your Phone.com account to your PBX.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/account-trunks"
      }
    },
    {
      "name": "available-numbers",
      "description": "This service lists phone numbers that are available for purchase through Phone.com.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/available-phone-numbers"
      }
    },
    {
      "name": "number-regions",
      "description": "This service shows the quantities of phone numbers available for purchase, using region-based grouping.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://apidocs.phone.com/docs/available-phone-number-regions"
      }
    }
  ],
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "schemes": [
    "https"
  ],
  "paths": {
    "/ping": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "The default API command",
        "description": "The default API command",
        "operationId": "ping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PingResponse"
            }
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get a list of accounts visible to the authenticated user or client",
        "description": "This service lists the accounts accessible to the authenticated client. In most cases, there will only be one such account. See Accounts for more info on the properties.",
        "operationId": "list-accounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListAccounts"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/accounts/{account_id}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Retrieve details of an individual account",
        "description": "This service shows the details of an individual account. See Accounts for more info on the properties.",
        "operationId": "get-account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/accounts/{account_id}/applications": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "applications"
        ],
        "summary": "Get a list of applications you have defined",
        "description": "Get a list of an account available applications",
        "operationId": "list-account-applications",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/filterNameParam"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/sortNameParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListApplications"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      }
    },
    "/accounts/{account_id}/applications/{application_id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "applications"
        ],
        "summary": "Show details of an individual application",
        "description": "",
        "operationId": "get-account-application",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "name": "application_id",
            "in": "path",
            "description": "Application ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplicationFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        }
      }
    },
    "/accounts/{account_id}/calls": {
      "post": {
        "security": [
          {
            "apiKey": [

            ]
          }
        ],
        "tags": [
          "calls"
        ],
        "summary": "Make a phone call",
        "description": "",
        "operationId": "create-account-calls",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Call data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateCallParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CallFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      }
    },
    "/accounts/{account_id}/call-logs": {
      "get": {
        "tags": [
          "call-logs"
        ],
        "summary": "Get a list of call details associated with your account",
        "description": "See Call Logs for more detail.",
        "operationId": "list-account-call-logs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/filterStartTimeParam"
          },
          {
            "$ref": "#/parameters/filterCreatedAtParam"
          },
          {
            "$ref": "#/parameters/filterDirectionCallLogs"
          },
          {
            "$ref": "#/parameters/filterCalledNumber"
          },
          {
            "$ref": "#/parameters/filterType"
          },
          {
            "$ref": "#/parameters/filterExtension"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/sortStartTime"
          },
          {
            "$ref": "#/parameters/sortCreatedAtCallLogs"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListCallLogs"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/accounts/{account_id}/devices": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "devices"
        ],
        "summary": "Get a list of VoIP devices associated with your account",
        "description": "",
        "operationId": "list-account-devices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/filterNameParam"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/sortNameParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListDevices"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      },
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "devices"
        ],
        "summary": "Register a generic VoIP device",
        "description": "",
        "operationId": "create-account-device",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Device data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateDeviceParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/DeviceFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      }
    },
    "/accounts/{account_id}/devices/{device_id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "devices"
        ],
        "summary": "Show details of an individual VoIP device",
        "description": "",
        "operationId": "get-account-device",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/deviceIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "devices"
        ],
        "summary": "Update the settings for an individual VoIP device",
        "description": "",
        "operationId": "replace-account-device",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/deviceIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Device data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateDeviceParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeviceFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      }
    },
    "/accounts/{account_id}/express-service-codes": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "express-service-codes"
        ],
        "summary": "Get the Express Service Code associated with your account in list format",
        "description": "See Express Service Codes for more detail.",
        "operationId": "list-account-express-srv-codes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListExpressServiceCodes"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      }
    },
    "/accounts/{account_id}/express-service-codes/{code_id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "express-service-codes"
        ],
        "summary": "Show details of an account Express Service Code",
        "description": "This service shows the details of an Account Express Service Code.",
        "operationId": "get-account-express-srv-code",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "name": "code_id",
            "in": "path",
            "description": "Device ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExpressServiceCodeFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        }
      }
    },
    "/accounts/{account_id}/extensions": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "extensions"
        ],
        "summary": "Get a list of extensions visible to the authenticated user or client",
        "description": "This service lists the visible extensions on a given account.",
        "operationId": "list-account-extensions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/filterExtension"
          },
          {
            "$ref": "#/parameters/filterNameParam"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/sortExtension"
          },
          {
            "$ref": "#/parameters/sortNameParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListExtensions"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      },
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "extensions"
        ],
        "summary": "Create an individual extension",
        "description": "This service shows how to create a virtual extension.",
        "operationId": "create-account-extension",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Account Extensions Data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateExtensionParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ExtensionFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      }
    },
    "/accounts/{account_id}/extensions/{extension_id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "extensions"
        ],
        "summary": "Show details of an individual extension",
        "description": "This service shows the details of an individual Extension.",
        "operationId": "get-account-extension",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/extensionIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExtensionFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "extensions"
        ],
        "summary": "Replace an individual extension",
        "description": "This service shows how to update an individual extension.",
        "operationId": "replace-account-extension",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/extensionIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Account Extensions Data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReplaceExtensionParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExtensionFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      }
    },
    "/accounts/{account_id}/extensions/{extension_id}/caller-ids": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "caller-ids"
        ],
        "summary": "Show the Caller ID options a given extension can use",
        "description": "Get Caller ID",
        "operationId": "get-caller-ids",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/extensionIdParam"
          },
          {
            "$ref": "#/parameters/filterNumber"
          },
          {
            "$ref": "#/parameters/filterNameParam"
          },
          {
            "$ref": "#/parameters/sortNumber"
          },
          {
            "$ref": "#/parameters/sortNameParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListCallerIds"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      }
    },
    "/accounts/{account_id}/extensions/{extension_id}/contacts": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "contacts"
        ],
        "summary": "Show a list of address book contacts",
        "description": "See Account Contacts for more info on the fields in each item.",
        "operationId": "list-account-extension-contacts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/extensionIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/filterGroupId"
          },
          {
            "$ref": "#/parameters/filterUpdatedAt"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/sortUpdatedAt"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListContacts"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      },
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "contacts"
        ],
        "summary": "Add a new address book contact for an extension",
        "description": "For more on the input fields, see Account Contacts.",
        "operationId": "create-account-extension-contact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/extensionIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Contact data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateContactParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ContactFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      }
    },
    "/accounts/{account_id}/extensions/{extension_id}/contacts/{contact_id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "contacts"
        ],
        "summary": "Retrieve the details of an address book contact",
        "description": "For more info on the fields shown, see Account Contacts.",
        "operationId": "get-account-extension-contact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/extensionIdParam"
          },
          {
            "$ref": "#/parameters/contactIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContactFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "contacts"
        ],
        "summary": "",
        "description": "For more on the input fields, see Account Contacts.",
        "operationId": "replace-account-extension-contact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/extensionIdParam"
          },
          {
            "$ref": "#/parameters/contactIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Contact data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateContactParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContactFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      },
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "contacts"
        ],
        "summary": "",
        "description": "",
        "operationId": "delete-account-extension-contact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/extensionIdParam"
          },
          {
            "$ref": "#/parameters/contactIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteContact"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      }
    },
    "/accounts/{account_id}/extensions/{extension_id}/contact-groups": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "groups"
        ],
        "summary": "Show a list of contact groups belonging to an extension",
        "description": "See Account Contact Groups for details on the properties.",
        "operationId": "list-account-extension-contact-groups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/extensionIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/filterNameParam"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/sortNameParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListGroups"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      },
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "groups"
        ],
        "summary": "",
        "description": "See Account Contact Groups for more info on the properties.",
        "operationId": "create-account-extension-contact-group",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/extensionIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Group name",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateGroupParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GroupFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      }
    },
    "/accounts/{account_id}/extensions/{extension_id}/contact-groups/{group_id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "groups"
        ],
        "summary": "",
        "description": "See Account Contact Groups for more info on the properties.",
        "operationId": "get-account-extension-contact-group",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/extensionIdParam"
          },
          {
            "$ref": "#/parameters/groupIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "groups"
        ],
        "summary": "",
        "description": "See Account Contact Groups for more info on the properties.",
        "operationId": "replace-account-extension-contact-group",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/extensionIdParam"
          },
          {
            "$ref": "#/parameters/groupIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Group name",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateGroupParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GroupFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      },
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "groups"
        ],
        "summary": "Delete an addressbook group",
        "description": "",
        "operationId": "delete-account-extension-contact-group",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/extensionIdParam"
          },
          {
            "$ref": "#/parameters/groupIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteGroup"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      }
    },
    "/accounts/{account_id}/media": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "media"
        ],
        "summary": "Get a list of media recordings for an account",
        "description": "See Account Menus for more info on the properties.",
        "operationId": "list-account-media",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/filterNameParam"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/sortNameParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListMedia"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      }
    },
    "/accounts/{account_id}/media/{recording_id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "media"
        ],
        "summary": "Show details of an individual media recording (Greeting or Hold Music)",
        "description": "Get individual media recording",
        "operationId": "get-account-media",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "name": "recording_id",
            "in": "path",
            "description": "Recording ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MediaFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        }
      }
    },
    "/accounts/{account_id}/menus": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "menus"
        ],
        "summary": "Get a list of menus for an account",
        "description": "See Account Menus for more info on the properties.",
        "operationId": "list-account-menus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/filterNameParam"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/sortNameParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListMenus"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      },
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "menus"
        ],
        "summary": "Create an individual menu",
        "description": "This service creates an individual menu. See Account Menus for more info on the properties.",
        "operationId": "create-account-menu",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Menu data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateMenuParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/MenuFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      }
    },
    "/accounts/{account_id}/menus/{menu_id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "menus"
        ],
        "summary": "Show details of an individual menu",
        "description": "This service shows the details of an individual Menu.",
        "operationId": "get-account-menu",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/menuIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MenuFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "menus"
        ],
        "summary": "Replace an individual menu",
        "description": "This service replaces the details of an individual Menu.",
        "operationId": "replace-account-menu",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/menuIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Menu data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReplaceMenuParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MenuFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      },
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "menus"
        ],
        "summary": "Delete an individual menu",
        "description": "This service shows the details of an individual menu.",
        "operationId": "delete-account-menu",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/menuIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteMenu"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          },
          "409": {
            "$ref": "#/responses/response409"
          }
        }
      }
    },
    "/accounts/{account_id}/phone-numbers": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "phone-numbers"
        ],
        "summary": "Get a list of phone numbers registered to an account",
        "description": "See Intro to Account Phone Numbers for more info on the properties.",
        "operationId": "list-account-phone-numbers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/filterNameParam"
          },
          {
            "$ref": "#/parameters/filterPhoneNumber"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/sortNameParam"
          },
          {
            "$ref": "#/parameters/sortPhoneNumber"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListPhoneNumbers"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      },
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "phone-numbers"
        ],
        "summary": "Add a phone number to an account",
        "description": "See Intro to Account Phone Numbers for more info on the properties to use.",
        "operationId": "create-account-phone-number",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Phone Number data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreatePhoneNumberParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/PhoneNumberFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      }
    },
    "/accounts/{account_id}/phone-numbers/{number_id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "phone-numbers"
        ],
        "summary": "Show details of an individual phone number",
        "description": "See Intro to Account Phone Numbers for more info on the properties.",
        "operationId": "get-account-phone-number",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/numberIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PhoneNumberFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "phone-numbers"
        ],
        "summary": "Update the settings for an existing phone number on your account",
        "description": "See Intro to Account Phone Numbers for more info on the properties.",
        "operationId": "replace-account-phone-number",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/numberIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Phone Number data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ReplacePhoneNumberParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PhoneNumberFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      }
    },
    "/accounts/{account_id}/queues": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "queues"
        ],
        "summary": "Get a list of queues for an account",
        "description": "The List Queues service lists all the queues belong to the account. See Account Queues for more info on the properties.",
        "operationId": "list-account-queues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/filterNameParam"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/sortNameParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListQueues"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      },
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "queues"
        ],
        "summary": "Create a queue",
        "description": "For more on the input fields, see Account Queues.",
        "operationId": "create-account-queue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Queue data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateQueueParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/QueueFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      }
    },
    "/accounts/{account_id}/queues/{queue_id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "queues"
        ],
        "summary": "Show details of an individual queue",
        "description": "This service shows the details of an individual queue. For more on the input fields, see Account Queues.",
        "operationId": "get-account-queue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/queueIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QueueFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "queues"
        ],
        "summary": "Replace a queue",
        "description": "The Replace Queue service replaces the parameters of a queue. For more on the input fields, see Account Queues.",
        "operationId": "replace-account-queue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/queueIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Queue data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateQueueParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QueueFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      },
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "queues"
        ],
        "summary": "Delete a queue",
        "description": "This service a queue from the account. For more information on queue properties, see Account Queues.",
        "operationId": "delete-account-queue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/queueIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteQueue"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          },
          "409": {
            "$ref": "#/responses/response409"
          }
        }
      }
    },
    "/accounts/{account_id}/routes": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "routes"
        ],
        "summary": "Get a list of routes for an account",
        "description": "See Intro to Routes for more info on the properties.",
        "operationId": "list-account-routes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/filterNameParam"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/sortNameParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListRoutes"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      },
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "routes"
        ],
        "summary": "Add a new address book contact for an extension",
        "description": "For more on the input fields, see Intro to Routes.",
        "operationId": "create-route",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Route data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateRouteParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/RouteFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      }
    },
    "/accounts/{account_id}/routes/{route_id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "routes"
        ],
        "summary": "Show details of an individual route",
        "description": "This service shows the details of an individual route.",
        "operationId": "get-account-route",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/routeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RouteFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "routes"
        ],
        "summary": "",
        "description": "For more on the input fields, see Intro to Routes.",
        "operationId": "replace-account-route",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/routeIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Route data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CreateRouteParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RouteFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      },
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "routes"
        ],
        "summary": "",
        "description": "",
        "operationId": "delete-account-route",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/routeIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteRoute"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          },
          "409": {
            "$ref": "#/responses/response409"
          }
        }
      }
    },
    "/accounts/{account_id}/schedules": {
      "get": {
        "tags": [
          "schedules"
        ],
        "summary": "Get a list of schedules for an account",
        "description": "See Intro to Schedules for more info on the properties.",
        "operationId": "list-account-schedules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/filterNameParam"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/sortNameParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListSchedules"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/accounts/{account_id}/schedules/{schedule_id}": {
      "get": {
        "tags": [
          "schedules"
        ],
        "summary": "Show details of an individual schedule",
        "description": "This service shows the details of an individual schedule.",
        "operationId": "get-account-schedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "name": "schedule_id",
            "in": "path",
            "description": "Schedule ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ScheduleFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/accounts/{account_id}/sms": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "sms"
        ],
        "summary": "Get a list of SMS messages for an account",
        "description": "See Intro to SMS for more info on the properties.",
        "operationId": "list-account-sms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/filterDirectionSms"
          },
          {
            "$ref": "#/parameters/filterFrom"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/sortCreatedAtSms"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListSms"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      },
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "sms"
        ],
        "summary": "Send a SMS to one or a group of recipients",
        "description": "For more on the input fields, see Intro to SMS.",
        "operationId": "create-account-sms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "SMS data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSmsParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SmsFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "422": {
            "$ref": "#/responses/response422"
          },
          "429": {
            "$ref": "#/responses/response429"
          }
        }
      }
    },
    "/accounts/{account_id}/sms/{sms_id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "sms"
        ],
        "summary": "Show details of an individual SMS",
        "description": "This service shows the details of an individual sms. See Intro to SMS for more info on the properties.",
        "operationId": "get-account-sms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "in": "path",
            "name": "sms_id",
            "description": "SMS ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SmsFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        }
      }
    },
    "/accounts/{account_id}/subaccounts": {
      "get": {
        "tags": [
          "subaccounts"
        ],
        "summary": "Get a list of subaccounts for the authenticated user or client",
        "description": "This service lists the Subaccount of the authenticated client. In most cases, there will not be any.",
        "operationId": "list-account-subaccounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListAccounts"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "subaccounts"
        ],
        "summary": "Add a subaccount for the authenticated user or client",
        "description": "This service shows the details of an individual Subaccount.",
        "operationId": "create-account-subaccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "SMS data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSubaccountParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AccountFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      }
    },
    "/accounts/{account_id}/trunks": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "trunks"
        ],
        "summary": "Get a list of trunks for an account",
        "description": "See Account Trunks for more info on the properties.",
        "operationId": "list-account-trunks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/filterIdParam"
          },
          {
            "$ref": "#/parameters/filterNameParam"
          },
          {
            "$ref": "#/parameters/sortIdParam"
          },
          {
            "$ref": "#/parameters/sortNameParam"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListTrunks"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          }
        }
      },
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "trunks"
        ],
        "summary": "Add a trunk record with SIP information",
        "description": "For more on the input fields, see Account Trunks.",
        "operationId": "create-account-trunk",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Trunk data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTrunkParams"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TrunkFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      }
    },
    "/accounts/{account_id}/trunks/{trunk_id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "trunks"
        ],
        "summary": "Show details of an individual trunk",
        "description": "This service shows the details of an individual Trunk.",
        "operationId": "get-account-trunk",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/trunkIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrunkFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "trunks"
        ],
        "summary": "Replace parameters in a trunk",
        "description": "For more on the input fields, see Account Trunks.",
        "operationId": "replace-account-trunk",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/trunkIdParam"
          },
          {
            "name": "data",
            "in": "body",
            "description": "Trunk data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTrunkParams"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TrunkFull"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          },
          "422": {
            "$ref": "#/responses/response422"
          }
        }
      },
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "trunks"
        ],
        "summary": "Delete a trunk from account",
        "description": "This service deletes a trunk from the account. For more on the properties of trunks, see Account Trunks.",
        "operationId": "delete-account-trunk",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/accountIdParam"
          },
          {
            "$ref": "#/parameters/trunkIdParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteTrunk"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "403": {
            "$ref": "#/responses/response403"
          },
          "404": {
            "$ref": "#/responses/response404"
          },
          "409": {
            "$ref": "#/responses/response409"
          }
        }
      }
    },
    "/phone-numbers/available": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "available-numbers"
        ],
        "summary": "",
        "description": "",
        "operationId": "list-available-phone-numbers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/filterPhoneNumber"
          },
          {
            "$ref": "#/parameters/filterCountryCode"
          },
          {
            "$ref": "#/parameters/filterNpa"
          },
          {
            "$ref": "#/parameters/filterNxx"
          },
          {
            "$ref": "#/parameters/filterXxxx"
          },
          {
            "$ref": "#/parameters/filterCity"
          },
          {
            "$ref": "#/parameters/filterProvince"
          },
          {
            "$ref": "#/parameters/filterCountry"
          },
          {
            "$ref": "#/parameters/filterPrice"
          },
          {
            "$ref": "#/parameters/filterCategory"
          },
          {
            "$ref": "#/parameters/sortInternal"
          },
          {
            "$ref": "#/parameters/sortPrice"
          },
          {
            "$ref": "#/parameters/sortPhoneNumber"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListAvailableNumbers"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "429": {
            "$ref": "#/responses/response403"
          }
        }
      }
    },
    "/phone-numbers/available/regions": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "number-regions"
        ],
        "summary": "",
        "description": "This service lists the quantities of available phone numbers by region.",
        "operationId": "list-available-phone-number-regions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/filterCountryCode"
          },
          {
            "$ref": "#/parameters/filterNpa"
          },
          {
            "$ref": "#/parameters/filterNxx"
          },
          {
            "$ref": "#/parameters/filterIsTollFree"
          },
          {
            "$ref": "#/parameters/filterCity"
          },
          {
            "$ref": "#/parameters/filterProvincePostalCode"
          },
          {
            "$ref": "#/parameters/filterCountryPostalCode"
          },
          {
            "$ref": "#/parameters/sortCountryCode"
          },
          {
            "$ref": "#/parameters/sortNpa"
          },
          {
            "$ref": "#/parameters/sortNxx"
          },
          {
            "$ref": "#/parameters/sortIsTollFree"
          },
          {
            "$ref": "#/parameters/sortCity"
          },
          {
            "$ref": "#/parameters/sortProvincePostalCode"
          },
          {
            "$ref": "#/parameters/sortCountryPostalCode"
          },
          {
            "$ref": "#/parameters/limitParam"
          },
          {
            "$ref": "#/parameters/offsetParam"
          },
          {
            "$ref": "#/parameters/fieldsParam"
          },
          {
            "name": "group_by",
            "in": "query",
            "description": "Fields to group by (supports the same set of fields as the filters and sorting)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListPhoneNumbersRegions"
            }
          },
          "401": {
            "$ref": "#/responses/response401"
          },
          "429": {
            "$ref": "#/responses/response403"
          }
        }
      }
    }
  },
  "parameters": {
    "filterIdParam": {
      "name": "filters[id]",
      "in": "query",
      "description": "ID filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterNameParam": {
      "name": "filters[name]",
      "in": "query",
      "description": "Name filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterStartTimeParam": {
      "name": "filters[start_time]",
      "in": "query",
      "description": "Call start time filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterCreatedAtParam": {
      "name": "filters[created_at]",
      "in": "query",
      "description": "Call log creation time filter",
      "required": false,
      "type": "string",
      "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
    },
    "filterDirectionCallLogs": {
      "name": "filters[direction]",
      "in": "query",
      "description": "Call direction filter: in or out",
      "required": false,
      "type": "string",
      "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
    },
    "filterDirectionSms": {
      "name": "filters[direction]",
      "in": "query",
      "description": "Direction filter",
      "required": false,
      "type": "string",
      "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
    },
    "filterCalledNumber": {
      "name": "filters[called_number]",
      "in": "query",
      "description": "Called number",
      "type": "string",
      "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
    },
    "filterType": {
      "name": "filters[type]",
      "in": "query",
      "description": "Call type, such as 'call', 'fax', 'audiogram'",
      "required": false,
      "type": "string",
      "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
    },
    "filterExtension": {
      "name": "filters[extension]",
      "in": "query",
      "description": "Extension filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterNumber": {
      "name": "filters[number]",
      "in": "query",
      "description": "Number filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterGroupId": {
      "name": "filters[group_id]",
      "in": "query",
      "description": "Group filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterUpdatedAt": {
      "name": "filters[updated_at]",
      "in": "query",
      "description": "Updated At filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterPhoneNumber": {
      "name": "filters[phone_number]",
      "in": "query",
      "description": "Phone number filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterFrom": {
      "name": "filters[from]",
      "in": "query",
      "description": "Caller ID filter",
      "required": false,
      "type": "string",
      "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
    },
    "filterCountryCode": {
      "name": "filters[country_code]",
      "in": "query",
      "description": "Country Code filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterNpa": {
      "name": "filters[npa]",
      "in": "query",
      "description": "Area Code filter (North America only)",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterNxx": {
      "name": "filters[nxx]",
      "in": "query",
      "description": "2nd set of 3 digits filter (North America only)",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterXxxx": {
      "name": "filters[xxxx]",
      "in": "query",
      "description": "NANP XXXX filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterCity": {
      "name": "filters[city]",
      "in": "query",
      "description": "City filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterProvince": {
      "name": "filters[province]",
      "in": "query",
      "description": "State or Province (postal code) filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterCountry": {
      "name": "filters[country]",
      "in": "query",
      "description": "Country (postal code) filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterPrice": {
      "name": "filters[price]",
      "in": "query",
      "description": "Price filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterCategory": {
      "name": "filters[category]",
      "in": "query",
      "description": "Category filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterIsTollFree": {
      "name": "filters[is_toll_free]",
      "in": "query",
      "description": "Toll-free status filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterProvincePostalCode": {
      "name": "filters[province_postal_code]",
      "in": "query",
      "description": "State or Province filter",
      "required": false,
      "type": "array",
      "collectionFormat": "multi",
      "items": {
        "type": "string",
        "pattern": "^eq:.*|^ne:.*|^lt:.*|^gt:.*|^lte:.*|^gte:.*|^starts-with:.*|^ends-with:.*|^contains:.*|^not-starts-with:.*|^not-ends-with:.*|^not-contains:.*|^between:.*,.*|^not-between:.*,.*"
      }
    },
    "filterCountryPostalCode": {
      "name": "filters[country_postal_code]",
      "in": "query",
      "description": "Country filter",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "sortIdParam": {
      "name": "sort[id]",
      "in": "query",
      "description": "ID sorting",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortNameParam": {
      "name": "sort[name]",
      "in": "query",
      "description": "Name sorting",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortStartTime": {
      "name": "sort[start_time]",
      "in": "query",
      "description": "Sorting by call start time: asc or desc",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortCreatedAtCallLogs": {
      "name": "sort[created_at]",
      "in": "query",
      "description": "Sorting by call log creation time: asc or desc",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortCreatedAtSms": {
      "name": "sort[created_at]",
      "in": "query",
      "description": "Sort by created time of message",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortExtension": {
      "name": "sort[extension]",
      "in": "query",
      "description": "Extension sorting",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortNumber": {
      "name": "sort[number]",
      "in": "query",
      "description": "Number sorting",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortUpdatedAt": {
      "name": "sort[updated_at]",
      "in": "query",
      "description": "Updated At sorting",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortPhoneNumber": {
      "name": "sort[phone_number]",
      "in": "query",
      "description": "Phone number sorting",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortInternal": {
      "name": "sort[internal]",
      "in": "query",
      "description": "Internal (quasi-random) sorting",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortPrice": {
      "name": "sort[price]",
      "in": "query",
      "description": "Price sorting",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortCountryCode": {
      "name": "sort[country_code]",
      "in": "query",
      "description": "International calling code sorting",
      "required": false,
      "type": "string"
    },
    "sortNpa": {
      "name": "sort[npa]",
      "in": "query",
      "description": "Area Code sorting (North America only)",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortNxx": {
      "name": "sort[nxx]",
      "in": "query",
      "description": "2nd set of 3 digits sorting (North America)",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortIsTollFree": {
      "name": "sort[is_toll_free]",
      "in": "query",
      "description": "Toll Free status sorting",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortCity": {
      "name": "sort[city]",
      "in": "query",
      "description": "City sorting",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortProvincePostalCode": {
      "name": "sort[province_postal_code]",
      "in": "query",
      "description": "State or Province sorting",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "sortCountryPostalCode": {
      "name": "sort[country_postal_code]",
      "in": "query",
      "description": "Country sorting",
      "required": false,
      "type": "string",
      "pattern": "asc|desc"
    },
    "limitParam": {
      "name": "limit",
      "in": "query",
      "description": "Max results",
      "required": false,
      "type": "integer"
    },
    "offsetParam": {
      "name": "offset",
      "in": "query",
      "description": "Results to skip",
      "required": false,
      "type": "integer"
    },
    "fieldsParam": {
      "name": "fields",
      "in": "query",
      "description": "Field set",
      "required": false,
      "type": "string"
    },
    "accountIdParam": {
      "name": "account_id",
      "in": "path",
      "description": "Account ID",
      "required": true,
      "type": "integer"
    },
    "extensionIdParam": {
      "name": "extension_id",
      "in": "path",
      "description": "Extension ID",
      "required": true,
      "type": "integer"
    },
    "deviceIdParam": {
      "name": "device_id",
      "in": "path",
      "description": "Device ID",
      "required": true,
      "type": "integer"
    },
    "contactIdParam": {
      "name": "contact_id",
      "in": "path",
      "description": "Contact ID",
      "required": true,
      "type": "integer"
    },
    "groupIdParam": {
      "name": "group_id",
      "in": "path",
      "description": "Group ID",
      "required": true,
      "type": "integer"
    },
    "menuIdParam": {
      "name": "menu_id",
      "in": "path",
      "description": "Menu ID",
      "required": true,
      "type": "integer"
    },
    "numberIdParam": {
      "name": "number_id",
      "in": "path",
      "description": "Number ID",
      "required": true,
      "type": "integer"
    },
    "queueIdParam": {
      "name": "queue_id",
      "in": "path",
      "description": "Queue ID",
      "required": true,
      "type": "integer"
    },
    "routeIdParam": {
      "name": "route_id",
      "in": "path",
      "description": "Route ID",
      "required": true,
      "type": "integer"
    },
    "trunkIdParam": {
      "name": "trunk_id",
      "in": "path",
      "description": "Trunk ID",
      "required": true,
      "type": "integer"
    }
  },
  "responses": {
    "response401": {
      "description": "Unauthorized access"
    },
    "response403": {
      "description": "Forbidden"
    },
    "response404": {
      "description": "Not Found"
    },
    "response409": {
      "description": "Conflict"
    },
    "response422": {
      "description": "Invalid Data"
    },
    "response429": {
      "description": "Rate Limit Reached"
    }
  },
  "definitions": {
    "CreateCallParams": {
      "type": "object",
      "properties": {
        "caller_phone_number": {
          "type": "string",
          "description": "Caller phone number in E.164 format"
        },
        "caller_extension": {
          "type": "integer",
          "description": "Caller Extension ID"
        },
        "caller_caller_id": {
          "type": "string",
          "description": "Caller caller ID in E.164 format"
        },
        "caller_private": {
          "type": "boolean",
          "description": "Flag to set caller ID to private"
        },
        "callee_phone_number": {
          "type": "string",
          "description": "Callee phone number in E.164 format"
        },
        "callee_extension": {
          "type": "integer",
          "description": "Callee Extension ID"
        },
        "callee_caller_id": {
          "type": "string",
          "description": "Callee caller ID in E.164 format"
        },
        "callee_private": {
          "type": "boolean",
          "description": "Flag to set callee ID to private"
        }
      }
    },
    "PingResponse": {
      "description": "The ping response object.",
      "type": "object",
      "properties": {
        "datetime": {
          "type": "string"
        },
        "remote_ip": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer"
        },
        "user_agent": {
          "type": "string"
        }
      }
    },
    "CreateDeviceParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Device Name"
        },
        "lines": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "List of line objects"
        }
      }
    },
    "CreateExtensionParams": {
      "type": "object",
      "properties": {
        "caller_id": {
          "type": "string",
          "description": "Caller ID"
        },
        "usage_type": {
          "type": "string",
          "description": "Extension type"
        },
        "allows_call_waiting": {
          "type": "boolean",
          "description": "Allows call waiting"
        },
        "extension": {
          "type": "integer",
          "description": "Extension number (auto-generated if empty)"
        },
        "include_in_directory": {
          "type": "boolean",
          "description": "Include in dial-by-name directory"
        },
        "name": {
          "type": "string",
          "description": "Name (auto-generated if empty)"
        },
        "full_name": {
          "type": "string",
          "description": "Contact name"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone"
        },
        "name_greeting": {
          "type": "object",
          "description": "Recording lookup object"
        },
        "voicemail[greeting][alternate]": {
          "type": "object",
          "description": "Recording lookup object"
        },
        "local_area_code": {
          "type": "integer",
          "description": "Local area code"
        },
        "voicemail[greeting][enable_leave_message_prompt]": {
          "type": "boolean",
          "description": "Enable the \"leave a message\" prompt for voicemail"
        },
        "voicemail[enabled]": {
          "type": "boolean",
          "description": "Voicemail enabled"
        },
        "enable_outbound_calls": {
          "type": "boolean",
          "description": "Enable outgoing calls"
        },
        "enable_call_waiting": {
          "type": "boolean",
          "description": "Enable Call Waiting"
        },
        "voicemail[password]": {
          "type": "integer",
          "description": "Voicemail password"
        },
        "voicemail[greeting][type]": {
          "type": "string",
          "description": "Voicemail greeting type"
        },
        "voicemail[greeting][standard]": {
          "type": "object",
          "description": "Recording lookup object"
        },
        "voicemail[transcription]": {
          "type": "string",
          "description": "Voicemail transcription type"
        },
        "voicemail[notifications][emails]": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Email notifications for voicemails. Can be a single email or an array of emails"
        },
        "voicemail[notifications][sms]": {
          "type": "string",
          "description": "SMS notifications for voicemails"
        },
        "call_notifications[emails]": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Email notifications for calls. Can be a single email or an array of emails"
        },
        "call_notifications[sms]": {
          "type": "string",
          "description": "SMS notifications for calls"
        }
      }
    },
    "ReplaceExtensionParams": {
      "type": "object",
      "properties": {
        "voicemail[greeting][alternate]": {
          "type": "object",
          "description": "Recording lookup object"
        },
        "name_greeting": {
          "type": "object",
          "description": "Recording lookup object"
        },
        "name": {
          "type": "string",
          "description": "Name (required)"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone"
        },
        "include_in_directory": {
          "type": "boolean",
          "description": "Include in dial-by-name directory"
        },
        "extension": {
          "type": "integer",
          "description": "Extension number (required)"
        },
        "enable_outbound_calls": {
          "type": "boolean",
          "description": "Enable outgoing calls"
        },
        "usage_type": {
          "type": "string",
          "description": "Extension type"
        },
        "voicemail[password]": {
          "type": "integer",
          "description": "Voicemail password"
        },
        "full_name": {
          "type": "string",
          "description": "Contact name"
        },
        "enable_call_waiting": {
          "type": "boolean",
          "description": "Enable Call Waiting"
        },
        "voicemail[greeting][standard]": {
          "type": "object",
          "description": "Recording lookup object"
        },
        "voicemail[greeting][type]": {
          "type": "string",
          "description": "Voicemail greeting type"
        },
        "caller_id": {
          "type": "string",
          "description": "Caller ID"
        },
        "local_area_code": {
          "type": "integer",
          "description": "Local area code"
        },
        "voicemail[enabled]": {
          "type": "boolean",
          "description": "Voicemail enabled"
        },
        "voicemail[greeting][enable_leave_message_prompt]": {
          "type": "boolean",
          "description": "Use leave message prompt after voicemail"
        },
        "voicemail[transcription]": {
          "type": "string",
          "description": "Voicemail transcription type"
        },
        "voicemail[notifications][emails]": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Email notifications for voicemails. Can be a single email or an array of emails"
        },
        "voicemail[notifications][sms]": {
          "type": "string",
          "description": "SMS notifications for voicemails"
        },
        "call_notifications[emails]": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Email notifications for calls. Can be a single email or an array of emails"
        },
        "call_notifications[sms]": {
          "type": "string",
          "description": "SMS notifications for calls"
        },
        "route": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Route object lookup (must belong to this extension)"
        }
      }
    },
    "CreateContactParams": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "First Name"
        },
        "middle_name": {
          "type": "string",
          "description": "Middle Name"
        },
        "last_name": {
          "type": "string",
          "description": "Last Name"
        },
        "prefix": {
          "type": "string",
          "description": "Prefix"
        },
        "phonetic_first_name": {
          "type": "string",
          "description": "Phonetic First Name"
        },
        "phonetic_middle_name": {
          "type": "string",
          "description": "Phonetic Middle Name"
        },
        "phonetic_last_name": {
          "type": "string",
          "description": "Phonetic Last Name"
        },
        "suffix": {
          "type": "string",
          "description": "Suffix"
        },
        "nickname": {
          "type": "string",
          "description": "Nickname"
        },
        "company": {
          "type": "string",
          "description": "Company Name"
        },
        "department": {
          "type": "string",
          "description": "Department Name"
        },
        "job_title": {
          "type": "string",
          "description": "Job Title"
        },
        "emails": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "Email Addresses"
        },
        "phone_numbers": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "Phone Numbers"
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "Addresses"
        },
        "group": {
          "type": "object",
          "description": "Contact Group"
        }
      }
    },
    "CreateGroupParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Group name"
        }
      }
    },
    "CreateMenuParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "main_message": {
          "type": "object"
        },
        "invalid_keypress_message": {
          "type": "object"
        },
        "allow_extension_dial": {
          "type": "boolean"
        },
        "keypress_wait_time": {
          "type": "integer"
        },
        "timeout_handler": {
          "type": "object"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "ReplaceMenuParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "greeting": {
          "type": "object"
        },
        "invalid_keypress": {
          "type": "object"
        },
        "allow_extension_dial": {
          "type": "boolean"
        },
        "keypress_wait_time": {
          "type": "integer"
        },
        "timeout_handler": {
          "type": "object"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "CreatePhoneNumberParams": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "object",
          "description": "Phone number"
        },
        "route": {
          "type": "object",
          "description": "Route lookup object"
        },
        "name": {
          "type": "string",
          "description": "Phone Name"
        },
        "block_incoming": {
          "type": "boolean",
          "description": "Block incoming calls"
        },
        "block_anonymous": {
          "type": "boolean",
          "description": "Block anonymous calls"
        },
        "caller_id[name]": {
          "type": "string",
          "description": "Caller ID name"
        },
        "caller_id[type]": {
          "type": "string",
          "description": "Caller ID type"
        },
        "sms_forwarding[type]": {
          "type": "string",
          "description": "'application' or 'extension'"
        },
        "sms_forwarding[application]": {
          "type": "object",
          "description": "Application lookup object"
        },
        "sms_forwarding[extension]": {
          "type": "object",
          "description": "Extension lookup object"
        },
        "call_notifications[emails]": {
          "type": "array",
          "description": "Call notifications for emails. Can be a single email or an array of emails",
          "items": {
            "type": "string"
          }
        },
        "call_notifications[sms]": {
          "type": "string",
          "description": "Call notification for SMS"
        }
      }
    },
    "ReplacePhoneNumberParams": {
      "type": "object",
      "properties": {
        "route": {
          "type": "object",
          "description": "Route lookup object"
        },
        "name": {
          "type": "string",
          "description": "Phone Name"
        },
        "block_incoming": {
          "type": "boolean",
          "description": "Block incoming calls"
        },
        "block_anonymous": {
          "type": "boolean",
          "description": "Block anonymous calls"
        },
        "caller_id[name]": {
          "type": "string",
          "description": "Caller ID name"
        },
        "caller_id[type]": {
          "type": "string",
          "description": "Caller ID type"
        },
        "sms_forwarding[type]": {
          "type": "string",
          "description": "'application' or 'extension'"
        },
        "sms_forwarding[application]": {
          "type": "object",
          "description": "Application lookup object"
        },
        "sms_forwarding[extension]": {
          "type": "object",
          "description": "Extension lookup object"
        },
        "pool_item": {
          "type": "object",
          "description": "Pool lookup object"
        },
        "call_notifications[emails]": {
          "type": "array",
          "description": "Call notifications for emails. Can be a single email or an array of emails",
          "items": {
            "type": "string"
          }
        },
        "call_notifications[sms]": {
          "type": "string",
          "description": "Call notification for SMS"
        }
      }
    },
    "CreateQueueParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of queue"
        },
        "greeting": {
          "type": "object",
          "description": "Recording lookup object"
        },
        "hold_music": {
          "type": "object",
          "description": "Recording lookup object"
        },
        "max_hold_time": {
          "type": "integer",
          "description": "Max seconds for hold"
        },
        "caller_id_type": {
          "type": "string",
          "description": "Type of caller id"
        },
        "ring_time": {
          "type": "integer",
          "description": "Number of seconds to ring each member"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "Extensions or phone numbers"
        }
      }
    },
    "CreateRouteParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "Rule Sets"
        },
        "extension": {
          "type": "object",
          "description": "Extension Reference"
        }
      }
    },
    "CreateSmsParams": {
      "type": "object",
      "required": [
        "from",
        "to",
        "text"
      ],
      "properties": {
        "from": {
          "type": "string",
          "description": "Phone number of sender"
        },
        "to": {
          "type": "string",
          "description": "Outgoing destination numbers"
        },
        "text": {
          "type": "string",
          "description": "Text body of the outgoing SMS message. Maximum 160 characters per message."
        },
        "extension_id" : {
          "type": "integer",
          "description": "ID of Extension where the sms is saved"
        }
      }
    },
    "CreateSubaccountParams": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "username": {
          "type": "string",
          "description": "Sub account password"
        },
        "password": {
          "type": "string",
          "description": "Sub account password"
        },
        "contact": {
          "$ref": "#/definitions/ContactSubaccount",
          "description": "Contact Object. See below for details."
        },
        "billing_contact": {
          "$ref": "#/definitions/ContactSubaccount",
          "description": "Contact Object for billing purposes. See below for details."
        }
      }
    },
    "CreateTrunkParams": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of Trunk"
        },
        "uri": {
          "type": "string",
          "description": "URI of Trunk (in the form of SIP/user@host.com:port)"
        },
        "max_concurrent_calls": {
          "type": "integer",
          "description": "Max concurrent calls"
        },
        "max_minutes_per_month": {
          "type": "integer",
          "description": "Max minutes per month"
        },
        "greeting": {
          "type": "object",
          "description": "Recording lookup object"
        },
        "error_message": {
          "type": "object",
          "description": "Recording lookup object"
        },
        "codecs": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "description": "Custom audio codec configuration"
        }
      }
    },
    "ListAccounts": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdArray"
        },
        "sort": {
          "$ref": "#/definitions/SortId"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountFull"
          }
        }
      }
    },
    "ListApplications": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdNameArray"
        },
        "sort": {
          "$ref": "#/definitions/SortIdName"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationFull"
          }
        }
      }
    },
    "ListCallLogs": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterCallLogs"
        },
        "sort": {
          "$ref": "#/definitions/SortCallLogs"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallLogFull"
          }
        }
      }
    },
    "ListDevices": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdNameArray"
        },
        "sort": {
          "$ref": "#/definitions/SortIdName"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceFull"
          }
        }
      }
    },
    "ListExpressServiceCodes": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdArray"
        },
        "sort": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortId"
          }
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpressServiceCodeFull"
          }
        }
      }
    },
    "ListExtensions": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdExtensionNameArray"
        },
        "sort": {
          "$ref": "#/definitions/SortIdExtensionName"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionFull"
          }
        }
      }
    },
    "ListCallerIds": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterNameNumberArray"
        },
        "sort": {
          "$ref": "#/definitions/SortNameNumber"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallerIdFull"
          }
        }
      }
    },
    "ListContacts": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdGroupIdUpdatedAtArray"
        },
        "sort": {
          "$ref": "#/definitions/SortIdUpdatedAt"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactFull"
          }
        }
      }
    },
    "ListGroups": {
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdNameArray"
        },
        "sort": {
          "$ref": "#/definitions/SortIdName"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GroupFull"
          }
        }
      }
    },
    "ListMedia": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdNameArray"
        },
        "sort": {
          "$ref": "#/definitions/SortIdName"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaSummary"
          }
        }
      }
    },
    "ListMenus": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdNameArray"
        },
        "sort": {
          "$ref": "#/definitions/SortIdName"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MenuFull"
          }
        }
      }
    },
    "ListPhoneNumbers": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdNamePhoneNumberArray"
        },
        "sort": {
          "$ref": "#/definitions/SortIdNamePhoneNumber"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "description": "Array of Contact Phone Number Objects. See below for details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumberContact"
          }
        }
      }
    },
    "PhoneNumberContact": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of phone number, must be one of: home, business, mobile, fax, pager. Default is home."
        },
        "number": {
          "type": "string",
          "description": "Phone number, as entered. Does not need to be formatted in any particular way. Required."
        },
        "normalized": {
          "type": "string",
          "description": "Phone number in E.164 format. Read-only."
        }
      }
    },
    "ListQueues": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdNameArray"
        },
        "sort": {
          "$ref": "#/definitions/SortIdName"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueueFull"
          }
        }
      }
    },
    "ListRoutes": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdNameArray"
        },
        "sort": {
          "$ref": "#/definitions/SortIdName"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteFull"
          }
        }
      }
    },
    "ListSchedules": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdNameArray"
        },
        "sort": {
          "$ref": "#/definitions/SortIdName"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScheduleFull"
          }
        }
      }
    },
    "ListSms": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdDirectionFrom"
        },
        "sort": {
          "$ref": "#/definitions/SortIdCreatedAt"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SmsFull"
          }
        }
      }
    },
    "ListTrunks": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterIdNameArray"
        },
        "sort": {
          "$ref": "#/definitions/SortIdName"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrunkFull"
          }
        }
      }
    },
    "ListAvailableNumbers": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/FilterListAvailableNumbers"
        },
        "sort": {
          "$ref": "#/definitions/SortListAvailableNumbers"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableNumbersFull"
          }
        }
      }
    },
    "ListPhoneNumbersRegions": {
      "type": "object",
      "properties": {
        "group_by": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filters": {
          "$ref": "#/definitions/FilterListPhoneNumbersRegions"
        },
        "sort": {
          "$ref": "#/definitions/SortListPhoneNumbersRegions"
        },
        "total": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumbersRegionFull"
          }
        }
      }
    },
    "AccountFull": {
      "description": "The Full Account Object includes all of the properties in the Account Summary Object, along with the following:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Account ID. Sometimes referred to as \"Voip ID\" or \"voip_id\"."
        },
        "name": {
          "type": "string",
          "description": "Name on the account. Read-only."
        },
        "username": {
          "type": "string",
          "description": "Account user name"
        },
        "password": {
          "type": "string",
          "description": "Account password. For security reason, this is masked as \"**\""
        },
        "master_account": {
          "description": "If this account is a subaccount, this property shows the master account that it belongs to. Otherwise it is NULL. Read-only. Output is an Account Summary Object.",
          "$ref": "#/definitions/AccountSummary"
        },
        "contact": {
          "$ref": "#/definitions/ContactAccount",
          "description": "Contact Object. See below for details."
        },
        "billing_contact": {
          "$ref": "#/definitions/ContactAccount",
          "description": "Contact Object for billing purposes. See below for details."
        }
      }
    },
    "AccountSummary": {
      "description": "The Account Summary Object is used to briefly represent an account. It can occur in several places throughout this API. Here are the properties:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Account ID. Sometimes referred to as \"Voip ID\" or \"voip_id\"."
        },
        "name": {
          "type": "string",
          "description": "Name on the account. Read-only."
        }
      }
    },
    "ContactAccount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name. Required."
        },
        "company": {
          "type": "string",
          "description": "Company name"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "phone": {
          "type": "string",
          "description": "Phone number. Required."
        },
        "fax": {
          "type": "string",
          "description": "Fax number"
        },
        "primary_email": {
          "type": "string",
          "description": "Primary email address. Required."
        },
        "alternate_email": {
          "type": "string",
          "description": "Alternate email address"
        }
      }
    },
    "Address": {
      "description": "Contact Address Object. See below for details.",
      "type": "object",
      "required": [
        "line_1",
        "city",
        "country"
      ],
      "properties": {
        "line_1": {
          "type": "string",
          "description": "Street address line 1. Required."
        },
        "line_2": {
          "type": "string",
          "description": "Street address line 2"
        },
        "city": {
          "type": "string",
          "description": "City. Required."
        },
        "province": {
          "type": "string",
          "description": "Province. Required if country is US"
        },
        "postal_code": {
          "type": "string",
          "description": "Postal code"
        },
        "country": {
          "type": "string",
          "description": "2-character country code. Required."
        }
      }
    },
    "ApplicationFull": {
      "description": "The Full Application Object is identical to the Application Summary Object. See above for details.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Application ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Application name"
        }
      }
    },
    "ApplicationSummary": {
      "description": "The Application Summary Object is used to briefly represent an application. It can occur in several places throughout this API. Here are the properties:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Application ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Application name"
        }
      }
    },
    "CallFull": {
      "description": "",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": ""
        }
      }
    },
    "CallLogFull": {
      "description": "The Full Call Log Object includes the properties in the Call Log Summary Object, along with the following:",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID"
        },
        "uuid": {
          "type": "string",
          "description": "Internal system id, may be null"
        },
        "extension": {
          "$ref": "#/definitions/ExtensionSummary",
          "description": "Account extension"
        },
        "caller_id": {
          "type": "string",
          "description": "Call made from this phone number"
        },
        "called_number": {
          "type": "string",
          "description": "Call made to this phone number"
        },
        "start_time": {
          "type": "string",
          "description": "Call start time"
        },
        "created_at": {
          "type": "string",
          "description": "Call log creation time. Same as call end time + time needed to create call log"
        },
        "direction": {
          "type": "string",
          "description": "Call direction: in or out"
        },
        "type": {
          "type": "string",
          "description": "Call type: call, fax, audiogram ..."
        },
        "call_duration": {
          "type": "integer",
          "description": "Call duration in seconds"
        },
        "is_monitored": {
          "type": "string",
          "description": "Was call being monitored?"
        },
        "call_number": {
          "type": "string",
          "description": "Internal system call reference number"
        },
        "final_action": {
          "type": "string",
          "description": "Last action of call flow"
        },
        "call_recording": {
          "type": "string",
          "description": "URL of call recording if available. Empty string if call recording does not exist"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CallDetails"
          },
          "description": "A list of call flows from beginning of call to end of call."
        },
        "caller_cnam": {
          "type": "string",
          "description": "Internal system caller id / name"
        }
      }
    },
    "CallDetails": {
      "description": "Each item in the 'details' record may contain the following properties:",
      "type": "object",
      "properties": {
        "start_time": {
          "type": "integer",
          "description": "UNIX time stamp representing the UTC time that this call item starts"
        },
        "type": {
          "type": "string",
          "description": "Endpoint for this call item, such as call, voicemail, fax, menu, menu item, queue ..."
        },
        "id_value": {
          "type": "integer",
          "description": "ID associated with this call item endpoint (type)"
        },
        "voip_id": {
          "type": "integer",
          "description": "Same as account id"
        },
        "voip_phone_id": {
          "type": "integer",
          "description": "Same as account extension id"
        }
      }
    },
    "DeviceFull": {
      "description": "The Full Device Object includes the properties in the Device Summary Object, along with the following:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID"
        },
        "name": {
          "type": "string",
          "description": "User-supplied name, otherwise NULL"
        },
        "sip_authentication": {
          "$ref": "#/definitions/SipAuthentication"
        },
        "lines": {
          "type": "array",
          "description": "Array of Line Objects showing which extensions are attached to this device, and their assigned line numbers. See below for details.",
          "items": {
            "$ref": "#/definitions/Line"
          }
        }
      }
    },
    "SipAuthentication": {
      "description": "A SIP Authentication Properties Object. See below for details. Read-only.",
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "description": "Hostname"
        },
        "port": {
          "type": "integer",
          "description": "Port number"
        },
        "username": {
          "type": "string",
          "description": "Username. This is the ID of the device."
        },
        "password": {
          "type": "string",
          "description": "Password."
        }
      }
    },
    "Line": {
      "type": "object",
      "properties": {
        "line": {
          "type": "integer",
          "description": "Line number"
        },
        "extension": {
          "$ref": "#/definitions/ExtensionSummary",
          "description": "Extensions object that this line number is mapped to."
        }
      }
    },
    "DeviceSummary": {
      "description": "The Device Summary Object is used to briefly represent a VoIP device. It consists of the ID and name only:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID"
        },
        "name": {
          "type": "string",
          "description": "User-supplied name, otherwise NULL"
        }
      }
    },
    "ExpressServiceCodeFull": {
      "description": "The Full Express Service Code Object includes the properties in the Express Service Code Summary Object, along with the following:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID"
        },
        "express_service_code": {
          "type": "string",
          "description": "An 8-digit number in string format"
        },
        "expire_date": {
          "type": "integer",
          "description": "UNIX time stamp representing the UTC time that the Express Service Code expires. Please note that every time this service is executed, the expire_date is set to now + 24 hours."
        }
      }
    },
    "ExtensionFull": {
      "description": "The Full Extension Object has the same properties as the Extension Summary Object, along with the following:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the extension. This is the internal Phone.com ID, not the extension number callers may dial."
        },
        "name": {
          "type": "string",
          "description": "User-supplied name for the extension. On POST, leaving this empty will result in an auto-generated value. On PUT, this field is required."
        },
        "extension": {
          "type": "integer",
          "description": "Extension number that callers may dial. On POST, leaving this empty will result in an auto-generated value. On PUT, this field is required."
        },
        "full_name": {
          "type": "string",
          "description": "Full name of the individual or department to which this extension is assigned"
        },
        "usage_type": {
          "type": "string",
          "description": "Can be \"limited\" or \"unlimited\". In most cases, changing this will affect your monthly bill. Please see our Control Panel or contact Customer Service for pricing."
        },
        "device_membership": {
          "$ref": "#/definitions/DeviceMembership"
        },
        "timezone": {
          "type": "string",
          "description": "Time zone. Can be in any commonly recognized format, such as \"America/Los_Angeles\"."
        },
        "name_greeting": {
          "$ref": "#/definitions/MediaSummary",
          "description": "Greeting that communicates the extension's name. Output is a Greeting Summary Object. Input must be a Greeting Lookup Object."
        },
        "include_in_directory": {
          "type": "boolean",
          "description": "Whether this extension should be included in the dial-by-name directory for this account. Boolean."
        },
        "caller_id": {
          "type": "string",
          "description": "Phone number to use as Caller ID for outgoing calls. Must be a phone number belonging to this account, or one of any additional authorized phone numbers. You can use our List Caller Ids service to see a current list. To unassign, you may set this to \"private\", NULL, or an empty string."
        },
        "local_area_code": {
          "type": "string",
          "description": "For outbound calls, this is the North American area code that this extension is calling from."
        },
        "enable_call_waiting": {
          "type": "boolean",
          "description": "Whether Call Waiting is enabled. Boolean. Default is TRUE."
        },
        "enable_outbound_calls": {
          "type": "boolean",
          "description": "Whether outgoing calls are enabled. Boolean. Default is TRUE."
        },
        "voicemail": {
          "$ref": "#/definitions/Voicemail"
        },
        "call_notifications": {
          "$ref": "#/definitions/Notification",
          "description": "Call Notifications Object. See below for details."
        },
        "route": {
          "$ref": "#/definitions/RouteSummary",
          "description": "Route which will handle incoming voice and fax calls. Only valid on PUT requests, not POST. Output is a Route Summary Object if the route is named, otherwise the Full Route Object will be shown. Input must be a Route Lookup Object pointing to a named route. Route must belong to this extension already."
        }
      }
    },
    "DeviceMembership": {
      "description": "Device Membership Object, or NULL. Read-only. See below for details.",
      "type": "object",
      "properties": {
        "line": {
          "type": "integer",
          "description": "Line number to which this extension is assigned. Integer."
        },
        "device": {
          "description": "Device that this extension belongs to. Output is an Device Summary Object.",
          "$ref": "#/definitions/DeviceSummary"
        }
      }
    },
    "Voicemail": {
      "description": "Voicemail Object. See below for details.",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether voicemail is enabled. Boolean."
        },
        "password": {
          "type": "string",
          "description": "Password for accessing voicemail box. Must be digits only."
        },
        "greeting": {
          "$ref": "#/definitions/Greeting"
        },
        "attachments": {
          "type": "string",
          "description": "If notification emails are being used, this defines the format of the audio attachments. Can be \"wav\" for WAV format, \"mp3\" for MP3 format, or NULL to disable attachments."
        },
        "notifications": {
          "$ref": "#/definitions/Notification",
          "description": "Voicemail Notifications Object. See below for details. Can be set to NULL to disable notifications."
        },
        "transcription": {
          "type": "string",
          "description": "Type of voicemail transcription to use. Can be \"human\" for high-quality manual transcriptions by human operators, \"automated\" for machine-generated transcriptions, or NULL to omit trancriptions. Changing this option will affect your monthly bill. Please see our Control Panel or contact Customer Service for details."
        }
      }
    },
    "Greeting": {
      "description": "Voicemail Greeting Object. See below for details. Can be set to NULL to reset greeting options.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The greeting to play. Can be \"name\" for the name_greeting as described above, \"standard\" for the standard greeting, or \"alternate\" for an alternate greeting. See below for details."
        },
        "alternate": {
          "$ref": "#/definitions/MediaSummary",
          "description": "Greeting to be played when type=\"alternate\". Output is a Greeting Summary Object. Input must be a Greeting Lookup Object."
        },
        "standard": {
          "$ref": "#/definitions/MediaSummary",
          "description": "Greeting to be played when type=\"standard\". Output is a Greeting Summary Object. Input must be a Greeting Lookup Object."
        },
        "enable_leave_message_prompt": {
          "type": "boolean",
          "description": "Whether to prompt the caller with the following words after the voicemail greeting has been played: \"Please leave your message after the tone. When finished, hang up or press the pound key.\" Boolean."
        }
      }
    },
    "Notification": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "description": "Array of email addresses",
          "items": {
            "type": "string"
          }
        },
        "sms": {
          "type": "string",
          "description": "Phone number capable of receiving SMS messages"
        }
      }
    },
    "ExtensionSummary": {
      "description": "The Extension Summary Object is used to briefly represent an extension. It can be seen in several places throughout this API. Here are the properties:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the extension. This is the internal Phone.com ID, not the extension number callers may dial."
        },
        "name": {
          "type": "string",
          "description": "User-supplied name for the extension. On POST, leaving this empty will result in an auto-generated value. On PUT, this field is required."
        },
        "extension": {
          "type": "integer",
          "description": "Extension number that callers may dial. On POST, leaving this empty will result in an auto-generated value. On PUT, this field is required."
        }
      }
    },
    "CallerIdFull": {
      "description": "Here are all of the properties you can expect for Caller ID objects:",
      "type": "object",
      "properties": {
        "number": {
          "type": "string",
          "description": "Phone number, in E.164 format"
        },
        "name": {
          "type": "string",
          "description": "Name you have supplied for this number"
        },
        "type": {
          "type": "string",
          "description": "Type of Caller ID. account means this number is registered to your account, and extra refers to extra numbers which you have authorized, which are not managed under Phone.com."
        }
      }
    },
    "ContactFull": {
      "description": "The Full Contact Object includes all of the properties in the Contact Summary Object, along with several more:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer ID. Read-only."
        },
        "prefix": {
          "type": "string",
          "description": "Salutation, such as Mr, Mrs, or Dr"
        },
        "first_name": {
          "type": "string",
          "description": "First name or given name"
        },
        "middle_name": {
          "type": "string",
          "description": "Middle or second name"
        },
        "last_name": {
          "type": "string",
          "description": "Last name or surname"
        },
        "suffix": {
          "type": "string",
          "description": "Suffix, such as \"Jr.\", \"Sr.\", \"II\", or \"III\""
        },
        "nickname": {
          "type": "string",
          "description": "Nickname, or a shortened informal version of the contact's name"
        },
        "company": {
          "type": "string",
          "description": "Name of the contact's company"
        },
        "phonetic_first_name": {
          "type": "string",
          "description": "Phonetic first name. Useful for remembering how to pronounce the contact's name."
        },
        "phonetic_middle_name": {
          "type": "string",
          "description": "Phonetic middle name. Useful for remembering how to pronounce the contact's name."
        },
        "phonetic_last_name": {
          "type": "string",
          "description": "Phonetic last name. Useful for remembering how to pronounce the contact's name."
        },
        "department": {
          "type": "string",
          "description": "Name of the contact's department"
        },
        "job_title": {
          "type": "string",
          "description": "Contact's job title"
        },
        "emails": {
          "description": "Array of Contact Email Objects. See below for details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Email"
          }
        },
        "phone_numbers": {
          "description": "Array of Contact Phone Number Objects. See below for details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumberContact"
          }
        },
        "addresses": {
          "description": "Array of Contact Address Objects. See below for details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressListContacts"
          }
        },
        "group": {
          "$ref": "#/definitions/GroupListContacts"
        },
        "created_at": {
          "type": "integer",
          "description": "Integer UNIX timestamp when the contact was created. Read-only."
        },
        "updated_at": {
          "type": "integer",
          "description": "Integer UNIX timestamp when the contact was created. Read-only."
        }
      }
    },
    "Email": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Email type, one of: primary or alternate. Default is primary."
        },
        "email": {
          "type": "string",
          "description": "Email address. Required."
        }
      }
    },
    "AddressListContacts": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Address type, one of: home or business. Default is home."
        },
        "street": {
          "type": "string",
          "description": "House number and street name, including apartment, suite, etc."
        },
        "city": {
          "type": "string",
          "description": "City"
        },
        "state": {
          "type": "string",
          "description": "State or province"
        },
        "zip": {
          "type": "string",
          "description": "Zip code or postal code"
        },
        "country": {
          "type": "string",
          "description": "Country name"
        }
      }
    },
    "GroupListContacts": {
      "description": "Contact Group that this contact is filed under. Output is a Group Summary Object. Input is a Group Lookup Object.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name"
        }
      }
    },
    "ContactSummary": {
      "description": "The Contact Summary Object is used to briefly represent a contact from your address book. It can be seen in several places throughout this API. Here are the properties:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer ID. Read-only."
        },
        "prefix": {
          "type": "string",
          "description": "Salutation, such as Mr, Mrs, or Dr"
        },
        "first_name": {
          "type": "string",
          "description": "First name or given name"
        },
        "middle_name": {
          "type": "string",
          "description": "Middle or second name"
        },
        "last_name": {
          "type": "string",
          "description": "Last name or surname"
        },
        "suffix": {
          "type": "string",
          "description": "Suffix, such as 'Jr.', 'Sr.', 'II', or 'III'"
        },
        "nickname": {
          "type": "string",
          "description": "Nickname, or a shortened informal version of the contact's name"
        },
        "company": {
          "type": "string",
          "description": "Name of the contact's company"
        }
      }
    },
    "GroupFull": {
      "description": "The Full Group Object is identical to the Group Summary Object. See above for details.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name"
        }
      }
    },
    "GroupSummary": {
      "description": "The Group Summary Object is used to briefly represent a contact group. It can occur in several places throughout this API. Here are the properties:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name"
        }
      }
    },
    "MediaFull": {
      "description": "The Full Recording Object includes all of the properties from the Recording Summary Object, along with the following:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Recording ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name of recording"
        },
        "type": {
          "type": "string",
          "description": "Can be hold_music or greeting. Indicates the purpose of this recording and where it can be used.",
          "pattern": "hold_music|greeting"
        }
      }
    },
    "MediaSummary": {
      "description": "The Recording Summary Object is used to briefly represent a media recording. It can be seen in several places throughout this API. Here are the properties:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Recording ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name of recording"
        }
      }
    },
    "MenuFull": {
      "description": "The Full Menu Object contains the same properties as the Menu Summary Object, along with the following:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer Menu ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name. Required. Unique."
        },
        "allow_extension_dial": {
          "type": "boolean",
          "description": "Boolean. Determines whether a caller can enter an extension number to bypass the menu."
        },
        "keypress_wait_time": {
          "type": "integer",
          "description": "Boolean. Determines whether a caller can enter an extension number to bypass the menu."
        },
        "greeting": {
          "$ref": "#/definitions/MediaSummary",
          "description": "Greeting that is played when a caller enters a menu. Output is a Media Summary Object. Input must be a Media Lookup Object. Must refer to a media recording that has is_hold_music set to FALSE."
        },
        "keypress_error": {
          "$ref": "#/definitions/MediaSummary",
          "description": "Message that is played when the caller makes a keypress error. Output is a Media Summary Object. Input must be a Media Lookup Object. Must refer to a media recording that has is_hold_music set to FALSE."
        },
        "timeout_handler": {
          "$ref": "#/definitions/RouteSummary",
          "description": "Route that will be entered when the caller fails to choose a menu option within the allotted time. Output is a Route Summary Object if the route is named, otherwise the Full Route Object will be shown. Input must be a Route Lookup Object pointing to a named route."
        },
        "options": {
          "description": "Array of menu option objects. See below for details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Option"
          }
        }
      }
    },
    "MenuSummary": {
      "description": "The Menu Summary Object is used to briefly represent a menu. It can be seen in several places throughout this API. Here are the properties:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer Menu ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name. Required. Unique."
        }
      }
    },
    "Option": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Keypad key. Must equal a single digit or the pound sign (\"#\")."
        },
        "route": {
          "$ref": "#/definitions/RouteSummary",
          "description": "Route which will be entered when the user presses the designated key. Output is a Route Summary Object if the route is named, otherwise the Full Route Object will be shown. Input must be a Route Lookup Object pointing to a named route."
        }
      }
    },
    "PhoneNumberFull": {
      "description": "The Full Phone Number Object has all of the properties of the Phone Number Summary Object, along with several more, as shown below:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer Phone number ID. This is the internal Phone.com ID for this number, not the phone number itself. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name"
        },
        "phone_number": {
          "type": "string",
          "description": "Phone number, in E.164 format"
        },
        "block_incoming": {
          "type": "boolean",
          "description": "Whether to block incoming calls. Boolean."
        },
        "block_anonymous": {
          "type": "boolean",
          "description": "Whether to block anonymous calls. Boolean."
        },
        "route": {
          "$ref": "#/definitions/RouteSummary",
          "description": "The Route assigned to handle incoming calls for this number, if any. Output is a Route Summary Object, or NULL if not set. Input can be a Route Lookup Object or NULL to unset."
        },
        "caller_id": {
          "$ref": "#/definitions/CallerIdPhoneNumber",
          "description": "Caller ID Object, or NULL"
        },
        "sms_forwarding": {
          "$ref": "#/definitions/SmsForwarding",
          "description": "SMS Forwarding Object, or NULL"
        },
        "call_notifications": {
          "$ref": "#/definitions/CallNotifications"
        }
      }
    },
    "CallerIdPhoneNumber": {
      "description": "Here are all of the properties you can expect for Caller ID objects:",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name that this number will be associated with. Must be no longer than 15 characters, and can only contain English letters, numbers, spaces, and commas."
        },
        "type": {
          "type": "string",
          "description": "Can be \"business\" or \"personal\"",
          "pattern": "extension|application"
        }
      }
    },
    "SmsForwarding": {
      "description": "SMS Forwarding Object, or NULL",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Can be \"extension\" or \"application\"",
          "pattern": "extension|application"
        },
        "extension": {
          "$ref": "#/definitions/ExtensionSummary",
          "description": "Required if type = \"extension\". Extension that messages should be directed to. Output is an Extension Summary Object. Input must be an Extension Lookup Object."
        },
        "application": {
          "$ref": "#/definitions/ApplicationSummary",
          "description": "Required if type = \"application\". Application that messages should be directed to. Output is an Application Summary Object. Input must be an Application Lookup Object."
        }
      }
    },
    "CallNotifications": {
      "description": "Call Notifications Object or NULL",
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of email addresses"
        },
        "sms": {
          "type": "string",
          "description": "A phone number capable of receiving SMS messages"
        }
      }
    },
    "QueueFull": {
      "description": "The Full QueueObject has the same properties as the Queue Summary Object, along with the following:",
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name. Required."
        },
        "greeting": {
          "$ref": "#/definitions/MediaSummary",
          "description": "Greeting to be played when caller first connects. Output is a Media Summary Object. Input must be a Media Lookup Object. Must refer to a media recording that has is_hold_music set to FALSE. Can be set to NULL to disable the greeting."
        },
        "hold_music": {
          "$ref": "#/definitions/HoldMusic"
        },
        "max_hold_time": {
          "type": "integer",
          "description": "Maximum hold time in seconds. If provided, must equal one of: 60, 120, 180, 240, 300, 600, 900, 1200, 1800, 2700, 3600. Default is 300."
        },
        "caller_id_type": {
          "type": "string",
          "description": "Caller id type to show members. If provided, must equal one of: 'called_number', 'calling_number'. Default is 'calling_number'."
        },
        "ring_time": {
          "type": "integer",
          "description": "Number of seconds to ring a member before cycling to the next member. If provided, must equal one of: 5, 10, 15, 20, 25, 30. Default is 5."
        },
        "members": {
          "description": "Array of Member Objects. Non-virtual account extensions or phone numbers. See below for details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Member"
          }
        }
      }
    },
    "QueueSummary": {
      "description": "The Queue Summary Object is used to briefly represent a calling queue. It can be seen in several places throughout this API. Here are the properties:",
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name. Required."
        }
      }
    },
    "HoldMusic": {
      "description": "Hold Music to be played while callers are waiting. Output is a Media Summary Object. Input must be a Media Lookup Object. Must refer to a media recording that has is_hold_music set to TRUE. Default is to play a standard ring tone.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Recording ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name of recording"
        }
      }
    },
    "Member": {
      "type": "object",
      "properties": {
        "extension": {
          "$ref": "#/definitions/ExtensionSummary",
          "description": "Extension that this member refers to. Output is an Extension Summary Object. Input must be an Extension Lookup Object."
        },
        "phone_number": {
          "type": "string",
          "description": "Phone number"
        }
      }
    },
    "RouteFull": {
      "description": "The root level of the Full Route Object includes all of the properties in the Route Summary Object, along with two more:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name"
        },
        "extension": {
          "$ref": "#/definitions/ExtensionSummary",
          "description": "Extension to which this route belongs. Output is an Extension Summary Object. Input must be an Extension Lookup Object. Optional. Cannot be changed after a route is created."
        },
        "rules": {
          "type": "array",
          "description": "Array of Rule Set Objects. Required. See below for details. When processing incoming calls, the first matching rule set will be used, and all others will be ignored.",
          "items": {
            "$ref": "#/definitions/RuleSet"
          }
        }
      }
    },
    "RuleSet": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/RuleSetFilter"
        },
        "actions": {
          "description": "Array of Action Objects. Required. Routes have rule sets, and rule sets have one or more actions. The supported actions are described below:",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleSetAction"
          }
        }
      }
    },
    "RuleSetFilter": {
      "description": "Filter Object. Optional. See below for details.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Required.",
          "pattern": "schedule|contact|contact_group"
        },
        "schedule": {
          "$ref": "#/definitions/ScheduleSummary",
          "description": "Schedule that this filter refers to. Output is a Schedule Summary Object. Input must be a Schedule Lookup Object. Required."
        },
        "contact": {
          "$ref": "#/definitions/ContactSummary",
          "description": "Address Book Contact that this filter refers to. Output is a Contact Summary Object. Input must be a Contact Lookup Object. Required."
        },
        "group": {
          "$ref": "#/definitions/GroupSummary",
          "description": "Address Book Group that this filter refers to. Output is a Contact Group Summary Object. Input must be a Contact Group Lookup Object. Required."
        }
      }
    },
    "RuleSetAction": {
      "description": "Filter Object. Optional. See below for details.",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "description": "Required.",
          "pattern": "directory|disconnect|fax|forward|greeting|hold|menu|queue|trunk|voicemail"
        },
        "extension": {
          "description": "Extension that this action refers to. Output is an Extension Summary Object. Input must be an Extension Lookup Object. Required.",
          "$ref": "#/definitions/ExtensionSummary"
        },
        "items": {
          "type": "array",
          "description": "This action is for forwarding calls to any number of extensions or phone numbers. The forwarding is handled in parallel, meaning that all phone numbers and/or extensions will ring simultaneously. When the call is answered by any single phone number or extension, ringing will stop for all of them. Subsequent actions in this rule set will be performed if the call is not answered before the timeout period is reached, or if it is forwarded to an extension that has its own route and that route does not result in any actions that disconnect the call or take over call handling.",
          "items": {
            "$ref": "#/definitions/RuleSetForwardItem"
          }
        },
        "timeout": {
          "type": "integer",
          "description": "Seconds that our routing engine should wait until moving on. Optional. Must be an integer between 5 and 90. Default is 5 seconds.",
          "default": 5
        },
        "hold_music": {
          "$ref": "#/definitions/MediaSummary",
          "description": "Hold Music to be played while callers are waiting. Output is a Media Summary Object. Input must be a Media Lookup Object. Optional. Must refer to a media recording that has is_hold_music set to TRUE. Default is to play a standard ring tone."
        },
        "greeting": {
          "$ref": "#/definitions/MediaSummary",
          "description": "Greeting that this action refers to. Output is a Media Summary Object. Input must be a Media Lookup Object. Required. Must refer to a media recording that has is_hold_music set to FALSE."
        },
        "duration": {
          "type": "integer",
          "description": "Required. Seconds that the caller should be placed on hold before being moved onto the next action. Must be an integer between 1 and 60 seconds."
        },
        "menu": {
          "$ref": "#/definitions/MenuSummary",
          "description": "Menu that this action refers to. Required. Output is a Menu Summary Object. Input must be a Menu Lookup Object."
        },
        "queue": {
          "$ref": "#/definitions/QueueSummary",
          "description": "Queue that this action refers to. Required. Output is a Queue Summary Object. Input must be a Queue Lookup Object."
        },
        "trunk": {
          "$ref": "#/definitions/TrunkSummary",
          "description": "Trunk that this action refers to. Required. Output is a Trunk Summary Object. Input must be a Trunk Lookup Object."
        }
      }
    },
    "RuleSetForwardItem": {
      "description": "Array of Forward Item Objects. See below for details. Required.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Required. Must equal phone_number or extension.",
          "pattern": "phone_number|extension"
        },
        "extension": {
          "description": "Required if type = \"extension\". Extension that callers should be directed to. Output is an Extension Summary Object. Input must be an Extension Lookup Object.",
          "$ref": "#/definitions/ExtensionSummary"
        },
        "number": {
          "type": "string",
          "description": "Required if type = \"phone_number\". Phone number that callers should be directed to. Must be a string in E.164 format."
        },
        "screening": {
          "type": "boolean",
          "description": "Boolean. Optional. Default is FALSE. Use this to activate call screening. If TRUE, the timeout on the parent action should be at least 30 seconds.",
          "default": false
        },
        "caller_id": {
          "type": "string",
          "description": "Optional. Must equal calling_number or called_number. Defines which phone number should be used for Caller ID. Default is calling_number.",
          "pattern": "calling_number|called_number",
          "default": "calling_number"
        },
        "voice_tag": {
          "type": "string",
          "description": "Optional string. If screening = TRUE, this value will be passed into our Text-To-Speech engine and used to inform the caller of who they have reached."
        },
        "distinctive_ring": {
          "type": "string",
          "description": "Optional. Must equal one of: DEFAULT, STYLE_2, STYLE_3, STYLE_4, STYLE_5, STYLE_6, STYLE_7, STYLE_8, or STYLE_9. Identifies the style of ring tone you will hear when an incoming call is waiting.",
          "pattern": "DEFAULT|STYLE_2|STYLE_3|STYLE_4|STYLE_5|STYLE_6|STYLE_7|STYLE_8|STYLE_9"
        }
      }
    },
    "RouteSummary": {
      "description": "The Route Summary Object is used to briefly represent a route. It can be seen in several places throughout this API. Here are the properties:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name"
        }
      }
    },
    "ScheduleFull": {
      "description": "The Full Schedule Object is identical to the Schedule Summary Object. See above for details.",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer Schedule ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name"
        }
      }
    },
    "ScheduleSummary": {
      "description": "The Schedule Summary Object is used to briefly represent a schedule. It can be seen in several places throughout this API. Here are the properties:",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer Schedule ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name"
        }
      }
    },
    "SmsFull": {
      "description": "The Full SMS Object is identical to the SMS Summary Object. See above for details.",
      "type": "object",
      "required": [
        "id",
        "from",
        "to",
        "direction",
        "created_epoch",
        "created_at",
        "text"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique SMS ID. Read-only."
        },
        "from": {
          "type": "string",
          "description": "Caller ID number to display on the incoming/outgoing SMS message. For an outgoing message, it must be a phone number associated with your Phone.com account."
        },
        "to": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Recipient"
          },
          "description": "An array of SMS recipients."
        },
        "direction": {
          "type": "string",
          "description": "Direction of SMS. 'in' for Incoming messages, 'out' for Outgoing messages."
        },
        "created_epoch": {
          "type": "integer",
          "description": "Unix time stamp representing the UTC time that the object was created in the Phone.com API system."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Date string representing the UTC time that the object was created in the Phone.com API system."
        },
        "text": {
          "type": "string",
          "description": "Body of the SMS text"
        }
      }
    },
    "Recipient": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string",
          "description": "Phone number that will receive the SMS message"
        },
        "status": {
          "type": "string",
          "description": "Indicate the status of your SMS object. May be 'sent', 'received', 'queued', 'new' ..."
        }
      }
    },
    "ContactSubaccount": {
      "type": "object",
      "required": [
        "name",
        "primary_email",
        "phone"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Contact name"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "primary_email": {
          "type": "string",
          "description": "Primary email address. Required."
        },
        "alternate_email": {
          "type": "string",
          "description": "Alternate email address"
        },
        "company": {
          "type": "string",
          "description": "Company name"
        },
        "phone": {
          "type": "string",
          "description": "Phone number. Required."
        },
        "fax": {
          "type": "string",
          "description": "Fax number"
        }
      }
    },
    "TrunkFull": {
      "description": "The Full Trunk Object is identical to the Trunk Summary Object, along with the following:",
      "type": "object",
      "required": [
        "id",
        "name",
        "uri",
        "codecs",
        "max_concurrent_calls",
        "max_minutes_per_month",
        "greeting",
        "error_message"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer Trunk ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name. Required."
        },
        "uri": {
          "type": "string",
          "description": "Fully-qualified SIP URI. Required."
        },
        "max_concurrent_calls": {
          "type": "integer",
          "description": "Max concurrent calls. Default is 10."
        },
        "max_minutes_per_month": {
          "type": "integer",
          "description": "Max minutes per month. Default is 750."
        },
        "greeting": {
          "$ref": "#/definitions/MediaSummary",
          "description": "Greeting. Output is a Media Summary Object. Input must be a Media Lookup Object. Must refer to a media recording that has is_hold_music set to FALSE."
        },
        "error_message": {
          "$ref": "#/definitions/MediaSummary",
          "description": "Error Message. Output is a Media Summary Object. Input must be a Media Lookup Object. Must refer to a media recording that has is_hold_music set to FALSE."
        },
        "codecs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Custom audio codec configuration, if any is needed. If provided, must be a simple array containing the prioritized list of desired codecs. Supported codecs are: g711u 64k, g711u 56k, g711a 64k, g711a 56k, g7231, g728, g729, g729A, g729B, g729AB, gms full, rfc2833, t38, ilbc, h263, g722, g722_1, g729D, g729E, amr, amr_wb, efr, evrc, h264, mpeg4, red, cng, SIP Info to 2833"
        }
      }
    },
    "TrunkSummary": {
      "description": "The Trunk Summary Object is used to briefly represent a trunk. It can be seen in several places throughout this API. Here are the properties:",
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "Integer Trunk ID. Read-only."
        },
        "name": {
          "type": "string",
          "description": "Name. Required."
        }
      }
    },
    "AvailableNumbersFull": {
      "description": "The Full Available Phone Number Object includes the properties in the Summary Object, along with the following:",
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string",
          "description": "Phone number, in E.164 format"
        },
        "formatted": {
          "type": "string",
          "description": "Human-readable formatted version of the phone number"
        },
        "price": {
          "type": "integer",
          "description": "The one-time initial price for this number, in USD. Some numbers show REQUEST_QUOTE here. Please contact our sales department if you are interested in these numbers."
        },
        "is_toll_free": {
          "type": "boolean",
          "description": "Whether the number is toll-free"
        },
        "country_code": {
          "type": "string",
          "description": "The international dialing prefix for this number. For US and Canadian numbers, for example, this will be \"1\"."
        },
        "npa": {
          "type": "string",
          "description": "Area code (a.k.a. NPA). Included for North American numbers only."
        },
        "nxx": {
          "type": "string",
          "description": "Second 3 digits (a.k.a. NXX). Included for North American numbers only."
        },
        "xxxx": {
          "type": "string",
          "description": "Last 4 digits (a.k.a. XXXX). Included for North American numbers only."
        },
        "city": {
          "type": "string",
          "description": "City with which this number is associated, if known. Otherwise NULL."
        },
        "province": {
          "type": "string",
          "description": "State or Province with which this number is associated, if known. Postal Code. Otherwise NULL."
        },
        "country": {
          "type": "string",
          "description": "Country with which this number is associated, if known. Otherwise NULL."
        }
      }
    },
    "PhoneNumbersRegionFull": {
      "description": "The Region Object may include any of several fields describing the group, as well as the quantity of phone numbers available in that group. Here are the properties:",
      "type": "object",
      "properties": {
        "country_code": {
          "type": "string",
          "description": "Optional. Integer representing the international calling code for the phone number's country."
        },
        "npa": {
          "type": "integer",
          "description": "Optional. Area Code, for North American phone numbers."
        },
        "nxx": {
          "type": "integer",
          "description": "Optional. Second set of 3 digits, for North American phone numbers."
        },
        "is_toll_free": {
          "type": "integer",
          "description": "Optional. Boolean describing whether the phone numbers in this group are toll free."
        },
        "city": {
          "type": "string",
          "description": "Optional. City name."
        },
        "province_postal_code": {
          "type": "string",
          "description": "Optional. Two-letter postal code for the state or province."
        },
        "country_postal_code": {
          "type": "string",
          "description": "Optional. Two-letter postal code for the country."
        },
        "quantity": {
          "type": "integer",
          "description": "Integer. Quantity of phone numbers currently available in the given region."
        }
      }
    },
    "DeleteContact": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "DeleteGroup": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "DeleteMenu": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "DeleteQueue": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "DeleteRoute": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "DeleteTrunk": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "SortListAvailableNumbers": {
      "type": "object",
      "properties": {
        "internal": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        }
      }
    },
    "SortListPhoneNumbersRegions": {
      "type": "object",
      "properties": {
        "country_code": {
          "type": "string"
        },
        "npa": {
          "type": "string"
        },
        "nxx": {
          "type": "string"
        },
        "is_toll_free": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "province_postal_code": {
          "type": "string"
        },
        "country_postal_code": {
          "type": "string"
        }
      }
    },
    "SortIdCreatedAt": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        }
      }
    },
    "SortIdUpdatedAt": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "SortCallLogs": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        }
      }
    },
    "SortIdNamePhoneNumber": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        }
      }
    },
    "SortNameNumber": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      }
    },
    "SortIdExtensionName": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "SortIdName": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "SortId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "FilterListAvailableNumbers": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string"
        },
        "country_code": {
          "type": "string"
        },
        "npa": {
          "type": "string"
        },
        "nxx": {
          "type": "string"
        },
        "xxxx": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "province": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "category": {
          "type": "string"
        }
      }
    },
    "FilterListPhoneNumbersRegions": {
      "type": "object",
      "properties": {
        "country_code": {
          "type": "string"
        },
        "npa": {
          "type": "string"
        },
        "nxx": {
          "type": "string"
        },
        "is_toll_free": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "province_postal_code": {
          "type": "string"
        },
        "country_postal_code": {
          "type": "string"
        }
      }
    },
    "FilterIdDirectionFrom": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "direction": {
          "type": "string"
        },
        "from": {
          "type": "string"
        }
      }
    },
    "FilterIdGroupIdUpdatedAtArray": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "group_id": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "FilterCallLogs": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "direction": {
          "type": "string"
        },
        "called_number": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "FilterIdNamePhoneNumberArray": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        }
      }
    },
    "FilterNameNumberArray": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "number": {
          "type": "string"
        }
      }
    },
    "FilterIdExtensionNameArray": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "FilterIdNameArray": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "FilterIdArray": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    }
  }
}
