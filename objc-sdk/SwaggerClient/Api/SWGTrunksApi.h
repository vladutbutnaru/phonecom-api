#import <Foundation/Foundation.h>
#import "SWGCreateTrunkParams.h"
#import "SWGTrunkFull.h"
#import "SWGDeleteTrunk.h"
#import "SWGListTrunksFull.h"
#import "SWGApi.h"

/**
* Phone.com API
* This is a Phone.com api Swagger definition
*
* OpenAPI spec version: 1.0.0
* Contact: apisupport@phone.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SWGTrunksApi: NSObject <SWGApi>

extern NSString* kSWGTrunksApiErrorDomain;
extern NSInteger kSWGTrunksApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Add a trunk record with SIP information
/// For more on the input fields, see Account Trunks.
///
/// @param accountId Account ID
/// @param data Trunk data
/// 
///  code:201 message:"Created",
///  code:401 message:"Unauthorized access",
///  code:403 message:"Forbidden",
///  code:422 message:"Invalid Data"
///
/// @return SWGTrunkFull*
-(NSNumber*) createAccountTrunkWithAccountId: (NSNumber*) accountId
    data: (SWGCreateTrunkParams*) data
    completionHandler: (void (^)(SWGTrunkFull* output, NSError* error)) handler;


/// Delete a trunk from account
/// This service deletes a trunk from the account. For more on the properties of trunks, see Account Trunks.
///
/// @param accountId Account ID
/// @param trunkId Trunk ID
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized access",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:409 message:"Conflict"
///
/// @return SWGDeleteTrunk*
-(NSNumber*) deleteAccountTrunkWithAccountId: (NSNumber*) accountId
    trunkId: (NSNumber*) trunkId
    completionHandler: (void (^)(SWGDeleteTrunk* output, NSError* error)) handler;


/// Show details of an individual trunk
/// This service shows the details of an individual Trunk.
///
/// @param accountId Account ID
/// @param trunkId Trunk ID
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized access",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return SWGTrunkFull*
-(NSNumber*) getAccountTrunkWithAccountId: (NSNumber*) accountId
    trunkId: (NSNumber*) trunkId
    completionHandler: (void (^)(SWGTrunkFull* output, NSError* error)) handler;


/// Get a list of trunks for an account
/// See Account Trunks for more info on the properties.
///
/// @param accountId Account ID
/// @param filtersId ID filter (optional)
/// @param filtersName Name filter (optional)
/// @param sortId ID sorting (optional)
/// @param sortName Name sorting (optional)
/// @param limit Max results (optional)
/// @param offset Results to skip (optional)
/// @param fields Field set (optional)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized access",
///  code:403 message:"Forbidden"
///
/// @return SWGListTrunksFull*
-(NSNumber*) listAccountTrunksWithAccountId: (NSNumber*) accountId
    filtersId: (NSArray<NSString*>*) filtersId
    filtersName: (NSArray<NSString*>*) filtersName
    sortId: (NSString*) sortId
    sortName: (NSString*) sortName
    limit: (NSNumber*) limit
    offset: (NSNumber*) offset
    fields: (NSString*) fields
    completionHandler: (void (^)(SWGListTrunksFull* output, NSError* error)) handler;


/// Replace parameters in a trunk
/// For more on the input fields, see Account Trunks.
///
/// @param accountId Account ID
/// @param trunkId Trunk ID
/// @param data Trunk data
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized access",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found",
///  code:422 message:"Invalid Data"
///
/// @return SWGTrunkFull*
-(NSNumber*) replaceAccountTrunkWithAccountId: (NSNumber*) accountId
    trunkId: (NSNumber*) trunkId
    data: (SWGCreateTrunkParams*) data
    completionHandler: (void (^)(SWGTrunkFull* output, NSError* error)) handler;



@end
